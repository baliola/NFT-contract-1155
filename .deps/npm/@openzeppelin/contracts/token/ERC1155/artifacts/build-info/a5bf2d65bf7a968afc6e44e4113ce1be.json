{
	"id": "a5bf2d65bf7a968afc6e44e4113ce1be",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\nimport \"../../utils/Strings.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 _tokenId) public view virtual override returns (string memory) {\n        return _uri;\n        \n        //Commented because new dynamic URI setter on main contract\n        // return string(\n        //     abi.encodePacked(\n        //        _uri,\n        //        Strings.toString(_tokenId),\n        //        \".json\"\n        //     )\n        // );\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":589:15581  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1188  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1168:1181  _setURI(uri_) */\n  tag_6\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1176:1180  uri_ */\n  dup2\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1168:1175  _setURI */\n  shl(0x20, tag_7)\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1168:1181  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1188  constructor(string memory uri_) {... */\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":589:15581  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8242:8328  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8315:8321  newuri */\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8308:8312  _uri */\n  0x02\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8308:8321  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8242:8328  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":589:15581  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_24:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_26\n    /* \"#utility.yul\":137:186   */\n  tag_27\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":121:187   */\n  tag_29\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":262:374   */\ntag_30:\n    /* \"#utility.yul\":383:422   */\n  tag_33\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_35:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_38\n  tag_39\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":531:653   */\ntag_37:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_40\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1333   */\ntag_3:\n    /* \"#utility.yul\":889:895   */\n  0x00\n    /* \"#utility.yul\":938:940   */\n  0x20\n    /* \"#utility.yul\":926:935   */\n  dup3\n    /* \"#utility.yul\":917:924   */\n  dup5\n    /* \"#utility.yul\":913:936   */\n  sub\n    /* \"#utility.yul\":909:941   */\n  slt\n    /* \"#utility.yul\":906:1025   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":944:1023   */\n  tag_43\n  tag_44\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":906:1025   */\ntag_42:\n    /* \"#utility.yul\":1085:1086   */\n  0x00\n    /* \"#utility.yul\":1074:1083   */\n  dup3\n    /* \"#utility.yul\":1070:1087   */\n  add\n    /* \"#utility.yul\":1064:1088   */\n  mload\n    /* \"#utility.yul\":1115:1133   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1107:1113   */\n  dup2\n    /* \"#utility.yul\":1104:1134   */\n  gt\n    /* \"#utility.yul\":1101:1218   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1137:1216   */\n  tag_46\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1101:1218   */\ntag_45:\n    /* \"#utility.yul\":1242:1316   */\n  tag_48\n    /* \"#utility.yul\":1308:1315   */\n  dup5\n    /* \"#utility.yul\":1299:1305   */\n  dup3\n    /* \"#utility.yul\":1288:1297   */\n  dup6\n    /* \"#utility.yul\":1284:1306   */\n  add\n    /* \"#utility.yul\":1242:1316   */\n  tag_35\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1232:1316   */\n  swap2\n  pop\n    /* \"#utility.yul\":1035:1326   */\n  pop\n    /* \"#utility.yul\":809:1333   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1339:1468   */\ntag_29:\n    /* \"#utility.yul\":1373:1379   */\n  0x00\n    /* \"#utility.yul\":1400:1420   */\n  tag_50\n  tag_51\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1390:1420   */\n  swap1\n  pop\n    /* \"#utility.yul\":1429:1462   */\n  tag_52\n    /* \"#utility.yul\":1457:1461   */\n  dup3\n    /* \"#utility.yul\":1449:1455   */\n  dup3\n    /* \"#utility.yul\":1429:1462   */\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1339:1468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1474:1549   */\ntag_51:\n    /* \"#utility.yul\":1507:1513   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x40\n    /* \"#utility.yul\":1534:1543   */\n  mload\n    /* \"#utility.yul\":1524:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1474:1549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1555:1863   */\ntag_28:\n    /* \"#utility.yul\":1617:1621   */\n  0x00\n    /* \"#utility.yul\":1707:1725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1696:1726   */\n  gt\n    /* \"#utility.yul\":1693:1749   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1729:1747   */\n  tag_57\n  tag_58\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1693:1749   */\ntag_56:\n    /* \"#utility.yul\":1767:1796   */\n  tag_59\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1767:1796   */\n  tag_60\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1759:1796   */\n  swap1\n  pop\n    /* \"#utility.yul\":1851:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1849   */\n  dup2\n    /* \"#utility.yul\":1841:1856   */\n  add\n    /* \"#utility.yul\":1833:1856   */\n  swap1\n  pop\n    /* \"#utility.yul\":1555:1863   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1869:2176   */\ntag_34:\n    /* \"#utility.yul\":1937:1938   */\n  0x00\n    /* \"#utility.yul\":1947:2060   */\ntag_62:\n    /* \"#utility.yul\":1961:1967   */\n  dup4\n    /* \"#utility.yul\":1958:1959   */\n  dup2\n    /* \"#utility.yul\":1955:1968   */\n  lt\n    /* \"#utility.yul\":1947:2060   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2046:2047   */\n  dup1\n    /* \"#utility.yul\":2041:2044   */\n  dup3\n    /* \"#utility.yul\":2037:2048   */\n  add\n    /* \"#utility.yul\":2031:2049   */\n  mload\n    /* \"#utility.yul\":2027:2028   */\n  dup2\n    /* \"#utility.yul\":2022:2025   */\n  dup5\n    /* \"#utility.yul\":2018:2029   */\n  add\n    /* \"#utility.yul\":2011:2050   */\n  mstore\n    /* \"#utility.yul\":1983:1985   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  dup2\n    /* \"#utility.yul\":1976:1986   */\n  add\n    /* \"#utility.yul\":1971:1986   */\n  swap1\n  pop\n    /* \"#utility.yul\":1947:2060   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2078:2084   */\n  dup4\n    /* \"#utility.yul\":2075:2076   */\n  dup2\n    /* \"#utility.yul\":2072:2085   */\n  gt\n    /* \"#utility.yul\":2069:2170   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2149:2155   */\n  dup5\n    /* \"#utility.yul\":2144:2147   */\n  dup5\n    /* \"#utility.yul\":2140:2156   */\n  add\n    /* \"#utility.yul\":2133:2160   */\n  mstore\n    /* \"#utility.yul\":2069:2170   */\ntag_65:\n    /* \"#utility.yul\":1918:2176   */\n  pop\n    /* \"#utility.yul\":1869:2176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2182:2502   */\ntag_13:\n    /* \"#utility.yul\":2226:2232   */\n  0x00\n    /* \"#utility.yul\":2263:2264   */\n  0x02\n    /* \"#utility.yul\":2257:2261   */\n  dup3\n    /* \"#utility.yul\":2253:2265   */\n  div\n    /* \"#utility.yul\":2243:2265   */\n  swap1\n  pop\n    /* \"#utility.yul\":2310:2311   */\n  0x01\n    /* \"#utility.yul\":2304:2308   */\n  dup3\n    /* \"#utility.yul\":2300:2312   */\n  and\n    /* \"#utility.yul\":2331:2349   */\n  dup1\n    /* \"#utility.yul\":2321:2402   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2387:2391   */\n  0x7f\n    /* \"#utility.yul\":2379:2385   */\n  dup3\n    /* \"#utility.yul\":2375:2392   */\n  and\n    /* \"#utility.yul\":2365:2392   */\n  swap2\n  pop\n    /* \"#utility.yul\":2321:2402   */\ntag_67:\n    /* \"#utility.yul\":2449:2451   */\n  0x20\n    /* \"#utility.yul\":2441:2447   */\n  dup3\n    /* \"#utility.yul\":2438:2452   */\n  lt\n    /* \"#utility.yul\":2418:2436   */\n  dup2\n    /* \"#utility.yul\":2415:2453   */\n  eq\n    /* \"#utility.yul\":2412:2496   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2468:2486   */\n  tag_69\n  tag_70\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2412:2496   */\ntag_68:\n    /* \"#utility.yul\":2233:2502   */\n  pop\n    /* \"#utility.yul\":2182:2502   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2508:2789   */\ntag_53:\n    /* \"#utility.yul\":2591:2618   */\n  tag_72\n    /* \"#utility.yul\":2613:2617   */\n  dup3\n    /* \"#utility.yul\":2591:2618   */\n  tag_60\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2583:2589   */\n  dup2\n    /* \"#utility.yul\":2579:2619   */\n  add\n    /* \"#utility.yul\":2721:2727   */\n  dup2\n    /* \"#utility.yul\":2709:2719   */\n  dup2\n    /* \"#utility.yul\":2706:2728   */\n  lt\n    /* \"#utility.yul\":2685:2703   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2673:2683   */\n  dup3\n    /* \"#utility.yul\":2670:2704   */\n  gt\n    /* \"#utility.yul\":2667:2729   */\n  or\n    /* \"#utility.yul\":2664:2752   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2732:2750   */\n  tag_74\n  tag_58\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2664:2752   */\ntag_73:\n    /* \"#utility.yul\":2772:2782   */\n  dup1\n    /* \"#utility.yul\":2768:2770   */\n  0x40\n    /* \"#utility.yul\":2761:2783   */\n  mstore\n    /* \"#utility.yul\":2551:2789   */\n  pop\n    /* \"#utility.yul\":2508:2789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2795:2975   */\ntag_70:\n    /* \"#utility.yul\":2843:2920   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2840:2841   */\n  0x00\n    /* \"#utility.yul\":2833:2921   */\n  mstore\n    /* \"#utility.yul\":2940:2944   */\n  0x22\n    /* \"#utility.yul\":2937:2938   */\n  0x04\n    /* \"#utility.yul\":2930:2945   */\n  mstore\n    /* \"#utility.yul\":2964:2968   */\n  0x24\n    /* \"#utility.yul\":2961:2962   */\n  0x00\n    /* \"#utility.yul\":2954:2969   */\n  revert\n    /* \"#utility.yul\":2981:3161   */\ntag_58:\n    /* \"#utility.yul\":3029:3106   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3026:3027   */\n  0x00\n    /* \"#utility.yul\":3019:3107   */\n  mstore\n    /* \"#utility.yul\":3126:3130   */\n  0x41\n    /* \"#utility.yul\":3123:3124   */\n  0x04\n    /* \"#utility.yul\":3116:3131   */\n  mstore\n    /* \"#utility.yul\":3150:3154   */\n  0x24\n    /* \"#utility.yul\":3147:3148   */\n  0x00\n    /* \"#utility.yul\":3140:3155   */\n  revert\n    /* \"#utility.yul\":3167:3284   */\ntag_39:\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3290:3407   */\ntag_32:\n    /* \"#utility.yul\":3399:3400   */\n  0x00\n    /* \"#utility.yul\":3396:3397   */\n  dup1\n    /* \"#utility.yul\":3389:3401   */\n  revert\n    /* \"#utility.yul\":3413:3530   */\ntag_47:\n    /* \"#utility.yul\":3522:3523   */\n  0x00\n    /* \"#utility.yul\":3519:3520   */\n  dup1\n    /* \"#utility.yul\":3512:3524   */\n  revert\n    /* \"#utility.yul\":3536:3653   */\ntag_44:\n    /* \"#utility.yul\":3645:3646   */\n  0x00\n    /* \"#utility.yul\":3642:3643   */\n  dup1\n    /* \"#utility.yul\":3635:3647   */\n  revert\n    /* \"#utility.yul\":3659:3761   */\ntag_60:\n    /* \"#utility.yul\":3700:3706   */\n  0x00\n    /* \"#utility.yul\":3751:3753   */\n  0x1f\n    /* \"#utility.yul\":3747:3754   */\n  not\n    /* \"#utility.yul\":3742:3744   */\n  0x1f\n    /* \"#utility.yul\":3735:3740   */\n  dup4\n    /* \"#utility.yul\":3731:3745   */\n  add\n    /* \"#utility.yul\":3727:3755   */\n  and\n    /* \"#utility.yul\":3717:3755   */\n  swap1\n  pop\n    /* \"#utility.yul\":3659:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":589:15581  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":589:15581  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2476:2704  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1255:1560  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1959:2334  function uri(uint256 _tokenId) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4351:4781  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2861:3369  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3437:3590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3657:3823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3890:4279  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2476:2704  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2562:2569  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2608:2609  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2589:2610  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2589:2596  account */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2589:2610  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2581:2658  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2675:2684  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2675:2688  _balances[id] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2685:2687  id */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2675:2688  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2675:2697  _balances[id][account] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2689:2696  account */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2675:2697  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2668:2697  return _balances[id][account] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2476:2704  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1255:1560  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1357:1361  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1407:1433  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1392:1433  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1392:1403  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1392:1433  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1392:1501  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1464:1501  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1449:1501  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1449:1460  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1449:1501  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1392:1501  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1392:1553  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1553  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1541:1552  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1540  super.supportsInterface */\n      tag_61\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1553  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1392:1553  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_59:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1553  return... */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1255:1560  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1959:2334  function uri(uint256 _tokenId) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2028:2041  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2060:2064  _uri */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2053:2064  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1959:2334  function uri(uint256 _tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4351:4781  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4584:4596  _msgSender() */\n      tag_70\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4584:4594  _msgSender */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4584:4596  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4576:4596  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4576:4580  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4576:4596  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4576:4636  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4600:4636  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4617:4621  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4623:4635  _msgSender() */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4623:4633  _msgSender */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4623:4635  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4600:4616  isApprovedForAll */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4600:4636  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4576:4636  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4555:4712  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4722:4774  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4745:4749  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4751:4753  to */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4755:4758  ids */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4760:4767  amounts */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4769:4773  data */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4722:4744  _safeBatchTransferFrom */\n      tag_79\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4722:4774  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4351:4781  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2861:3369  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3028  uint256[] memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3071:3074  ids */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3071:3081  ids.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3052:3060  accounts */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3052:3067  accounts.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3052:3081  accounts.length == ids.length */\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3044:3127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3138:3168  uint256[] memory batchBalances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3185:3193  accounts */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3185:3200  accounts.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3171:3201  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3138:3201  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3217:3226  uint256 i */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3212:3332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3236:3244  accounts */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3236:3251  accounts.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3232:3233  i */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3232:3251  i < accounts.length */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3212:3332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3291:3321  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3301:3309  accounts */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3310:3311  i */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3301:3312  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3314:3317  ids */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3318:3319  i */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3314:3320  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3291:3300  balanceOf */\n      tag_15\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3291:3321  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3285  batchBalances */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3286:3287  i */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3288  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3321  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3253:3256  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3212:3332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3349:3362  batchBalances */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3342:3362  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2861:3369  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3437:3590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3531:3583  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3550:3562  _msgSender() */\n      tag_103\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3550:3560  _msgSender */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3550:3562  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3564:3572  operator */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3574:3582  approved */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3531:3549  _setApprovalForAll */\n      tag_104\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3531:3583  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3437:3590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3657:3823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3756:3760  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3779:3797  _operatorApprovals */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3779:3806  _operatorApprovals[account] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3805  account */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3779:3806  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3779:3816  _operatorApprovals[account][operator] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3807:3815  operator */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3779:3816  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3772:3816  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3657:3823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3890:4279  function safeTransferFrom(... */\n    tag_52:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4098:4110  _msgSender() */\n      tag_107\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4098:4108  _msgSender */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4098:4110  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4090:4110  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4090:4094  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4090:4110  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4090:4150  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4114:4150  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4131:4135  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4137:4149  _msgSender() */\n      tag_110\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4137:4147  _msgSender */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4137:4149  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4114:4130  isApprovedForAll */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4114:4150  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4090:4150  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4069:4217  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4227:4272  _safeTransferFrom(from, to, id, amount, data) */\n      tag_114\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4245:4249  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4253  to */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4255:4257  id */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  amount */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4267:4271  data */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4227:4244  _safeTransferFrom */\n      tag_115\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4227:4272  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_114:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3890:4279  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6374:7419  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6594:6601  amounts */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6594:6608  amounts.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6580:6583  ids */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6580:6590  ids.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6580:6608  ids.length == amounts.length */\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6572:6653  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6685:6686  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6671:6687  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6671:6673  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6671:6687  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6663:6729  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6756  address operator */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6759:6771  _msgSender() */\n      tag_125\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6759:6769  _msgSender */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6759:6771  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6771  address operator = _msgSender() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6842  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_126\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6803:6811  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6813:6817  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6821  to */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6823:6826  ids */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6828:6835  amounts */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6837:6841  data */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6802  _beforeTokenTransfer */\n      tag_127\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6842  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_126:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6858:6867  uint256 i */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6853:7264  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6877:6880  ids */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6877:6887  ids.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6873:6874  i */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6873:6887  i < ids.length */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6853:7264  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6908:6918  uint256 id */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6921:6924  ids */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6925:6926  i */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6921:6927  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6908:6927  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6941:6955  uint256 amount */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6958:6965  amounts */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6966:6967  i */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6958:6968  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6941:6968  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6983:7002  uint256 fromBalance */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7005:7014  _balances */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7005:7018  _balances[id] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7015:7017  id */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7005:7018  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7005:7024  _balances[id][from] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7019:7023  from */\n      dup12\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7005:7024  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6983:7024  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7061:7067  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7046:7057  fromBalance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7046:7067  fromBalance >= amount */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7038:7114  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7192:7198  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7178:7189  fromBalance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7178:7198  fromBalance - amount */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7156:7165  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7156:7169  _balances[id] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7166:7168  id */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7156:7169  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7156:7175  _balances[id][from] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7170:7174  from */\n      dup13\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7156:7175  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7156:7198  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7247:7253  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7235  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7239  _balances[id] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7236:7238  id */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7239  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7243  _balances[id][to] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7240:7242  to */\n      dup12\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7243  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7226:7253  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6894:7264  {... */\n      pop\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6889:6892  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6853:7264  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7309:7311  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7279:7326  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7303:7307  from */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7279:7326  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7293:7301  operator */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7279:7326  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7313:7316  ids */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7318:7325  amounts */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7279:7326  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7337:7412  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7373:7381  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7383:7387  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7389:7391  to */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7393:7396  ids */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7398:7405  amounts */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7407:7411  data */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7337:7372  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7337:7412  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6562:7419  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6374:7419  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12380:12703  function _setApprovalForAll(... */\n    tag_104:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12530:12538  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12521:12538  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12521:12526  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12521:12538  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12513:12584  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12632:12640  approved */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12612  _operatorApprovals */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12619  _operatorApprovals[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12613:12618  owner */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12619  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12629  _operatorApprovals[owner][operator] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12620:12628  operator */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12629  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12640  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12677:12685  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12655:12696  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12670:12675  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12655:12696  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12687:12695  approved */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12655:12696  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12380:12703  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:6028  function _safeTransferFrom(... */\n    tag_115:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5426:5427  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5412:5428  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5412:5414  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5412:5428  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5404:5470  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_124\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5481:5497  address operator */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5500:5512  _msgSender() */\n      tag_153\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5500:5510  _msgSender */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5500:5512  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5481:5512  address operator = _msgSender() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5523:5619  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_154\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5544:5552  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5554:5558  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5560:5562  to */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5564:5585  _asSingletonArray(id) */\n      tag_155\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5584  id */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5564:5581  _asSingletonArray */\n      tag_156\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5564:5585  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5587:5612  _asSingletonArray(amount) */\n      tag_157\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5605:5611  amount */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5587:5604  _asSingletonArray */\n      tag_156\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5587:5612  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5614:5618  data */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5523:5543  _beforeTokenTransfer */\n      tag_127\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5523:5619  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_154:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5630:5649  uint256 fromBalance */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5652:5661  _balances */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5652:5665  _balances[id] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5662:5664  id */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5652:5665  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5652:5671  _balances[id][from] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5666:5670  from */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5652:5671  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5630:5671  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5704:5710  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5689:5700  fromBalance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5689:5710  fromBalance >= amount */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5681:5757  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_137\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5827:5833  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5813:5824  fromBalance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5813:5833  fromBalance - amount */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5791:5800  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5791:5804  _balances[id] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5801:5803  id */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5791:5804  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5791:5810  _balances[id][from] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5805:5809  from */\n      dup10\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5791:5810  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5791:5833  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5874:5880  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5862  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5866  _balances[id] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5866  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5870  _balances[id][to] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5867:5869  to */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5870  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5853:5880  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_160\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5927:5929  to */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5896:5942  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5921:5925  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5896:5942  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5911:5919  operator */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5896:5942  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5931:5933  id */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5935:5941  amount */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5896:5942  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_161\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5953:6021  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_163\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5984:5992  operator */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5994:5998  from */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6000:6002  to */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6004:6006  id */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6008:6014  amount */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6016:6020  data */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5953:5983  _doSafeTransferAcceptanceCheck */\n      tag_164\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5953:6021  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_163:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5394:6028  {... */\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5231:6028  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13637:13851  function _beforeTokenTransfer(... */\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14588:15380  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14820:14835  to.isContract() */\n      tag_167\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14820:14822  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14820:14833  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_168\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14820:14835  to.isContract() */\n      jump\t// in\n    tag_167:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14816:15374  if (to.isContract()) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14872:14874  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14855:14898  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14899:14907  operator */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14909:14913  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14915:14918  ids */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14920:14927  amounts */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14929:14933  data */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14855:14934  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x01\n    tag_173:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14851:15364  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_176\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_179\n      jumpi\n      pop\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      dup1\n      tag_184\n      jumpi\n      pop\n      jump(tag_178)\n    tag_184:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15240:15246  reason */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15233:15247  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14851:15364  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n      pop\n    tag_178:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15287:15349  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14851:15364  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_176:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15025:15073  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15013:15073  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15013:15021  response */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15013:15073  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15009:15166  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_189\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15097:15147  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15009:15166  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_189:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14935:15180  returns (... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14816:15374  if (to.isContract()) {... */\n    tag_169:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14588:15380  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15386:15579  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15452:15468  uint256[] memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15480:15502  uint256[] memory array */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15519:15520  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15505:15521  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_193\n      jumpi\n      tag_194\n      tag_86\n      jump\t// in\n    tag_194:\n    tag_193:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_195\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_195:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15480:15521  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15542:15549  element */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15531:15536  array */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15538  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15531:15539  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_197\n      tag_94\n      jump\t// in\n    tag_197:\n    tag_196:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15531:15549  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15567:15572  array */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15560:15572  return array */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15386:15579  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13857:14582  function _doSafeTransferAcceptanceCheck(... */\n    tag_164:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14079  to.isContract() */\n      tag_199\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14066  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14077  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_168\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14079  to.isContract() */\n      jump\t// in\n    tag_199:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14576  if (to.isContract()) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14116:14118  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14099:14137  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14138:14146  operator */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14148:14152  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14154:14156  id */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14158:14164  amount */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14166:14170  data */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14099:14171  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_205:\n      0x01\n    tag_204:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14095:14566  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_206\n      jumpi\n      tag_210\n      tag_181\n      jump\t// in\n    tag_210:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_209\n      jumpi\n      pop\n      tag_211\n      tag_183\n      jump\t// in\n    tag_211:\n      dup1\n      tag_212\n      jumpi\n      pop\n      jump(tag_208)\n    tag_212:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14442:14448  reason */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14435:14449  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14095:14566  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_209:\n      pop\n    tag_208:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14489:14551  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_187\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14095:14566  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_206:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14232:14275  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14220:14275  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14220:14228  response */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14220:14275  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14216:14368  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_216\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14299:14349  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_191\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14216:14368  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_216:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14172:14382  returns (bytes4 response) {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14576  if (to.isContract()) {... */\n    tag_200:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13857:14582  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_168:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_220:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_222\n        /* \"#utility.yul\":161:225   */\n      tag_223\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":145:226   */\n      tag_225\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_227\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":350:493   */\n    tag_226:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_229:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_232\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_229)\n    tag_231:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_234:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_236\n        /* \"#utility.yul\":906:970   */\n      tag_237\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":890:971   */\n      tag_225\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_240\n      tag_228\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1095:1238   */\n    tag_239:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_241:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_244\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_241)\n    tag_243:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1907   */\n    tag_246:\n        /* \"#utility.yul\":1574:1579   */\n      0x00\n        /* \"#utility.yul\":1599:1664   */\n      tag_248\n        /* \"#utility.yul\":1615:1663   */\n      tag_249\n        /* \"#utility.yul\":1656:1662   */\n      dup5\n        /* \"#utility.yul\":1615:1663   */\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1599:1664   */\n      tag_225\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1590:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1693   */\n      dup3\n        /* \"#utility.yul\":1680:1685   */\n      dup2\n        /* \"#utility.yul\":1673:1694   */\n      mstore\n        /* \"#utility.yul\":1725:1729   */\n      0x20\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1714:1730   */\n      add\n        /* \"#utility.yul\":1763:1766   */\n      dup5\n        /* \"#utility.yul\":1754:1760   */\n      dup5\n        /* \"#utility.yul\":1749:1752   */\n      dup5\n        /* \"#utility.yul\":1745:1761   */\n      add\n        /* \"#utility.yul\":1742:1767   */\n      gt\n        /* \"#utility.yul\":1739:1851   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":1770:1849   */\n      tag_252\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1739:1851   */\n    tag_251:\n        /* \"#utility.yul\":1860:1901   */\n      tag_254\n        /* \"#utility.yul\":1894:1900   */\n      dup5\n        /* \"#utility.yul\":1889:1892   */\n      dup3\n        /* \"#utility.yul\":1884:1887   */\n      dup6\n        /* \"#utility.yul\":1860:1901   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1580:1907   */\n      pop\n        /* \"#utility.yul\":1497:1907   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2052   */\n    tag_233:\n        /* \"#utility.yul\":1959:1964   */\n      0x00\n        /* \"#utility.yul\":1997:2003   */\n      dup2\n        /* \"#utility.yul\":1984:2004   */\n      calldataload\n        /* \"#utility.yul\":1975:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2046   */\n      tag_257\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2013:2046   */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1913:2052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2075:2445   */\n    tag_259:\n        /* \"#utility.yul\":2146:2151   */\n      0x00\n        /* \"#utility.yul\":2195:2198   */\n      dup3\n        /* \"#utility.yul\":2188:2192   */\n      0x1f\n        /* \"#utility.yul\":2180:2186   */\n      dup4\n        /* \"#utility.yul\":2176:2193   */\n      add\n        /* \"#utility.yul\":2172:2199   */\n      slt\n        /* \"#utility.yul\":2162:2284   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":2203:2282   */\n      tag_262\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2162:2284   */\n    tag_261:\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2345:2439   */\n      tag_264\n        /* \"#utility.yul\":2435:2438   */\n      dup5\n        /* \"#utility.yul\":2427:2433   */\n      dup3\n        /* \"#utility.yul\":2420:2424   */\n      0x20\n        /* \"#utility.yul\":2412:2418   */\n      dup7\n        /* \"#utility.yul\":2408:2425   */\n      add\n        /* \"#utility.yul\":2345:2439   */\n      tag_220\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2336:2439   */\n      swap2\n      pop\n        /* \"#utility.yul\":2152:2445   */\n      pop\n        /* \"#utility.yul\":2075:2445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2838   */\n    tag_265:\n        /* \"#utility.yul\":2539:2544   */\n      0x00\n        /* \"#utility.yul\":2588:2591   */\n      dup3\n        /* \"#utility.yul\":2581:2585   */\n      0x1f\n        /* \"#utility.yul\":2573:2579   */\n      dup4\n        /* \"#utility.yul\":2569:2586   */\n      add\n        /* \"#utility.yul\":2565:2592   */\n      slt\n        /* \"#utility.yul\":2555:2677   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2596:2675   */\n      tag_268\n      tag_263\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2555:2677   */\n    tag_267:\n        /* \"#utility.yul\":2713:2719   */\n      dup2\n        /* \"#utility.yul\":2700:2720   */\n      calldataload\n        /* \"#utility.yul\":2738:2832   */\n      tag_269\n        /* \"#utility.yul\":2828:2831   */\n      dup5\n        /* \"#utility.yul\":2820:2826   */\n      dup3\n        /* \"#utility.yul\":2813:2817   */\n      0x20\n        /* \"#utility.yul\":2805:2811   */\n      dup7\n        /* \"#utility.yul\":2801:2818   */\n      add\n        /* \"#utility.yul\":2738:2832   */\n      tag_234\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2729:2832   */\n      swap2\n      pop\n        /* \"#utility.yul\":2545:2838   */\n      pop\n        /* \"#utility.yul\":2468:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2977   */\n    tag_270:\n        /* \"#utility.yul\":2887:2892   */\n      0x00\n        /* \"#utility.yul\":2925:2931   */\n      dup2\n        /* \"#utility.yul\":2912:2932   */\n      calldataload\n        /* \"#utility.yul\":2903:2932   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:2971   */\n      tag_272\n        /* \"#utility.yul\":2965:2970   */\n      dup2\n        /* \"#utility.yul\":2941:2971   */\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2844:2977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3120   */\n    tag_274:\n        /* \"#utility.yul\":3028:3033   */\n      0x00\n        /* \"#utility.yul\":3066:3072   */\n      dup2\n        /* \"#utility.yul\":3053:3073   */\n      calldataload\n        /* \"#utility.yul\":3044:3073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3114   */\n      tag_276\n        /* \"#utility.yul\":3108:3113   */\n      dup2\n        /* \"#utility.yul\":3082:3114   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2983:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3267   */\n    tag_278:\n        /* \"#utility.yul\":3182:3187   */\n      0x00\n        /* \"#utility.yul\":3213:3219   */\n      dup2\n        /* \"#utility.yul\":3207:3220   */\n      mload\n        /* \"#utility.yul\":3198:3220   */\n      swap1\n      pop\n        /* \"#utility.yul\":3229:3261   */\n      tag_280\n        /* \"#utility.yul\":3255:3260   */\n      dup2\n        /* \"#utility.yul\":3229:3261   */\n      tag_277\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3126:3267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3624   */\n    tag_281:\n        /* \"#utility.yul\":3341:3346   */\n      0x00\n        /* \"#utility.yul\":3390:3393   */\n      dup3\n        /* \"#utility.yul\":3383:3387   */\n      0x1f\n        /* \"#utility.yul\":3375:3381   */\n      dup4\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3367:3394   */\n      slt\n        /* \"#utility.yul\":3357:3479   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":3398:3477   */\n      tag_284\n      tag_263\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3357:3479   */\n    tag_283:\n        /* \"#utility.yul\":3515:3521   */\n      dup2\n        /* \"#utility.yul\":3502:3522   */\n      calldataload\n        /* \"#utility.yul\":3540:3618   */\n      tag_285\n        /* \"#utility.yul\":3614:3617   */\n      dup5\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3599:3603   */\n      0x20\n        /* \"#utility.yul\":3591:3597   */\n      dup7\n        /* \"#utility.yul\":3587:3604   */\n      add\n        /* \"#utility.yul\":3540:3618   */\n      tag_246\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3531:3618   */\n      swap2\n      pop\n        /* \"#utility.yul\":3347:3624   */\n      pop\n        /* \"#utility.yul\":3286:3624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:3769   */\n    tag_245:\n        /* \"#utility.yul\":3676:3681   */\n      0x00\n        /* \"#utility.yul\":3714:3720   */\n      dup2\n        /* \"#utility.yul\":3701:3721   */\n      calldataload\n        /* \"#utility.yul\":3692:3721   */\n      swap1\n      pop\n        /* \"#utility.yul\":3730:3763   */\n      tag_287\n        /* \"#utility.yul\":3757:3762   */\n      dup2\n        /* \"#utility.yul\":3730:3763   */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3630:3769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3775:4249   */\n    tag_46:\n        /* \"#utility.yul\":3843:3849   */\n      0x00\n        /* \"#utility.yul\":3851:3857   */\n      dup1\n        /* \"#utility.yul\":3900:3902   */\n      0x40\n        /* \"#utility.yul\":3888:3897   */\n      dup4\n        /* \"#utility.yul\":3879:3886   */\n      dup6\n        /* \"#utility.yul\":3875:3898   */\n      sub\n        /* \"#utility.yul\":3871:3903   */\n      slt\n        /* \"#utility.yul\":3868:3987   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":3906:3985   */\n      tag_291\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3868:3987   */\n    tag_290:\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4051:4104   */\n      tag_293\n        /* \"#utility.yul\":4096:4103   */\n      dup6\n        /* \"#utility.yul\":4087:4093   */\n      dup3\n        /* \"#utility.yul\":4076:4085   */\n      dup7\n        /* \"#utility.yul\":4072:4094   */\n      add\n        /* \"#utility.yul\":4051:4104   */\n      tag_233\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4041:4104   */\n      swap3\n      pop\n        /* \"#utility.yul\":3997:4114   */\n      pop\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4179:4232   */\n      tag_294\n        /* \"#utility.yul\":4224:4231   */\n      dup6\n        /* \"#utility.yul\":4215:4221   */\n      dup3\n        /* \"#utility.yul\":4204:4213   */\n      dup7\n        /* \"#utility.yul\":4200:4222   */\n      add\n        /* \"#utility.yul\":4179:4232   */\n      tag_233\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4169:4232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4124:4242   */\n      pop\n        /* \"#utility.yul\":3775:4249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:5764   */\n    tag_32:\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup1\n        /* \"#utility.yul\":4425:4431   */\n      0x00\n        /* \"#utility.yul\":4433:4439   */\n      dup1\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4490:4493   */\n      0xa0\n        /* \"#utility.yul\":4478:4487   */\n      dup7\n        /* \"#utility.yul\":4469:4476   */\n      dup9\n        /* \"#utility.yul\":4465:4488   */\n      sub\n        /* \"#utility.yul\":4461:4494   */\n      slt\n        /* \"#utility.yul\":4458:4578   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":4497:4576   */\n      tag_297\n      tag_292\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4458:4578   */\n    tag_296:\n        /* \"#utility.yul\":4617:4618   */\n      0x00\n        /* \"#utility.yul\":4642:4695   */\n      tag_298\n        /* \"#utility.yul\":4687:4694   */\n      dup9\n        /* \"#utility.yul\":4678:4684   */\n      dup3\n        /* \"#utility.yul\":4667:4676   */\n      dup10\n        /* \"#utility.yul\":4663:4685   */\n      add\n        /* \"#utility.yul\":4642:4695   */\n      tag_233\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4632:4695   */\n      swap6\n      pop\n        /* \"#utility.yul\":4588:4705   */\n      pop\n        /* \"#utility.yul\":4744:4746   */\n      0x20\n        /* \"#utility.yul\":4770:4823   */\n      tag_299\n        /* \"#utility.yul\":4815:4822   */\n      dup9\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4795:4804   */\n      dup10\n        /* \"#utility.yul\":4791:4813   */\n      add\n        /* \"#utility.yul\":4770:4823   */\n      tag_233\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4760:4823   */\n      swap5\n      pop\n        /* \"#utility.yul\":4715:4833   */\n      pop\n        /* \"#utility.yul\":4900:4902   */\n      0x40\n        /* \"#utility.yul\":4889:4898   */\n      dup7\n        /* \"#utility.yul\":4885:4903   */\n      add\n        /* \"#utility.yul\":4872:4904   */\n      calldataload\n        /* \"#utility.yul\":4931:4949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4923:4929   */\n      dup2\n        /* \"#utility.yul\":4920:4950   */\n      gt\n        /* \"#utility.yul\":4917:5034   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":4953:5032   */\n      tag_301\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4917:5034   */\n    tag_300:\n        /* \"#utility.yul\":5058:5136   */\n      tag_303\n        /* \"#utility.yul\":5128:5135   */\n      dup9\n        /* \"#utility.yul\":5119:5125   */\n      dup3\n        /* \"#utility.yul\":5108:5117   */\n      dup10\n        /* \"#utility.yul\":5104:5126   */\n      add\n        /* \"#utility.yul\":5058:5136   */\n      tag_265\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5048:5136   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:5146   */\n      pop\n        /* \"#utility.yul\":5213:5215   */\n      0x60\n        /* \"#utility.yul\":5202:5211   */\n      dup7\n        /* \"#utility.yul\":5198:5216   */\n      add\n        /* \"#utility.yul\":5185:5217   */\n      calldataload\n        /* \"#utility.yul\":5244:5262   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5236:5242   */\n      dup2\n        /* \"#utility.yul\":5233:5263   */\n      gt\n        /* \"#utility.yul\":5230:5347   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":5266:5345   */\n      tag_305\n      tag_302\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5230:5347   */\n    tag_304:\n        /* \"#utility.yul\":5371:5449   */\n      tag_306\n        /* \"#utility.yul\":5441:5448   */\n      dup9\n        /* \"#utility.yul\":5432:5438   */\n      dup3\n        /* \"#utility.yul\":5421:5430   */\n      dup10\n        /* \"#utility.yul\":5417:5439   */\n      add\n        /* \"#utility.yul\":5371:5449   */\n      tag_265\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5361:5449   */\n      swap3\n      pop\n        /* \"#utility.yul\":5156:5459   */\n      pop\n        /* \"#utility.yul\":5526:5529   */\n      0x80\n        /* \"#utility.yul\":5515:5524   */\n      dup7\n        /* \"#utility.yul\":5511:5530   */\n      add\n        /* \"#utility.yul\":5498:5531   */\n      calldataload\n        /* \"#utility.yul\":5558:5576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5550:5556   */\n      dup2\n        /* \"#utility.yul\":5547:5577   */\n      gt\n        /* \"#utility.yul\":5544:5661   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5580:5659   */\n      tag_308\n      tag_302\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5544:5661   */\n    tag_307:\n        /* \"#utility.yul\":5685:5747   */\n      tag_309\n        /* \"#utility.yul\":5739:5746   */\n      dup9\n        /* \"#utility.yul\":5730:5736   */\n      dup3\n        /* \"#utility.yul\":5719:5728   */\n      dup10\n        /* \"#utility.yul\":5715:5737   */\n      add\n        /* \"#utility.yul\":5685:5747   */\n      tag_281\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5675:5747   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5757   */\n      pop\n        /* \"#utility.yul\":4255:5764   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:6859   */\n    tag_51:\n        /* \"#utility.yul\":5874:5880   */\n      0x00\n        /* \"#utility.yul\":5882:5888   */\n      dup1\n        /* \"#utility.yul\":5890:5896   */\n      0x00\n        /* \"#utility.yul\":5898:5904   */\n      dup1\n        /* \"#utility.yul\":5906:5912   */\n      0x00\n        /* \"#utility.yul\":5955:5958   */\n      0xa0\n        /* \"#utility.yul\":5943:5952   */\n      dup7\n        /* \"#utility.yul\":5934:5941   */\n      dup9\n        /* \"#utility.yul\":5930:5953   */\n      sub\n        /* \"#utility.yul\":5926:5959   */\n      slt\n        /* \"#utility.yul\":5923:6043   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":5962:6041   */\n      tag_312\n      tag_292\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5923:6043   */\n    tag_311:\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6107:6160   */\n      tag_313\n        /* \"#utility.yul\":6152:6159   */\n      dup9\n        /* \"#utility.yul\":6143:6149   */\n      dup3\n        /* \"#utility.yul\":6132:6141   */\n      dup10\n        /* \"#utility.yul\":6128:6150   */\n      add\n        /* \"#utility.yul\":6107:6160   */\n      tag_233\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6097:6160   */\n      swap6\n      pop\n        /* \"#utility.yul\":6053:6170   */\n      pop\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6235:6288   */\n      tag_314\n        /* \"#utility.yul\":6280:6287   */\n      dup9\n        /* \"#utility.yul\":6271:6277   */\n      dup3\n        /* \"#utility.yul\":6260:6269   */\n      dup10\n        /* \"#utility.yul\":6256:6278   */\n      add\n        /* \"#utility.yul\":6235:6288   */\n      tag_233\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6225:6288   */\n      swap5\n      pop\n        /* \"#utility.yul\":6180:6298   */\n      pop\n        /* \"#utility.yul\":6337:6339   */\n      0x40\n        /* \"#utility.yul\":6363:6416   */\n      tag_315\n        /* \"#utility.yul\":6408:6415   */\n      dup9\n        /* \"#utility.yul\":6399:6405   */\n      dup3\n        /* \"#utility.yul\":6388:6397   */\n      dup10\n        /* \"#utility.yul\":6384:6406   */\n      add\n        /* \"#utility.yul\":6363:6416   */\n      tag_245\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6353:6416   */\n      swap4\n      pop\n        /* \"#utility.yul\":6308:6426   */\n      pop\n        /* \"#utility.yul\":6465:6467   */\n      0x60\n        /* \"#utility.yul\":6491:6544   */\n      tag_316\n        /* \"#utility.yul\":6536:6543   */\n      dup9\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6516:6525   */\n      dup10\n        /* \"#utility.yul\":6512:6534   */\n      add\n        /* \"#utility.yul\":6491:6544   */\n      tag_245\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6481:6544   */\n      swap3\n      pop\n        /* \"#utility.yul\":6436:6554   */\n      pop\n        /* \"#utility.yul\":6621:6624   */\n      0x80\n        /* \"#utility.yul\":6610:6619   */\n      dup7\n        /* \"#utility.yul\":6606:6625   */\n      add\n        /* \"#utility.yul\":6593:6626   */\n      calldataload\n        /* \"#utility.yul\":6653:6671   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6645:6651   */\n      dup2\n        /* \"#utility.yul\":6642:6672   */\n      gt\n        /* \"#utility.yul\":6639:6756   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":6675:6754   */\n      tag_318\n      tag_302\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6639:6756   */\n    tag_317:\n        /* \"#utility.yul\":6780:6842   */\n      tag_319\n        /* \"#utility.yul\":6834:6841   */\n      dup9\n        /* \"#utility.yul\":6825:6831   */\n      dup3\n        /* \"#utility.yul\":6814:6823   */\n      dup10\n        /* \"#utility.yul\":6810:6832   */\n      add\n        /* \"#utility.yul\":6780:6842   */\n      tag_281\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6770:6842   */\n      swap2\n      pop\n        /* \"#utility.yul\":6564:6852   */\n      pop\n        /* \"#utility.yul\":5770:6859   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7333   */\n    tag_42:\n        /* \"#utility.yul\":6930:6936   */\n      0x00\n        /* \"#utility.yul\":6938:6944   */\n      dup1\n        /* \"#utility.yul\":6987:6989   */\n      0x40\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6966:6973   */\n      dup6\n        /* \"#utility.yul\":6962:6985   */\n      sub\n        /* \"#utility.yul\":6958:6990   */\n      slt\n        /* \"#utility.yul\":6955:7074   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6993:7072   */\n      tag_322\n      tag_292\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6955:7074   */\n    tag_321:\n        /* \"#utility.yul\":7113:7114   */\n      0x00\n        /* \"#utility.yul\":7138:7191   */\n      tag_323\n        /* \"#utility.yul\":7183:7190   */\n      dup6\n        /* \"#utility.yul\":7174:7180   */\n      dup3\n        /* \"#utility.yul\":7163:7172   */\n      dup7\n        /* \"#utility.yul\":7159:7181   */\n      add\n        /* \"#utility.yul\":7138:7191   */\n      tag_233\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7128:7191   */\n      swap3\n      pop\n        /* \"#utility.yul\":7084:7201   */\n      pop\n        /* \"#utility.yul\":7240:7242   */\n      0x20\n        /* \"#utility.yul\":7266:7316   */\n      tag_324\n        /* \"#utility.yul\":7308:7315   */\n      dup6\n        /* \"#utility.yul\":7299:7305   */\n      dup3\n        /* \"#utility.yul\":7288:7297   */\n      dup7\n        /* \"#utility.yul\":7284:7306   */\n      add\n        /* \"#utility.yul\":7266:7316   */\n      tag_270\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7256:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7211:7326   */\n      pop\n        /* \"#utility.yul\":6865:7333   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7339:7813   */\n    tag_14:\n        /* \"#utility.yul\":7407:7413   */\n      0x00\n        /* \"#utility.yul\":7415:7421   */\n      dup1\n        /* \"#utility.yul\":7464:7466   */\n      0x40\n        /* \"#utility.yul\":7452:7461   */\n      dup4\n        /* \"#utility.yul\":7443:7450   */\n      dup6\n        /* \"#utility.yul\":7439:7462   */\n      sub\n        /* \"#utility.yul\":7435:7467   */\n      slt\n        /* \"#utility.yul\":7432:7551   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":7470:7549   */\n      tag_327\n      tag_292\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7432:7551   */\n    tag_326:\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7615:7668   */\n      tag_328\n        /* \"#utility.yul\":7660:7667   */\n      dup6\n        /* \"#utility.yul\":7651:7657   */\n      dup3\n        /* \"#utility.yul\":7640:7649   */\n      dup7\n        /* \"#utility.yul\":7636:7658   */\n      add\n        /* \"#utility.yul\":7615:7668   */\n      tag_233\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7605:7668   */\n      swap3\n      pop\n        /* \"#utility.yul\":7561:7678   */\n      pop\n        /* \"#utility.yul\":7717:7719   */\n      0x20\n        /* \"#utility.yul\":7743:7796   */\n      tag_329\n        /* \"#utility.yul\":7788:7795   */\n      dup6\n        /* \"#utility.yul\":7779:7785   */\n      dup3\n        /* \"#utility.yul\":7768:7777   */\n      dup7\n        /* \"#utility.yul\":7764:7786   */\n      add\n        /* \"#utility.yul\":7743:7796   */\n      tag_245\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7733:7796   */\n      swap2\n      pop\n        /* \"#utility.yul\":7688:7806   */\n      pop\n        /* \"#utility.yul\":7339:7813   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8713   */\n    tag_36:\n        /* \"#utility.yul\":7937:7943   */\n      0x00\n        /* \"#utility.yul\":7945:7951   */\n      dup1\n        /* \"#utility.yul\":7994:7996   */\n      0x40\n        /* \"#utility.yul\":7982:7991   */\n      dup4\n        /* \"#utility.yul\":7973:7980   */\n      dup6\n        /* \"#utility.yul\":7969:7992   */\n      sub\n        /* \"#utility.yul\":7965:7997   */\n      slt\n        /* \"#utility.yul\":7962:8081   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":8000:8079   */\n      tag_332\n      tag_292\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7962:8081   */\n    tag_331:\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8137:8146   */\n      dup4\n        /* \"#utility.yul\":8133:8150   */\n      add\n        /* \"#utility.yul\":8120:8151   */\n      calldataload\n        /* \"#utility.yul\":8178:8196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8170:8176   */\n      dup2\n        /* \"#utility.yul\":8167:8197   */\n      gt\n        /* \"#utility.yul\":8164:8281   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":8200:8279   */\n      tag_334\n      tag_302\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":8164:8281   */\n    tag_333:\n        /* \"#utility.yul\":8305:8383   */\n      tag_335\n        /* \"#utility.yul\":8375:8382   */\n      dup6\n        /* \"#utility.yul\":8366:8372   */\n      dup3\n        /* \"#utility.yul\":8355:8364   */\n      dup7\n        /* \"#utility.yul\":8351:8373   */\n      add\n        /* \"#utility.yul\":8305:8383   */\n      tag_259\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8295:8383   */\n      swap3\n      pop\n        /* \"#utility.yul\":8091:8393   */\n      pop\n        /* \"#utility.yul\":8460:8462   */\n      0x20\n        /* \"#utility.yul\":8449:8458   */\n      dup4\n        /* \"#utility.yul\":8445:8463   */\n      add\n        /* \"#utility.yul\":8432:8464   */\n      calldataload\n        /* \"#utility.yul\":8491:8509   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8483:8489   */\n      dup2\n        /* \"#utility.yul\":8480:8510   */\n      gt\n        /* \"#utility.yul\":8477:8594   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":8513:8592   */\n      tag_337\n      tag_302\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":8477:8594   */\n    tag_336:\n        /* \"#utility.yul\":8618:8696   */\n      tag_338\n        /* \"#utility.yul\":8688:8695   */\n      dup6\n        /* \"#utility.yul\":8679:8685   */\n      dup3\n        /* \"#utility.yul\":8668:8677   */\n      dup7\n        /* \"#utility.yul\":8664:8686   */\n      add\n        /* \"#utility.yul\":8618:8696   */\n      tag_265\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8608:8696   */\n      swap2\n      pop\n        /* \"#utility.yul\":8403:8706   */\n      pop\n        /* \"#utility.yul\":7819:8713   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8719:9046   */\n    tag_20:\n        /* \"#utility.yul\":8777:8783   */\n      0x00\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8814:8823   */\n      dup3\n        /* \"#utility.yul\":8805:8812   */\n      dup5\n        /* \"#utility.yul\":8801:8824   */\n      sub\n        /* \"#utility.yul\":8797:8829   */\n      slt\n        /* \"#utility.yul\":8794:8913   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":8832:8911   */\n      tag_341\n      tag_292\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8794:8913   */\n    tag_340:\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8977:9029   */\n      tag_342\n        /* \"#utility.yul\":9021:9028   */\n      dup5\n        /* \"#utility.yul\":9012:9018   */\n      dup3\n        /* \"#utility.yul\":9001:9010   */\n      dup6\n        /* \"#utility.yul\":8997:9019   */\n      add\n        /* \"#utility.yul\":8977:9029   */\n      tag_274\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8967:9029   */\n      swap2\n      pop\n        /* \"#utility.yul\":8923:9039   */\n      pop\n        /* \"#utility.yul\":8719:9046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9052:9401   */\n    tag_175:\n        /* \"#utility.yul\":9121:9127   */\n      0x00\n        /* \"#utility.yul\":9170:9172   */\n      0x20\n        /* \"#utility.yul\":9158:9167   */\n      dup3\n        /* \"#utility.yul\":9149:9156   */\n      dup5\n        /* \"#utility.yul\":9145:9168   */\n      sub\n        /* \"#utility.yul\":9141:9173   */\n      slt\n        /* \"#utility.yul\":9138:9257   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":9176:9255   */\n      tag_345\n      tag_292\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9138:9257   */\n    tag_344:\n        /* \"#utility.yul\":9296:9297   */\n      0x00\n        /* \"#utility.yul\":9321:9384   */\n      tag_346\n        /* \"#utility.yul\":9376:9383   */\n      dup5\n        /* \"#utility.yul\":9367:9373   */\n      dup3\n        /* \"#utility.yul\":9356:9365   */\n      dup6\n        /* \"#utility.yul\":9352:9374   */\n      add\n        /* \"#utility.yul\":9321:9384   */\n      tag_278\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9311:9384   */\n      swap2\n      pop\n        /* \"#utility.yul\":9267:9394   */\n      pop\n        /* \"#utility.yul\":9052:9401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9736   */\n    tag_26:\n        /* \"#utility.yul\":9466:9472   */\n      0x00\n        /* \"#utility.yul\":9515:9517   */\n      0x20\n        /* \"#utility.yul\":9503:9512   */\n      dup3\n        /* \"#utility.yul\":9494:9501   */\n      dup5\n        /* \"#utility.yul\":9490:9513   */\n      sub\n        /* \"#utility.yul\":9486:9518   */\n      slt\n        /* \"#utility.yul\":9483:9602   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":9521:9600   */\n      tag_349\n      tag_292\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9483:9602   */\n    tag_348:\n        /* \"#utility.yul\":9641:9642   */\n      0x00\n        /* \"#utility.yul\":9666:9719   */\n      tag_350\n        /* \"#utility.yul\":9711:9718   */\n      dup5\n        /* \"#utility.yul\":9702:9708   */\n      dup3\n        /* \"#utility.yul\":9691:9700   */\n      dup6\n        /* \"#utility.yul\":9687:9709   */\n      add\n        /* \"#utility.yul\":9666:9719   */\n      tag_245\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9656:9719   */\n      swap2\n      pop\n        /* \"#utility.yul\":9612:9729   */\n      pop\n        /* \"#utility.yul\":9407:9736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9742:9921   */\n    tag_351:\n        /* \"#utility.yul\":9811:9821   */\n      0x00\n        /* \"#utility.yul\":9832:9878   */\n      tag_353\n        /* \"#utility.yul\":9874:9877   */\n      dup4\n        /* \"#utility.yul\":9866:9872   */\n      dup4\n        /* \"#utility.yul\":9832:9878   */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9910:9914   */\n      0x20\n        /* \"#utility.yul\":9905:9908   */\n      dup4\n        /* \"#utility.yul\":9901:9915   */\n      add\n        /* \"#utility.yul\":9887:9915   */\n      swap1\n      pop\n        /* \"#utility.yul\":9742:9921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9927:10045   */\n    tag_355:\n        /* \"#utility.yul\":10014:10038   */\n      tag_357\n        /* \"#utility.yul\":10032:10037   */\n      dup2\n        /* \"#utility.yul\":10014:10038   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10009:10012   */\n      dup3\n        /* \"#utility.yul\":10002:10039   */\n      mstore\n        /* \"#utility.yul\":9927:10045   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10081:10813   */\n    tag_359:\n        /* \"#utility.yul\":10200:10203   */\n      0x00\n        /* \"#utility.yul\":10229:10283   */\n      tag_361\n        /* \"#utility.yul\":10277:10282   */\n      dup3\n        /* \"#utility.yul\":10229:10283   */\n      tag_362\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10299:10385   */\n      tag_363\n        /* \"#utility.yul\":10378:10384   */\n      dup2\n        /* \"#utility.yul\":10373:10376   */\n      dup6\n        /* \"#utility.yul\":10299:10385   */\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10292:10385   */\n      swap4\n      pop\n        /* \"#utility.yul\":10409:10465   */\n      tag_365\n        /* \"#utility.yul\":10459:10464   */\n      dup4\n        /* \"#utility.yul\":10409:10465   */\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10488:10495   */\n      dup1\n        /* \"#utility.yul\":10519:10520   */\n      0x00\n        /* \"#utility.yul\":10504:10788   */\n    tag_367:\n        /* \"#utility.yul\":10529:10535   */\n      dup4\n        /* \"#utility.yul\":10526:10527   */\n      dup2\n        /* \"#utility.yul\":10523:10536   */\n      lt\n        /* \"#utility.yul\":10504:10788   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":10605:10611   */\n      dup2\n        /* \"#utility.yul\":10599:10612   */\n      mload\n        /* \"#utility.yul\":10632:10695   */\n      tag_370\n        /* \"#utility.yul\":10691:10694   */\n      dup9\n        /* \"#utility.yul\":10676:10689   */\n      dup3\n        /* \"#utility.yul\":10632:10695   */\n      tag_351\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10625:10695   */\n      swap8\n      pop\n        /* \"#utility.yul\":10718:10778   */\n      tag_371\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10718:10778   */\n      tag_372\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10708:10778   */\n      swap3\n      pop\n        /* \"#utility.yul\":10564:10788   */\n      pop\n        /* \"#utility.yul\":10551:10552   */\n      0x01\n        /* \"#utility.yul\":10548:10549   */\n      dup2\n        /* \"#utility.yul\":10544:10553   */\n      add\n        /* \"#utility.yul\":10539:10553   */\n      swap1\n      pop\n        /* \"#utility.yul\":10504:10788   */\n      jump(tag_367)\n    tag_369:\n        /* \"#utility.yul\":10508:10522   */\n      pop\n        /* \"#utility.yul\":10804:10807   */\n      dup6\n        /* \"#utility.yul\":10797:10807   */\n      swap4\n      pop\n        /* \"#utility.yul\":10205:10813   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10081:10813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:10928   */\n    tag_373:\n        /* \"#utility.yul\":10900:10921   */\n      tag_375\n        /* \"#utility.yul\":10915:10920   */\n      dup2\n        /* \"#utility.yul\":10900:10921   */\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10895:10898   */\n      dup3\n        /* \"#utility.yul\":10888:10922   */\n      mstore\n        /* \"#utility.yul\":10819:10928   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11294   */\n    tag_377:\n        /* \"#utility.yul\":11020:11023   */\n      0x00\n        /* \"#utility.yul\":11048:11086   */\n      tag_379\n        /* \"#utility.yul\":11080:11085   */\n      dup3\n        /* \"#utility.yul\":11048:11086   */\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11102:11172   */\n      tag_381\n        /* \"#utility.yul\":11165:11171   */\n      dup2\n        /* \"#utility.yul\":11160:11163   */\n      dup6\n        /* \"#utility.yul\":11102:11172   */\n      tag_382\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11095:11172   */\n      swap4\n      pop\n        /* \"#utility.yul\":11181:11233   */\n      tag_383\n        /* \"#utility.yul\":11226:11232   */\n      dup2\n        /* \"#utility.yul\":11221:11224   */\n      dup6\n        /* \"#utility.yul\":11214:11218   */\n      0x20\n        /* \"#utility.yul\":11207:11212   */\n      dup7\n        /* \"#utility.yul\":11203:11219   */\n      add\n        /* \"#utility.yul\":11181:11233   */\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11258:11287   */\n      tag_385\n        /* \"#utility.yul\":11280:11286   */\n      dup2\n        /* \"#utility.yul\":11258:11287   */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11253:11256   */\n      dup5\n        /* \"#utility.yul\":11249:11288   */\n      add\n        /* \"#utility.yul\":11242:11288   */\n      swap2\n      pop\n        /* \"#utility.yul\":11024:11294   */\n      pop\n        /* \"#utility.yul\":10934:11294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11300:11664   */\n    tag_387:\n        /* \"#utility.yul\":11388:11391   */\n      0x00\n        /* \"#utility.yul\":11416:11455   */\n      tag_389\n        /* \"#utility.yul\":11449:11454   */\n      dup3\n        /* \"#utility.yul\":11416:11455   */\n      tag_390\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11471:11542   */\n      tag_391\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11530:11533   */\n      dup6\n        /* \"#utility.yul\":11471:11542   */\n      tag_392\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":11464:11542   */\n      swap4\n      pop\n        /* \"#utility.yul\":11551:11603   */\n      tag_393\n        /* \"#utility.yul\":11596:11602   */\n      dup2\n        /* \"#utility.yul\":11591:11594   */\n      dup6\n        /* \"#utility.yul\":11584:11588   */\n      0x20\n        /* \"#utility.yul\":11577:11582   */\n      dup7\n        /* \"#utility.yul\":11573:11589   */\n      add\n        /* \"#utility.yul\":11551:11603   */\n      tag_384\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11628:11657   */\n      tag_394\n        /* \"#utility.yul\":11650:11656   */\n      dup2\n        /* \"#utility.yul\":11628:11657   */\n      tag_386\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11623:11626   */\n      dup5\n        /* \"#utility.yul\":11619:11658   */\n      add\n        /* \"#utility.yul\":11612:11658   */\n      swap2\n      pop\n        /* \"#utility.yul\":11392:11664   */\n      pop\n        /* \"#utility.yul\":11300:11664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11670:12036   */\n    tag_395:\n        /* \"#utility.yul\":11812:11815   */\n      0x00\n        /* \"#utility.yul\":11833:11900   */\n      tag_397\n        /* \"#utility.yul\":11897:11899   */\n      0x34\n        /* \"#utility.yul\":11892:11895   */\n      dup4\n        /* \"#utility.yul\":11833:11900   */\n      tag_392\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11826:11900   */\n      swap2\n      pop\n        /* \"#utility.yul\":11909:12002   */\n      tag_398\n        /* \"#utility.yul\":11998:12001   */\n      dup3\n        /* \"#utility.yul\":11909:12002   */\n      tag_399\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12027:12029   */\n      0x40\n        /* \"#utility.yul\":12022:12025   */\n      dup3\n        /* \"#utility.yul\":12018:12030   */\n      add\n        /* \"#utility.yul\":12011:12030   */\n      swap1\n      pop\n        /* \"#utility.yul\":11670:12036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12042:12408   */\n    tag_400:\n        /* \"#utility.yul\":12184:12187   */\n      0x00\n        /* \"#utility.yul\":12205:12272   */\n      tag_402\n        /* \"#utility.yul\":12269:12271   */\n      0x28\n        /* \"#utility.yul\":12264:12267   */\n      dup4\n        /* \"#utility.yul\":12205:12272   */\n      tag_392\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12198:12272   */\n      swap2\n      pop\n        /* \"#utility.yul\":12281:12374   */\n      tag_403\n        /* \"#utility.yul\":12370:12373   */\n      dup3\n        /* \"#utility.yul\":12281:12374   */\n      tag_404\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12399:12401   */\n      0x40\n        /* \"#utility.yul\":12394:12397   */\n      dup3\n        /* \"#utility.yul\":12390:12402   */\n      add\n        /* \"#utility.yul\":12383:12402   */\n      swap1\n      pop\n        /* \"#utility.yul\":12042:12408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12414:12780   */\n    tag_405:\n        /* \"#utility.yul\":12556:12559   */\n      0x00\n        /* \"#utility.yul\":12577:12644   */\n      tag_407\n        /* \"#utility.yul\":12641:12643   */\n      0x2b\n        /* \"#utility.yul\":12636:12639   */\n      dup4\n        /* \"#utility.yul\":12577:12644   */\n      tag_392\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":12570:12644   */\n      swap2\n      pop\n        /* \"#utility.yul\":12653:12746   */\n      tag_408\n        /* \"#utility.yul\":12742:12745   */\n      dup3\n        /* \"#utility.yul\":12653:12746   */\n      tag_409\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":12771:12773   */\n      0x40\n        /* \"#utility.yul\":12766:12769   */\n      dup3\n        /* \"#utility.yul\":12762:12774   */\n      add\n        /* \"#utility.yul\":12755:12774   */\n      swap1\n      pop\n        /* \"#utility.yul\":12414:12780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12786:13152   */\n    tag_410:\n        /* \"#utility.yul\":12928:12931   */\n      0x00\n        /* \"#utility.yul\":12949:13016   */\n      tag_412\n        /* \"#utility.yul\":13013:13015   */\n      0x29\n        /* \"#utility.yul\":13008:13011   */\n      dup4\n        /* \"#utility.yul\":12949:13016   */\n      tag_392\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12942:13016   */\n      swap2\n      pop\n        /* \"#utility.yul\":13025:13118   */\n      tag_413\n        /* \"#utility.yul\":13114:13117   */\n      dup3\n        /* \"#utility.yul\":13025:13118   */\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":13143:13145   */\n      0x40\n        /* \"#utility.yul\":13138:13141   */\n      dup3\n        /* \"#utility.yul\":13134:13146   */\n      add\n        /* \"#utility.yul\":13127:13146   */\n      swap1\n      pop\n        /* \"#utility.yul\":12786:13152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13158:13524   */\n    tag_415:\n        /* \"#utility.yul\":13300:13303   */\n      0x00\n        /* \"#utility.yul\":13321:13388   */\n      tag_417\n        /* \"#utility.yul\":13385:13387   */\n      0x25\n        /* \"#utility.yul\":13380:13383   */\n      dup4\n        /* \"#utility.yul\":13321:13388   */\n      tag_392\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":13314:13388   */\n      swap2\n      pop\n        /* \"#utility.yul\":13397:13490   */\n      tag_418\n        /* \"#utility.yul\":13486:13489   */\n      dup3\n        /* \"#utility.yul\":13397:13490   */\n      tag_419\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":13515:13517   */\n      0x40\n        /* \"#utility.yul\":13510:13513   */\n      dup3\n        /* \"#utility.yul\":13506:13518   */\n      add\n        /* \"#utility.yul\":13499:13518   */\n      swap1\n      pop\n        /* \"#utility.yul\":13158:13524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13530:13896   */\n    tag_420:\n        /* \"#utility.yul\":13672:13675   */\n      0x00\n        /* \"#utility.yul\":13693:13760   */\n      tag_422\n        /* \"#utility.yul\":13757:13759   */\n      0x32\n        /* \"#utility.yul\":13752:13755   */\n      dup4\n        /* \"#utility.yul\":13693:13760   */\n      tag_392\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13686:13760   */\n      swap2\n      pop\n        /* \"#utility.yul\":13769:13862   */\n      tag_423\n        /* \"#utility.yul\":13858:13861   */\n      dup3\n        /* \"#utility.yul\":13769:13862   */\n      tag_424\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13887:13889   */\n      0x40\n        /* \"#utility.yul\":13882:13885   */\n      dup3\n        /* \"#utility.yul\":13878:13890   */\n      add\n        /* \"#utility.yul\":13871:13890   */\n      swap1\n      pop\n        /* \"#utility.yul\":13530:13896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13902:14268   */\n    tag_425:\n        /* \"#utility.yul\":14044:14047   */\n      0x00\n        /* \"#utility.yul\":14065:14132   */\n      tag_427\n        /* \"#utility.yul\":14129:14131   */\n      0x2a\n        /* \"#utility.yul\":14124:14127   */\n      dup4\n        /* \"#utility.yul\":14065:14132   */\n      tag_392\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":14058:14132   */\n      swap2\n      pop\n        /* \"#utility.yul\":14141:14234   */\n      tag_428\n        /* \"#utility.yul\":14230:14233   */\n      dup3\n        /* \"#utility.yul\":14141:14234   */\n      tag_429\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":14259:14261   */\n      0x40\n        /* \"#utility.yul\":14254:14257   */\n      dup3\n        /* \"#utility.yul\":14250:14262   */\n      add\n        /* \"#utility.yul\":14243:14262   */\n      swap1\n      pop\n        /* \"#utility.yul\":13902:14268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14640   */\n    tag_430:\n        /* \"#utility.yul\":14416:14419   */\n      0x00\n        /* \"#utility.yul\":14437:14504   */\n      tag_432\n        /* \"#utility.yul\":14501:14503   */\n      0x29\n        /* \"#utility.yul\":14496:14499   */\n      dup4\n        /* \"#utility.yul\":14437:14504   */\n      tag_392\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":14430:14504   */\n      swap2\n      pop\n        /* \"#utility.yul\":14513:14606   */\n      tag_433\n        /* \"#utility.yul\":14602:14605   */\n      dup3\n        /* \"#utility.yul\":14513:14606   */\n      tag_434\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14631:14633   */\n      0x40\n        /* \"#utility.yul\":14626:14629   */\n      dup3\n        /* \"#utility.yul\":14622:14634   */\n      add\n        /* \"#utility.yul\":14615:14634   */\n      swap1\n      pop\n        /* \"#utility.yul\":14274:14640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14646:15012   */\n    tag_435:\n        /* \"#utility.yul\":14788:14791   */\n      0x00\n        /* \"#utility.yul\":14809:14876   */\n      tag_437\n        /* \"#utility.yul\":14873:14875   */\n      0x29\n        /* \"#utility.yul\":14868:14871   */\n      dup4\n        /* \"#utility.yul\":14809:14876   */\n      tag_392\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14802:14876   */\n      swap2\n      pop\n        /* \"#utility.yul\":14885:14978   */\n      tag_438\n        /* \"#utility.yul\":14974:14977   */\n      dup3\n        /* \"#utility.yul\":14885:14978   */\n      tag_439\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":15003:15005   */\n      0x40\n        /* \"#utility.yul\":14998:15001   */\n      dup3\n        /* \"#utility.yul\":14994:15006   */\n      add\n        /* \"#utility.yul\":14987:15006   */\n      swap1\n      pop\n        /* \"#utility.yul\":14646:15012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15018:15384   */\n    tag_440:\n        /* \"#utility.yul\":15160:15163   */\n      0x00\n        /* \"#utility.yul\":15181:15248   */\n      tag_442\n        /* \"#utility.yul\":15245:15247   */\n      0x28\n        /* \"#utility.yul\":15240:15243   */\n      dup4\n        /* \"#utility.yul\":15181:15248   */\n      tag_392\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":15174:15248   */\n      swap2\n      pop\n        /* \"#utility.yul\":15257:15350   */\n      tag_443\n        /* \"#utility.yul\":15346:15349   */\n      dup3\n        /* \"#utility.yul\":15257:15350   */\n      tag_444\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15375:15377   */\n      0x40\n        /* \"#utility.yul\":15370:15373   */\n      dup3\n        /* \"#utility.yul\":15366:15378   */\n      add\n        /* \"#utility.yul\":15359:15378   */\n      swap1\n      pop\n        /* \"#utility.yul\":15018:15384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15390:15498   */\n    tag_354:\n        /* \"#utility.yul\":15467:15491   */\n      tag_446\n        /* \"#utility.yul\":15485:15490   */\n      dup2\n        /* \"#utility.yul\":15467:15491   */\n      tag_447\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":15462:15465   */\n      dup3\n        /* \"#utility.yul\":15455:15492   */\n      mstore\n        /* \"#utility.yul\":15390:15498   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15504:15622   */\n    tag_448:\n        /* \"#utility.yul\":15591:15615   */\n      tag_450\n        /* \"#utility.yul\":15609:15614   */\n      dup2\n        /* \"#utility.yul\":15591:15615   */\n      tag_447\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":15586:15589   */\n      dup3\n        /* \"#utility.yul\":15579:15616   */\n      mstore\n        /* \"#utility.yul\":15504:15622   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15628:16681   */\n    tag_171:\n        /* \"#utility.yul\":15951:15955   */\n      0x00\n        /* \"#utility.yul\":15989:15992   */\n      0xa0\n        /* \"#utility.yul\":15978:15987   */\n      dup3\n        /* \"#utility.yul\":15974:15993   */\n      add\n        /* \"#utility.yul\":15966:15993   */\n      swap1\n      pop\n        /* \"#utility.yul\":16003:16074   */\n      tag_452\n        /* \"#utility.yul\":16071:16072   */\n      0x00\n        /* \"#utility.yul\":16060:16069   */\n      dup4\n        /* \"#utility.yul\":16056:16073   */\n      add\n        /* \"#utility.yul\":16047:16053   */\n      dup9\n        /* \"#utility.yul\":16003:16074   */\n      tag_355\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":16084:16156   */\n      tag_453\n        /* \"#utility.yul\":16152:16154   */\n      0x20\n        /* \"#utility.yul\":16141:16150   */\n      dup4\n        /* \"#utility.yul\":16137:16155   */\n      add\n        /* \"#utility.yul\":16128:16134   */\n      dup8\n        /* \"#utility.yul\":16084:16156   */\n      tag_355\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":16203:16212   */\n      dup2\n        /* \"#utility.yul\":16197:16201   */\n      dup2\n        /* \"#utility.yul\":16193:16213   */\n      sub\n        /* \"#utility.yul\":16188:16190   */\n      0x40\n        /* \"#utility.yul\":16177:16186   */\n      dup4\n        /* \"#utility.yul\":16173:16191   */\n      add\n        /* \"#utility.yul\":16166:16214   */\n      mstore\n        /* \"#utility.yul\":16231:16339   */\n      tag_454\n        /* \"#utility.yul\":16334:16338   */\n      dup2\n        /* \"#utility.yul\":16325:16331   */\n      dup7\n        /* \"#utility.yul\":16231:16339   */\n      tag_359\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":16223:16339   */\n      swap1\n      pop\n        /* \"#utility.yul\":16386:16395   */\n      dup2\n        /* \"#utility.yul\":16380:16384   */\n      dup2\n        /* \"#utility.yul\":16376:16396   */\n      sub\n        /* \"#utility.yul\":16371:16373   */\n      0x60\n        /* \"#utility.yul\":16360:16369   */\n      dup4\n        /* \"#utility.yul\":16356:16374   */\n      add\n        /* \"#utility.yul\":16349:16397   */\n      mstore\n        /* \"#utility.yul\":16414:16522   */\n      tag_455\n        /* \"#utility.yul\":16517:16521   */\n      dup2\n        /* \"#utility.yul\":16508:16514   */\n      dup6\n        /* \"#utility.yul\":16414:16522   */\n      tag_359\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":16406:16522   */\n      swap1\n      pop\n        /* \"#utility.yul\":16570:16579   */\n      dup2\n        /* \"#utility.yul\":16564:16568   */\n      dup2\n        /* \"#utility.yul\":16560:16580   */\n      sub\n        /* \"#utility.yul\":16554:16557   */\n      0x80\n        /* \"#utility.yul\":16543:16552   */\n      dup4\n        /* \"#utility.yul\":16539:16558   */\n      add\n        /* \"#utility.yul\":16532:16581   */\n      mstore\n        /* \"#utility.yul\":16598:16674   */\n      tag_456\n        /* \"#utility.yul\":16669:16673   */\n      dup2\n        /* \"#utility.yul\":16660:16666   */\n      dup5\n        /* \"#utility.yul\":16598:16674   */\n      tag_377\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":16590:16674   */\n      swap1\n      pop\n        /* \"#utility.yul\":15628:16681   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16687:17438   */\n    tag_202:\n        /* \"#utility.yul\":16910:16914   */\n      0x00\n        /* \"#utility.yul\":16948:16951   */\n      0xa0\n        /* \"#utility.yul\":16937:16946   */\n      dup3\n        /* \"#utility.yul\":16933:16952   */\n      add\n        /* \"#utility.yul\":16925:16952   */\n      swap1\n      pop\n        /* \"#utility.yul\":16962:17033   */\n      tag_458\n        /* \"#utility.yul\":17030:17031   */\n      0x00\n        /* \"#utility.yul\":17019:17028   */\n      dup4\n        /* \"#utility.yul\":17015:17032   */\n      add\n        /* \"#utility.yul\":17006:17012   */\n      dup9\n        /* \"#utility.yul\":16962:17033   */\n      tag_355\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":17043:17115   */\n      tag_459\n        /* \"#utility.yul\":17111:17113   */\n      0x20\n        /* \"#utility.yul\":17100:17109   */\n      dup4\n        /* \"#utility.yul\":17096:17114   */\n      add\n        /* \"#utility.yul\":17087:17093   */\n      dup8\n        /* \"#utility.yul\":17043:17115   */\n      tag_355\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":17125:17197   */\n      tag_460\n        /* \"#utility.yul\":17193:17195   */\n      0x40\n        /* \"#utility.yul\":17182:17191   */\n      dup4\n        /* \"#utility.yul\":17178:17196   */\n      add\n        /* \"#utility.yul\":17169:17175   */\n      dup7\n        /* \"#utility.yul\":17125:17197   */\n      tag_448\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":17207:17279   */\n      tag_461\n        /* \"#utility.yul\":17275:17277   */\n      0x60\n        /* \"#utility.yul\":17264:17273   */\n      dup4\n        /* \"#utility.yul\":17260:17278   */\n      add\n        /* \"#utility.yul\":17251:17257   */\n      dup6\n        /* \"#utility.yul\":17207:17279   */\n      tag_448\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":17327:17336   */\n      dup2\n        /* \"#utility.yul\":17321:17325   */\n      dup2\n        /* \"#utility.yul\":17317:17337   */\n      sub\n        /* \"#utility.yul\":17311:17314   */\n      0x80\n        /* \"#utility.yul\":17300:17309   */\n      dup4\n        /* \"#utility.yul\":17296:17315   */\n      add\n        /* \"#utility.yul\":17289:17338   */\n      mstore\n        /* \"#utility.yul\":17355:17431   */\n      tag_462\n        /* \"#utility.yul\":17426:17430   */\n      dup2\n        /* \"#utility.yul\":17417:17423   */\n      dup5\n        /* \"#utility.yul\":17355:17431   */\n      tag_377\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":17347:17431   */\n      swap1\n      pop\n        /* \"#utility.yul\":16687:17438   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17444:17817   */\n    tag_39:\n        /* \"#utility.yul\":17587:17591   */\n      0x00\n        /* \"#utility.yul\":17625:17627   */\n      0x20\n        /* \"#utility.yul\":17614:17623   */\n      dup3\n        /* \"#utility.yul\":17610:17628   */\n      add\n        /* \"#utility.yul\":17602:17628   */\n      swap1\n      pop\n        /* \"#utility.yul\":17674:17683   */\n      dup2\n        /* \"#utility.yul\":17668:17672   */\n      dup2\n        /* \"#utility.yul\":17664:17684   */\n      sub\n        /* \"#utility.yul\":17660:17661   */\n      0x00\n        /* \"#utility.yul\":17649:17658   */\n      dup4\n        /* \"#utility.yul\":17645:17662   */\n      add\n        /* \"#utility.yul\":17638:17685   */\n      mstore\n        /* \"#utility.yul\":17702:17810   */\n      tag_464\n        /* \"#utility.yul\":17805:17809   */\n      dup2\n        /* \"#utility.yul\":17796:17802   */\n      dup5\n        /* \"#utility.yul\":17702:17810   */\n      tag_359\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":17694:17810   */\n      swap1\n      pop\n        /* \"#utility.yul\":17444:17817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17823:18457   */\n    tag_142:\n        /* \"#utility.yul\":18044:18048   */\n      0x00\n        /* \"#utility.yul\":18082:18084   */\n      0x40\n        /* \"#utility.yul\":18071:18080   */\n      dup3\n        /* \"#utility.yul\":18067:18085   */\n      add\n        /* \"#utility.yul\":18059:18085   */\n      swap1\n      pop\n        /* \"#utility.yul\":18131:18140   */\n      dup2\n        /* \"#utility.yul\":18125:18129   */\n      dup2\n        /* \"#utility.yul\":18121:18141   */\n      sub\n        /* \"#utility.yul\":18117:18118   */\n      0x00\n        /* \"#utility.yul\":18106:18115   */\n      dup4\n        /* \"#utility.yul\":18102:18119   */\n      add\n        /* \"#utility.yul\":18095:18142   */\n      mstore\n        /* \"#utility.yul\":18159:18267   */\n      tag_466\n        /* \"#utility.yul\":18262:18266   */\n      dup2\n        /* \"#utility.yul\":18253:18259   */\n      dup6\n        /* \"#utility.yul\":18159:18267   */\n      tag_359\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":18151:18267   */\n      swap1\n      pop\n        /* \"#utility.yul\":18314:18323   */\n      dup2\n        /* \"#utility.yul\":18308:18312   */\n      dup2\n        /* \"#utility.yul\":18304:18324   */\n      sub\n        /* \"#utility.yul\":18299:18301   */\n      0x20\n        /* \"#utility.yul\":18288:18297   */\n      dup4\n        /* \"#utility.yul\":18284:18302   */\n      add\n        /* \"#utility.yul\":18277:18325   */\n      mstore\n        /* \"#utility.yul\":18342:18450   */\n      tag_467\n        /* \"#utility.yul\":18445:18449   */\n      dup2\n        /* \"#utility.yul\":18436:18442   */\n      dup5\n        /* \"#utility.yul\":18342:18450   */\n      tag_359\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":18334:18450   */\n      swap1\n      pop\n        /* \"#utility.yul\":17823:18457   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18463:18673   */\n    tag_23:\n        /* \"#utility.yul\":18550:18554   */\n      0x00\n        /* \"#utility.yul\":18588:18590   */\n      0x20\n        /* \"#utility.yul\":18577:18586   */\n      dup3\n        /* \"#utility.yul\":18573:18591   */\n      add\n        /* \"#utility.yul\":18565:18591   */\n      swap1\n      pop\n        /* \"#utility.yul\":18601:18666   */\n      tag_469\n        /* \"#utility.yul\":18663:18664   */\n      0x00\n        /* \"#utility.yul\":18652:18661   */\n      dup4\n        /* \"#utility.yul\":18648:18665   */\n      add\n        /* \"#utility.yul\":18639:18645   */\n      dup5\n        /* \"#utility.yul\":18601:18666   */\n      tag_373\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":18463:18673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18679:18992   */\n    tag_29:\n        /* \"#utility.yul\":18792:18796   */\n      0x00\n        /* \"#utility.yul\":18830:18832   */\n      0x20\n        /* \"#utility.yul\":18819:18828   */\n      dup3\n        /* \"#utility.yul\":18815:18833   */\n      add\n        /* \"#utility.yul\":18807:18833   */\n      swap1\n      pop\n        /* \"#utility.yul\":18879:18888   */\n      dup2\n        /* \"#utility.yul\":18873:18877   */\n      dup2\n        /* \"#utility.yul\":18869:18889   */\n      sub\n        /* \"#utility.yul\":18865:18866   */\n      0x00\n        /* \"#utility.yul\":18854:18863   */\n      dup4\n        /* \"#utility.yul\":18850:18867   */\n      add\n        /* \"#utility.yul\":18843:18890   */\n      mstore\n        /* \"#utility.yul\":18907:18985   */\n      tag_471\n        /* \"#utility.yul\":18980:18984   */\n      dup2\n        /* \"#utility.yul\":18971:18977   */\n      dup5\n        /* \"#utility.yul\":18907:18985   */\n      tag_387\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":18899:18985   */\n      swap1\n      pop\n        /* \"#utility.yul\":18679:18992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18998:19417   */\n    tag_187:\n        /* \"#utility.yul\":19164:19168   */\n      0x00\n        /* \"#utility.yul\":19202:19204   */\n      0x20\n        /* \"#utility.yul\":19191:19200   */\n      dup3\n        /* \"#utility.yul\":19187:19205   */\n      add\n        /* \"#utility.yul\":19179:19205   */\n      swap1\n      pop\n        /* \"#utility.yul\":19251:19260   */\n      dup2\n        /* \"#utility.yul\":19245:19249   */\n      dup2\n        /* \"#utility.yul\":19241:19261   */\n      sub\n        /* \"#utility.yul\":19237:19238   */\n      0x00\n        /* \"#utility.yul\":19226:19235   */\n      dup4\n        /* \"#utility.yul\":19222:19239   */\n      add\n        /* \"#utility.yul\":19215:19262   */\n      mstore\n        /* \"#utility.yul\":19279:19410   */\n      tag_473\n        /* \"#utility.yul\":19405:19409   */\n      dup2\n        /* \"#utility.yul\":19279:19410   */\n      tag_395\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19271:19410   */\n      swap1\n      pop\n        /* \"#utility.yul\":18998:19417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19423:19842   */\n    tag_191:\n        /* \"#utility.yul\":19589:19593   */\n      0x00\n        /* \"#utility.yul\":19627:19629   */\n      0x20\n        /* \"#utility.yul\":19616:19625   */\n      dup3\n        /* \"#utility.yul\":19612:19630   */\n      add\n        /* \"#utility.yul\":19604:19630   */\n      swap1\n      pop\n        /* \"#utility.yul\":19676:19685   */\n      dup2\n        /* \"#utility.yul\":19670:19674   */\n      dup2\n        /* \"#utility.yul\":19666:19686   */\n      sub\n        /* \"#utility.yul\":19662:19663   */\n      0x00\n        /* \"#utility.yul\":19651:19660   */\n      dup4\n        /* \"#utility.yul\":19647:19664   */\n      add\n        /* \"#utility.yul\":19640:19687   */\n      mstore\n        /* \"#utility.yul\":19704:19835   */\n      tag_475\n        /* \"#utility.yul\":19830:19834   */\n      dup2\n        /* \"#utility.yul\":19704:19835   */\n      tag_400\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":19696:19835   */\n      swap1\n      pop\n        /* \"#utility.yul\":19423:19842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19848:20267   */\n    tag_56:\n        /* \"#utility.yul\":20014:20018   */\n      0x00\n        /* \"#utility.yul\":20052:20054   */\n      0x20\n        /* \"#utility.yul\":20041:20050   */\n      dup3\n        /* \"#utility.yul\":20037:20055   */\n      add\n        /* \"#utility.yul\":20029:20055   */\n      swap1\n      pop\n        /* \"#utility.yul\":20101:20110   */\n      dup2\n        /* \"#utility.yul\":20095:20099   */\n      dup2\n        /* \"#utility.yul\":20091:20111   */\n      sub\n        /* \"#utility.yul\":20087:20088   */\n      0x00\n        /* \"#utility.yul\":20076:20085   */\n      dup4\n        /* \"#utility.yul\":20072:20089   */\n      add\n        /* \"#utility.yul\":20065:20112   */\n      mstore\n        /* \"#utility.yul\":20129:20260   */\n      tag_477\n        /* \"#utility.yul\":20255:20259   */\n      dup2\n        /* \"#utility.yul\":20129:20260   */\n      tag_405\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":20121:20260   */\n      swap1\n      pop\n        /* \"#utility.yul\":19848:20267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20273:20692   */\n    tag_113:\n        /* \"#utility.yul\":20439:20443   */\n      0x00\n        /* \"#utility.yul\":20477:20479   */\n      0x20\n        /* \"#utility.yul\":20466:20475   */\n      dup3\n        /* \"#utility.yul\":20462:20480   */\n      add\n        /* \"#utility.yul\":20454:20480   */\n      swap1\n      pop\n        /* \"#utility.yul\":20526:20535   */\n      dup2\n        /* \"#utility.yul\":20520:20524   */\n      dup2\n        /* \"#utility.yul\":20516:20536   */\n      sub\n        /* \"#utility.yul\":20512:20513   */\n      0x00\n        /* \"#utility.yul\":20501:20510   */\n      dup4\n        /* \"#utility.yul\":20497:20514   */\n      add\n        /* \"#utility.yul\":20490:20537   */\n      mstore\n        /* \"#utility.yul\":20554:20685   */\n      tag_479\n        /* \"#utility.yul\":20680:20684   */\n      dup2\n        /* \"#utility.yul\":20554:20685   */\n      tag_410\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":20546:20685   */\n      swap1\n      pop\n        /* \"#utility.yul\":20273:20692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20698:21117   */\n    tag_124:\n        /* \"#utility.yul\":20864:20868   */\n      0x00\n        /* \"#utility.yul\":20902:20904   */\n      0x20\n        /* \"#utility.yul\":20891:20900   */\n      dup3\n        /* \"#utility.yul\":20887:20905   */\n      add\n        /* \"#utility.yul\":20879:20905   */\n      swap1\n      pop\n        /* \"#utility.yul\":20951:20960   */\n      dup2\n        /* \"#utility.yul\":20945:20949   */\n      dup2\n        /* \"#utility.yul\":20941:20961   */\n      sub\n        /* \"#utility.yul\":20937:20938   */\n      0x00\n        /* \"#utility.yul\":20926:20935   */\n      dup4\n        /* \"#utility.yul\":20922:20939   */\n      add\n        /* \"#utility.yul\":20915:20962   */\n      mstore\n        /* \"#utility.yul\":20979:21110   */\n      tag_481\n        /* \"#utility.yul\":21105:21109   */\n      dup2\n        /* \"#utility.yul\":20979:21110   */\n      tag_415\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":20971:21110   */\n      swap1\n      pop\n        /* \"#utility.yul\":20698:21117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21123:21542   */\n    tag_77:\n        /* \"#utility.yul\":21289:21293   */\n      0x00\n        /* \"#utility.yul\":21327:21329   */\n      0x20\n        /* \"#utility.yul\":21316:21325   */\n      dup3\n        /* \"#utility.yul\":21312:21330   */\n      add\n        /* \"#utility.yul\":21304:21330   */\n      swap1\n      pop\n        /* \"#utility.yul\":21376:21385   */\n      dup2\n        /* \"#utility.yul\":21370:21374   */\n      dup2\n        /* \"#utility.yul\":21366:21386   */\n      sub\n        /* \"#utility.yul\":21362:21363   */\n      0x00\n        /* \"#utility.yul\":21351:21360   */\n      dup4\n        /* \"#utility.yul\":21347:21364   */\n      add\n        /* \"#utility.yul\":21340:21387   */\n      mstore\n        /* \"#utility.yul\":21404:21535   */\n      tag_483\n        /* \"#utility.yul\":21530:21534   */\n      dup2\n        /* \"#utility.yul\":21404:21535   */\n      tag_420\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":21396:21535   */\n      swap1\n      pop\n        /* \"#utility.yul\":21123:21542   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21548:21967   */\n    tag_137:\n        /* \"#utility.yul\":21714:21718   */\n      0x00\n        /* \"#utility.yul\":21752:21754   */\n      0x20\n        /* \"#utility.yul\":21741:21750   */\n      dup3\n        /* \"#utility.yul\":21737:21755   */\n      add\n        /* \"#utility.yul\":21729:21755   */\n      swap1\n      pop\n        /* \"#utility.yul\":21801:21810   */\n      dup2\n        /* \"#utility.yul\":21795:21799   */\n      dup2\n        /* \"#utility.yul\":21791:21811   */\n      sub\n        /* \"#utility.yul\":21787:21788   */\n      0x00\n        /* \"#utility.yul\":21776:21785   */\n      dup4\n        /* \"#utility.yul\":21772:21789   */\n      add\n        /* \"#utility.yul\":21765:21812   */\n      mstore\n        /* \"#utility.yul\":21829:21960   */\n      tag_485\n        /* \"#utility.yul\":21955:21959   */\n      dup2\n        /* \"#utility.yul\":21829:21960   */\n      tag_425\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":21821:21960   */\n      swap1\n      pop\n        /* \"#utility.yul\":21548:21967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21973:22392   */\n    tag_148:\n        /* \"#utility.yul\":22139:22143   */\n      0x00\n        /* \"#utility.yul\":22177:22179   */\n      0x20\n        /* \"#utility.yul\":22166:22175   */\n      dup3\n        /* \"#utility.yul\":22162:22180   */\n      add\n        /* \"#utility.yul\":22154:22180   */\n      swap1\n      pop\n        /* \"#utility.yul\":22226:22235   */\n      dup2\n        /* \"#utility.yul\":22220:22224   */\n      dup2\n        /* \"#utility.yul\":22216:22236   */\n      sub\n        /* \"#utility.yul\":22212:22213   */\n      0x00\n        /* \"#utility.yul\":22201:22210   */\n      dup4\n        /* \"#utility.yul\":22197:22214   */\n      add\n        /* \"#utility.yul\":22190:22237   */\n      mstore\n        /* \"#utility.yul\":22254:22385   */\n      tag_487\n        /* \"#utility.yul\":22380:22384   */\n      dup2\n        /* \"#utility.yul\":22254:22385   */\n      tag_430\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":22246:22385   */\n      swap1\n      pop\n        /* \"#utility.yul\":21973:22392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22398:22817   */\n    tag_83:\n        /* \"#utility.yul\":22564:22568   */\n      0x00\n        /* \"#utility.yul\":22602:22604   */\n      0x20\n        /* \"#utility.yul\":22591:22600   */\n      dup3\n        /* \"#utility.yul\":22587:22605   */\n      add\n        /* \"#utility.yul\":22579:22605   */\n      swap1\n      pop\n        /* \"#utility.yul\":22651:22660   */\n      dup2\n        /* \"#utility.yul\":22645:22649   */\n      dup2\n        /* \"#utility.yul\":22641:22661   */\n      sub\n        /* \"#utility.yul\":22637:22638   */\n      0x00\n        /* \"#utility.yul\":22626:22635   */\n      dup4\n        /* \"#utility.yul\":22622:22639   */\n      add\n        /* \"#utility.yul\":22615:22662   */\n      mstore\n        /* \"#utility.yul\":22679:22810   */\n      tag_489\n        /* \"#utility.yul\":22805:22809   */\n      dup2\n        /* \"#utility.yul\":22679:22810   */\n      tag_435\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":22671:22810   */\n      swap1\n      pop\n        /* \"#utility.yul\":22398:22817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22823:23242   */\n    tag_121:\n        /* \"#utility.yul\":22989:22993   */\n      0x00\n        /* \"#utility.yul\":23027:23029   */\n      0x20\n        /* \"#utility.yul\":23016:23025   */\n      dup3\n        /* \"#utility.yul\":23012:23030   */\n      add\n        /* \"#utility.yul\":23004:23030   */\n      swap1\n      pop\n        /* \"#utility.yul\":23076:23085   */\n      dup2\n        /* \"#utility.yul\":23070:23074   */\n      dup2\n        /* \"#utility.yul\":23066:23086   */\n      sub\n        /* \"#utility.yul\":23062:23063   */\n      0x00\n        /* \"#utility.yul\":23051:23060   */\n      dup4\n        /* \"#utility.yul\":23047:23064   */\n      add\n        /* \"#utility.yul\":23040:23087   */\n      mstore\n        /* \"#utility.yul\":23104:23235   */\n      tag_491\n        /* \"#utility.yul\":23230:23234   */\n      dup2\n        /* \"#utility.yul\":23104:23235   */\n      tag_440\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":23096:23235   */\n      swap1\n      pop\n        /* \"#utility.yul\":22823:23242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23248:23470   */\n    tag_17:\n        /* \"#utility.yul\":23341:23345   */\n      0x00\n        /* \"#utility.yul\":23379:23381   */\n      0x20\n        /* \"#utility.yul\":23368:23377   */\n      dup3\n        /* \"#utility.yul\":23364:23382   */\n      add\n        /* \"#utility.yul\":23356:23382   */\n      swap1\n      pop\n        /* \"#utility.yul\":23392:23463   */\n      tag_493\n        /* \"#utility.yul\":23460:23461   */\n      0x00\n        /* \"#utility.yul\":23449:23458   */\n      dup4\n        /* \"#utility.yul\":23445:23462   */\n      add\n        /* \"#utility.yul\":23436:23442   */\n      dup5\n        /* \"#utility.yul\":23392:23463   */\n      tag_448\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":23248:23470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23476:23808   */\n    tag_162:\n        /* \"#utility.yul\":23597:23601   */\n      0x00\n        /* \"#utility.yul\":23635:23637   */\n      0x40\n        /* \"#utility.yul\":23624:23633   */\n      dup3\n        /* \"#utility.yul\":23620:23638   */\n      add\n        /* \"#utility.yul\":23612:23638   */\n      swap1\n      pop\n        /* \"#utility.yul\":23648:23719   */\n      tag_495\n        /* \"#utility.yul\":23716:23717   */\n      0x00\n        /* \"#utility.yul\":23705:23714   */\n      dup4\n        /* \"#utility.yul\":23701:23718   */\n      add\n        /* \"#utility.yul\":23692:23698   */\n      dup6\n        /* \"#utility.yul\":23648:23719   */\n      tag_448\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":23729:23801   */\n      tag_496\n        /* \"#utility.yul\":23797:23799   */\n      0x20\n        /* \"#utility.yul\":23786:23795   */\n      dup4\n        /* \"#utility.yul\":23782:23800   */\n      add\n        /* \"#utility.yul\":23773:23779   */\n      dup5\n        /* \"#utility.yul\":23729:23801   */\n      tag_448\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":23476:23808   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23814:23943   */\n    tag_225:\n        /* \"#utility.yul\":23848:23854   */\n      0x00\n        /* \"#utility.yul\":23875:23895   */\n      tag_498\n      tag_499\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":23865:23895   */\n      swap1\n      pop\n        /* \"#utility.yul\":23904:23937   */\n      tag_500\n        /* \"#utility.yul\":23932:23936   */\n      dup3\n        /* \"#utility.yul\":23924:23930   */\n      dup3\n        /* \"#utility.yul\":23904:23937   */\n      tag_501\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":23814:23943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23949:24024   */\n    tag_499:\n        /* \"#utility.yul\":23982:23988   */\n      0x00\n        /* \"#utility.yul\":24015:24017   */\n      0x40\n        /* \"#utility.yul\":24009:24018   */\n      mload\n        /* \"#utility.yul\":23999:24018   */\n      swap1\n      pop\n        /* \"#utility.yul\":23949:24024   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24030:24341   */\n    tag_224:\n        /* \"#utility.yul\":24107:24111   */\n      0x00\n        /* \"#utility.yul\":24197:24215   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24189:24195   */\n      dup3\n        /* \"#utility.yul\":24186:24216   */\n      gt\n        /* \"#utility.yul\":24183:24239   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":24219:24237   */\n      tag_505\n      tag_86\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":24183:24239   */\n    tag_504:\n        /* \"#utility.yul\":24269:24273   */\n      0x20\n        /* \"#utility.yul\":24261:24267   */\n      dup3\n        /* \"#utility.yul\":24257:24274   */\n      mul\n        /* \"#utility.yul\":24249:24274   */\n      swap1\n      pop\n        /* \"#utility.yul\":24329:24333   */\n      0x20\n        /* \"#utility.yul\":24323:24327   */\n      dup2\n        /* \"#utility.yul\":24319:24334   */\n      add\n        /* \"#utility.yul\":24311:24334   */\n      swap1\n      pop\n        /* \"#utility.yul\":24030:24341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24347:24658   */\n    tag_238:\n        /* \"#utility.yul\":24424:24428   */\n      0x00\n        /* \"#utility.yul\":24514:24532   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24506:24512   */\n      dup3\n        /* \"#utility.yul\":24503:24533   */\n      gt\n        /* \"#utility.yul\":24500:24556   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":24536:24554   */\n      tag_508\n      tag_86\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":24500:24556   */\n    tag_507:\n        /* \"#utility.yul\":24586:24590   */\n      0x20\n        /* \"#utility.yul\":24578:24584   */\n      dup3\n        /* \"#utility.yul\":24574:24591   */\n      mul\n        /* \"#utility.yul\":24566:24591   */\n      swap1\n      pop\n        /* \"#utility.yul\":24646:24650   */\n      0x20\n        /* \"#utility.yul\":24640:24644   */\n      dup2\n        /* \"#utility.yul\":24636:24651   */\n      add\n        /* \"#utility.yul\":24628:24651   */\n      swap1\n      pop\n        /* \"#utility.yul\":24347:24658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24664:24971   */\n    tag_250:\n        /* \"#utility.yul\":24725:24729   */\n      0x00\n        /* \"#utility.yul\":24815:24833   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24807:24813   */\n      dup3\n        /* \"#utility.yul\":24804:24834   */\n      gt\n        /* \"#utility.yul\":24801:24857   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":24837:24855   */\n      tag_511\n      tag_86\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":24801:24857   */\n    tag_510:\n        /* \"#utility.yul\":24875:24904   */\n      tag_512\n        /* \"#utility.yul\":24897:24903   */\n      dup3\n        /* \"#utility.yul\":24875:24904   */\n      tag_386\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":24867:24904   */\n      swap1\n      pop\n        /* \"#utility.yul\":24959:24963   */\n      0x20\n        /* \"#utility.yul\":24953:24957   */\n      dup2\n        /* \"#utility.yul\":24949:24964   */\n      add\n        /* \"#utility.yul\":24941:24964   */\n      swap1\n      pop\n        /* \"#utility.yul\":24664:24971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24977:25109   */\n    tag_366:\n        /* \"#utility.yul\":25044:25048   */\n      0x00\n        /* \"#utility.yul\":25067:25070   */\n      dup2\n        /* \"#utility.yul\":25059:25070   */\n      swap1\n      pop\n        /* \"#utility.yul\":25097:25101   */\n      0x20\n        /* \"#utility.yul\":25092:25095   */\n      dup3\n        /* \"#utility.yul\":25088:25102   */\n      add\n        /* \"#utility.yul\":25080:25102   */\n      swap1\n      pop\n        /* \"#utility.yul\":24977:25109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25115:25229   */\n    tag_362:\n        /* \"#utility.yul\":25182:25188   */\n      0x00\n        /* \"#utility.yul\":25216:25221   */\n      dup2\n        /* \"#utility.yul\":25210:25222   */\n      mload\n        /* \"#utility.yul\":25200:25222   */\n      swap1\n      pop\n        /* \"#utility.yul\":25115:25229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25235:25333   */\n    tag_380:\n        /* \"#utility.yul\":25286:25292   */\n      0x00\n        /* \"#utility.yul\":25320:25325   */\n      dup2\n        /* \"#utility.yul\":25314:25326   */\n      mload\n        /* \"#utility.yul\":25304:25326   */\n      swap1\n      pop\n        /* \"#utility.yul\":25235:25333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25339:25438   */\n    tag_390:\n        /* \"#utility.yul\":25391:25397   */\n      0x00\n        /* \"#utility.yul\":25425:25430   */\n      dup2\n        /* \"#utility.yul\":25419:25431   */\n      mload\n        /* \"#utility.yul\":25409:25431   */\n      swap1\n      pop\n        /* \"#utility.yul\":25339:25438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25444:25557   */\n    tag_372:\n        /* \"#utility.yul\":25514:25518   */\n      0x00\n        /* \"#utility.yul\":25546:25550   */\n      0x20\n        /* \"#utility.yul\":25541:25544   */\n      dup3\n        /* \"#utility.yul\":25537:25551   */\n      add\n        /* \"#utility.yul\":25529:25551   */\n      swap1\n      pop\n        /* \"#utility.yul\":25444:25557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25563:25747   */\n    tag_364:\n        /* \"#utility.yul\":25662:25673   */\n      0x00\n        /* \"#utility.yul\":25696:25702   */\n      dup3\n        /* \"#utility.yul\":25691:25694   */\n      dup3\n        /* \"#utility.yul\":25684:25703   */\n      mstore\n        /* \"#utility.yul\":25736:25740   */\n      0x20\n        /* \"#utility.yul\":25731:25734   */\n      dup3\n        /* \"#utility.yul\":25727:25741   */\n      add\n        /* \"#utility.yul\":25712:25741   */\n      swap1\n      pop\n        /* \"#utility.yul\":25563:25747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25753:25921   */\n    tag_382:\n        /* \"#utility.yul\":25836:25847   */\n      0x00\n        /* \"#utility.yul\":25870:25876   */\n      dup3\n        /* \"#utility.yul\":25865:25868   */\n      dup3\n        /* \"#utility.yul\":25858:25877   */\n      mstore\n        /* \"#utility.yul\":25910:25914   */\n      0x20\n        /* \"#utility.yul\":25905:25908   */\n      dup3\n        /* \"#utility.yul\":25901:25915   */\n      add\n        /* \"#utility.yul\":25886:25915   */\n      swap1\n      pop\n        /* \"#utility.yul\":25753:25921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25927:26096   */\n    tag_392:\n        /* \"#utility.yul\":26011:26022   */\n      0x00\n        /* \"#utility.yul\":26045:26051   */\n      dup3\n        /* \"#utility.yul\":26040:26043   */\n      dup3\n        /* \"#utility.yul\":26033:26052   */\n      mstore\n        /* \"#utility.yul\":26085:26089   */\n      0x20\n        /* \"#utility.yul\":26080:26083   */\n      dup3\n        /* \"#utility.yul\":26076:26090   */\n      add\n        /* \"#utility.yul\":26061:26090   */\n      swap1\n      pop\n        /* \"#utility.yul\":25927:26096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26102:26407   */\n    tag_139:\n        /* \"#utility.yul\":26142:26145   */\n      0x00\n        /* \"#utility.yul\":26161:26181   */\n      tag_522\n        /* \"#utility.yul\":26179:26180   */\n      dup3\n        /* \"#utility.yul\":26161:26181   */\n      tag_447\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":26156:26181   */\n      swap2\n      pop\n        /* \"#utility.yul\":26195:26215   */\n      tag_523\n        /* \"#utility.yul\":26213:26214   */\n      dup4\n        /* \"#utility.yul\":26195:26215   */\n      tag_447\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":26190:26215   */\n      swap3\n      pop\n        /* \"#utility.yul\":26349:26350   */\n      dup3\n        /* \"#utility.yul\":26281:26347   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26277:26351   */\n      sub\n        /* \"#utility.yul\":26274:26275   */\n      dup3\n        /* \"#utility.yul\":26271:26352   */\n      gt\n        /* \"#utility.yul\":26268:26375   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":26355:26373   */\n      tag_525\n      tag_526\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":26268:26375   */\n    tag_524:\n        /* \"#utility.yul\":26399:26400   */\n      dup3\n        /* \"#utility.yul\":26396:26397   */\n      dup3\n        /* \"#utility.yul\":26392:26401   */\n      add\n        /* \"#utility.yul\":26385:26401   */\n      swap1\n      pop\n        /* \"#utility.yul\":26102:26407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26413:26509   */\n    tag_358:\n        /* \"#utility.yul\":26450:26457   */\n      0x00\n        /* \"#utility.yul\":26479:26503   */\n      tag_528\n        /* \"#utility.yul\":26497:26502   */\n      dup3\n        /* \"#utility.yul\":26479:26503   */\n      tag_529\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":26468:26503   */\n      swap1\n      pop\n        /* \"#utility.yul\":26413:26509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26515:26605   */\n    tag_376:\n        /* \"#utility.yul\":26549:26556   */\n      0x00\n        /* \"#utility.yul\":26592:26597   */\n      dup2\n        /* \"#utility.yul\":26585:26598   */\n      iszero\n        /* \"#utility.yul\":26578:26599   */\n      iszero\n        /* \"#utility.yul\":26567:26599   */\n      swap1\n      pop\n        /* \"#utility.yul\":26515:26605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26611:26760   */\n    tag_531:\n        /* \"#utility.yul\":26647:26654   */\n      0x00\n        /* \"#utility.yul\":26687:26753   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26680:26685   */\n      dup3\n        /* \"#utility.yul\":26676:26754   */\n      and\n        /* \"#utility.yul\":26665:26754   */\n      swap1\n      pop\n        /* \"#utility.yul\":26611:26760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26766:26892   */\n    tag_529:\n        /* \"#utility.yul\":26803:26810   */\n      0x00\n        /* \"#utility.yul\":26843:26885   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26836:26841   */\n      dup3\n        /* \"#utility.yul\":26832:26886   */\n      and\n        /* \"#utility.yul\":26821:26886   */\n      swap1\n      pop\n        /* \"#utility.yul\":26766:26892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26898:26975   */\n    tag_447:\n        /* \"#utility.yul\":26935:26942   */\n      0x00\n        /* \"#utility.yul\":26964:26969   */\n      dup2\n        /* \"#utility.yul\":26953:26969   */\n      swap1\n      pop\n        /* \"#utility.yul\":26898:26975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26981:27135   */\n    tag_255:\n        /* \"#utility.yul\":27065:27071   */\n      dup3\n        /* \"#utility.yul\":27060:27063   */\n      dup2\n        /* \"#utility.yul\":27055:27058   */\n      dup4\n        /* \"#utility.yul\":27042:27072   */\n      calldatacopy\n        /* \"#utility.yul\":27127:27128   */\n      0x00\n        /* \"#utility.yul\":27118:27124   */\n      dup4\n        /* \"#utility.yul\":27113:27116   */\n      dup4\n        /* \"#utility.yul\":27109:27125   */\n      add\n        /* \"#utility.yul\":27102:27129   */\n      mstore\n        /* \"#utility.yul\":26981:27135   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27141:27448   */\n    tag_384:\n        /* \"#utility.yul\":27209:27210   */\n      0x00\n        /* \"#utility.yul\":27219:27332   */\n    tag_537:\n        /* \"#utility.yul\":27233:27239   */\n      dup4\n        /* \"#utility.yul\":27230:27231   */\n      dup2\n        /* \"#utility.yul\":27227:27240   */\n      lt\n        /* \"#utility.yul\":27219:27332   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":27318:27319   */\n      dup1\n        /* \"#utility.yul\":27313:27316   */\n      dup3\n        /* \"#utility.yul\":27309:27320   */\n      add\n        /* \"#utility.yul\":27303:27321   */\n      mload\n        /* \"#utility.yul\":27299:27300   */\n      dup2\n        /* \"#utility.yul\":27294:27297   */\n      dup5\n        /* \"#utility.yul\":27290:27301   */\n      add\n        /* \"#utility.yul\":27283:27322   */\n      mstore\n        /* \"#utility.yul\":27255:27257   */\n      0x20\n        /* \"#utility.yul\":27252:27253   */\n      dup2\n        /* \"#utility.yul\":27248:27258   */\n      add\n        /* \"#utility.yul\":27243:27258   */\n      swap1\n      pop\n        /* \"#utility.yul\":27219:27332   */\n      jump(tag_537)\n    tag_539:\n        /* \"#utility.yul\":27350:27356   */\n      dup4\n        /* \"#utility.yul\":27347:27348   */\n      dup2\n        /* \"#utility.yul\":27344:27357   */\n      gt\n        /* \"#utility.yul\":27341:27442   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":27430:27431   */\n      0x00\n        /* \"#utility.yul\":27421:27427   */\n      dup5\n        /* \"#utility.yul\":27416:27419   */\n      dup5\n        /* \"#utility.yul\":27412:27428   */\n      add\n        /* \"#utility.yul\":27405:27432   */\n      mstore\n        /* \"#utility.yul\":27341:27442   */\n    tag_540:\n        /* \"#utility.yul\":27190:27448   */\n      pop\n        /* \"#utility.yul\":27141:27448   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27454:27774   */\n    tag_64:\n        /* \"#utility.yul\":27498:27504   */\n      0x00\n        /* \"#utility.yul\":27535:27536   */\n      0x02\n        /* \"#utility.yul\":27529:27533   */\n      dup3\n        /* \"#utility.yul\":27525:27537   */\n      div\n        /* \"#utility.yul\":27515:27537   */\n      swap1\n      pop\n        /* \"#utility.yul\":27582:27583   */\n      0x01\n        /* \"#utility.yul\":27576:27580   */\n      dup3\n        /* \"#utility.yul\":27572:27584   */\n      and\n        /* \"#utility.yul\":27603:27621   */\n      dup1\n        /* \"#utility.yul\":27593:27674   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":27659:27663   */\n      0x7f\n        /* \"#utility.yul\":27651:27657   */\n      dup3\n        /* \"#utility.yul\":27647:27664   */\n      and\n        /* \"#utility.yul\":27637:27664   */\n      swap2\n      pop\n        /* \"#utility.yul\":27593:27674   */\n    tag_542:\n        /* \"#utility.yul\":27721:27723   */\n      0x20\n        /* \"#utility.yul\":27713:27719   */\n      dup3\n        /* \"#utility.yul\":27710:27724   */\n      lt\n        /* \"#utility.yul\":27690:27708   */\n      dup2\n        /* \"#utility.yul\":27687:27725   */\n      eq\n        /* \"#utility.yul\":27684:27768   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":27740:27758   */\n      tag_544\n      tag_545\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":27684:27768   */\n    tag_543:\n        /* \"#utility.yul\":27505:27774   */\n      pop\n        /* \"#utility.yul\":27454:27774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27780:28061   */\n    tag_501:\n        /* \"#utility.yul\":27863:27890   */\n      tag_547\n        /* \"#utility.yul\":27885:27889   */\n      dup3\n        /* \"#utility.yul\":27863:27890   */\n      tag_386\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":27855:27861   */\n      dup2\n        /* \"#utility.yul\":27851:27891   */\n      add\n        /* \"#utility.yul\":27993:27999   */\n      dup2\n        /* \"#utility.yul\":27981:27991   */\n      dup2\n        /* \"#utility.yul\":27978:28000   */\n      lt\n        /* \"#utility.yul\":27957:27975   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27945:27955   */\n      dup3\n        /* \"#utility.yul\":27942:27976   */\n      gt\n        /* \"#utility.yul\":27939:28001   */\n      or\n        /* \"#utility.yul\":27936:28024   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":28004:28022   */\n      tag_549\n      tag_86\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":27936:28024   */\n    tag_548:\n        /* \"#utility.yul\":28044:28054   */\n      dup1\n        /* \"#utility.yul\":28040:28042   */\n      0x40\n        /* \"#utility.yul\":28033:28055   */\n      mstore\n        /* \"#utility.yul\":27823:28061   */\n      pop\n        /* \"#utility.yul\":27780:28061   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28067:28300   */\n    tag_100:\n        /* \"#utility.yul\":28106:28109   */\n      0x00\n        /* \"#utility.yul\":28129:28153   */\n      tag_551\n        /* \"#utility.yul\":28147:28152   */\n      dup3\n        /* \"#utility.yul\":28129:28153   */\n      tag_447\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":28120:28153   */\n      swap2\n      pop\n        /* \"#utility.yul\":28175:28241   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":28168:28173   */\n      dup3\n        /* \"#utility.yul\":28165:28242   */\n      eq\n        /* \"#utility.yul\":28162:28265   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":28245:28263   */\n      tag_553\n      tag_526\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":28162:28265   */\n    tag_552:\n        /* \"#utility.yul\":28292:28293   */\n      0x01\n        /* \"#utility.yul\":28285:28290   */\n      dup3\n        /* \"#utility.yul\":28281:28294   */\n      add\n        /* \"#utility.yul\":28274:28294   */\n      swap1\n      pop\n        /* \"#utility.yul\":28067:28300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28306:28486   */\n    tag_526:\n        /* \"#utility.yul\":28354:28431   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28351:28352   */\n      0x00\n        /* \"#utility.yul\":28344:28432   */\n      mstore\n        /* \"#utility.yul\":28451:28455   */\n      0x11\n        /* \"#utility.yul\":28448:28449   */\n      0x04\n        /* \"#utility.yul\":28441:28456   */\n      mstore\n        /* \"#utility.yul\":28475:28479   */\n      0x24\n        /* \"#utility.yul\":28472:28473   */\n      0x00\n        /* \"#utility.yul\":28465:28480   */\n      revert\n        /* \"#utility.yul\":28492:28672   */\n    tag_545:\n        /* \"#utility.yul\":28540:28617   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28537:28538   */\n      0x00\n        /* \"#utility.yul\":28530:28618   */\n      mstore\n        /* \"#utility.yul\":28637:28641   */\n      0x22\n        /* \"#utility.yul\":28634:28635   */\n      0x04\n        /* \"#utility.yul\":28627:28642   */\n      mstore\n        /* \"#utility.yul\":28661:28665   */\n      0x24\n        /* \"#utility.yul\":28658:28659   */\n      0x00\n        /* \"#utility.yul\":28651:28666   */\n      revert\n        /* \"#utility.yul\":28678:28858   */\n    tag_94:\n        /* \"#utility.yul\":28726:28803   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28723:28724   */\n      0x00\n        /* \"#utility.yul\":28716:28804   */\n      mstore\n        /* \"#utility.yul\":28823:28827   */\n      0x32\n        /* \"#utility.yul\":28820:28821   */\n      0x04\n        /* \"#utility.yul\":28813:28828   */\n      mstore\n        /* \"#utility.yul\":28847:28851   */\n      0x24\n        /* \"#utility.yul\":28844:28845   */\n      0x00\n        /* \"#utility.yul\":28837:28852   */\n      revert\n        /* \"#utility.yul\":28864:29044   */\n    tag_86:\n        /* \"#utility.yul\":28912:28989   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28909:28910   */\n      0x00\n        /* \"#utility.yul\":28902:28990   */\n      mstore\n        /* \"#utility.yul\":29009:29013   */\n      0x41\n        /* \"#utility.yul\":29006:29007   */\n      0x04\n        /* \"#utility.yul\":28999:29014   */\n      mstore\n        /* \"#utility.yul\":29033:29037   */\n      0x24\n        /* \"#utility.yul\":29030:29031   */\n      0x00\n        /* \"#utility.yul\":29023:29038   */\n      revert\n        /* \"#utility.yul\":29050:29233   */\n    tag_181:\n        /* \"#utility.yul\":29085:29088   */\n      0x00\n        /* \"#utility.yul\":29123:29124   */\n      0x03\n        /* \"#utility.yul\":29105:29121   */\n      returndatasize\n        /* \"#utility.yul\":29102:29125   */\n      gt\n        /* \"#utility.yul\":29099:29227   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":29161:29162   */\n      0x04\n        /* \"#utility.yul\":29158:29159   */\n      0x00\n        /* \"#utility.yul\":29155:29156   */\n      dup1\n        /* \"#utility.yul\":29140:29163   */\n      returndatacopy\n        /* \"#utility.yul\":29183:29217   */\n      tag_560\n        /* \"#utility.yul\":29214:29215   */\n      0x00\n        /* \"#utility.yul\":29208:29216   */\n      mload\n        /* \"#utility.yul\":29183:29217   */\n      tag_561\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":29176:29217   */\n      swap1\n      pop\n        /* \"#utility.yul\":29099:29227   */\n    tag_559:\n        /* \"#utility.yul\":29050:29233   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":29239:29356   */\n    tag_263:\n        /* \"#utility.yul\":29348:29349   */\n      0x00\n        /* \"#utility.yul\":29345:29346   */\n      dup1\n        /* \"#utility.yul\":29338:29350   */\n      revert\n        /* \"#utility.yul\":29362:29479   */\n    tag_228:\n        /* \"#utility.yul\":29471:29472   */\n      0x00\n        /* \"#utility.yul\":29468:29469   */\n      dup1\n        /* \"#utility.yul\":29461:29473   */\n      revert\n        /* \"#utility.yul\":29485:29602   */\n    tag_253:\n        /* \"#utility.yul\":29594:29595   */\n      0x00\n        /* \"#utility.yul\":29591:29592   */\n      dup1\n        /* \"#utility.yul\":29584:29596   */\n      revert\n        /* \"#utility.yul\":29608:29725   */\n    tag_302:\n        /* \"#utility.yul\":29717:29718   */\n      0x00\n        /* \"#utility.yul\":29714:29715   */\n      dup1\n        /* \"#utility.yul\":29707:29719   */\n      revert\n        /* \"#utility.yul\":29731:29848   */\n    tag_292:\n        /* \"#utility.yul\":29840:29841   */\n      0x00\n        /* \"#utility.yul\":29837:29838   */\n      dup1\n        /* \"#utility.yul\":29830:29842   */\n      revert\n        /* \"#utility.yul\":29854:29956   */\n    tag_386:\n        /* \"#utility.yul\":29895:29901   */\n      0x00\n        /* \"#utility.yul\":29946:29948   */\n      0x1f\n        /* \"#utility.yul\":29942:29949   */\n      not\n        /* \"#utility.yul\":29937:29939   */\n      0x1f\n        /* \"#utility.yul\":29930:29935   */\n      dup4\n        /* \"#utility.yul\":29926:29940   */\n      add\n        /* \"#utility.yul\":29922:29950   */\n      and\n        /* \"#utility.yul\":29912:29950   */\n      swap1\n      pop\n        /* \"#utility.yul\":29854:29956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29962:30068   */\n    tag_561:\n        /* \"#utility.yul\":30006:30014   */\n      0x00\n        /* \"#utility.yul\":30055:30060   */\n      dup2\n        /* \"#utility.yul\":30050:30053   */\n      0xe0\n        /* \"#utility.yul\":30046:30061   */\n      shr\n        /* \"#utility.yul\":30025:30061   */\n      swap1\n      pop\n        /* \"#utility.yul\":29962:30068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30074:30313   */\n    tag_399:\n        /* \"#utility.yul\":30214:30248   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":30210:30211   */\n      0x00\n        /* \"#utility.yul\":30202:30208   */\n      dup3\n        /* \"#utility.yul\":30198:30212   */\n      add\n        /* \"#utility.yul\":30191:30249   */\n      mstore\n        /* \"#utility.yul\":30283:30305   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":30278:30280   */\n      0x20\n        /* \"#utility.yul\":30270:30276   */\n      dup3\n        /* \"#utility.yul\":30266:30281   */\n      add\n        /* \"#utility.yul\":30259:30306   */\n      mstore\n        /* \"#utility.yul\":30074:30313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30319:30546   */\n    tag_404:\n        /* \"#utility.yul\":30459:30493   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":30455:30456   */\n      0x00\n        /* \"#utility.yul\":30447:30453   */\n      dup3\n        /* \"#utility.yul\":30443:30457   */\n      add\n        /* \"#utility.yul\":30436:30494   */\n      mstore\n        /* \"#utility.yul\":30528:30538   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30523:30525   */\n      0x20\n        /* \"#utility.yul\":30515:30521   */\n      dup3\n        /* \"#utility.yul\":30511:30526   */\n      add\n        /* \"#utility.yul\":30504:30539   */\n      mstore\n        /* \"#utility.yul\":30319:30546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30552:30782   */\n    tag_409:\n        /* \"#utility.yul\":30692:30726   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":30688:30689   */\n      0x00\n        /* \"#utility.yul\":30680:30686   */\n      dup3\n        /* \"#utility.yul\":30676:30690   */\n      add\n        /* \"#utility.yul\":30669:30727   */\n      mstore\n        /* \"#utility.yul\":30761:30774   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30756:30758   */\n      0x20\n        /* \"#utility.yul\":30748:30754   */\n      dup3\n        /* \"#utility.yul\":30744:30759   */\n      add\n        /* \"#utility.yul\":30737:30775   */\n      mstore\n        /* \"#utility.yul\":30552:30782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30788:31016   */\n    tag_414:\n        /* \"#utility.yul\":30928:30962   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":30924:30925   */\n      0x00\n        /* \"#utility.yul\":30916:30922   */\n      dup3\n        /* \"#utility.yul\":30912:30926   */\n      add\n        /* \"#utility.yul\":30905:30963   */\n      mstore\n        /* \"#utility.yul\":30997:31008   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30992:30994   */\n      0x20\n        /* \"#utility.yul\":30984:30990   */\n      dup3\n        /* \"#utility.yul\":30980:30995   */\n      add\n        /* \"#utility.yul\":30973:31009   */\n      mstore\n        /* \"#utility.yul\":30788:31016   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31022:31246   */\n    tag_419:\n        /* \"#utility.yul\":31162:31196   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":31158:31159   */\n      0x00\n        /* \"#utility.yul\":31150:31156   */\n      dup3\n        /* \"#utility.yul\":31146:31160   */\n      add\n        /* \"#utility.yul\":31139:31197   */\n      mstore\n        /* \"#utility.yul\":31231:31238   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31226:31228   */\n      0x20\n        /* \"#utility.yul\":31218:31224   */\n      dup3\n        /* \"#utility.yul\":31214:31229   */\n      add\n        /* \"#utility.yul\":31207:31239   */\n      mstore\n        /* \"#utility.yul\":31022:31246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31252:31489   */\n    tag_424:\n        /* \"#utility.yul\":31392:31426   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":31388:31389   */\n      0x00\n        /* \"#utility.yul\":31380:31386   */\n      dup3\n        /* \"#utility.yul\":31376:31390   */\n      add\n        /* \"#utility.yul\":31369:31427   */\n      mstore\n        /* \"#utility.yul\":31461:31481   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":31456:31458   */\n      0x20\n        /* \"#utility.yul\":31448:31454   */\n      dup3\n        /* \"#utility.yul\":31444:31459   */\n      add\n        /* \"#utility.yul\":31437:31482   */\n      mstore\n        /* \"#utility.yul\":31252:31489   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31495:31724   */\n    tag_429:\n        /* \"#utility.yul\":31635:31669   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":31631:31632   */\n      0x00\n        /* \"#utility.yul\":31623:31629   */\n      dup3\n        /* \"#utility.yul\":31619:31633   */\n      add\n        /* \"#utility.yul\":31612:31670   */\n      mstore\n        /* \"#utility.yul\":31704:31716   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31699:31701   */\n      0x20\n        /* \"#utility.yul\":31691:31697   */\n      dup3\n        /* \"#utility.yul\":31687:31702   */\n      add\n        /* \"#utility.yul\":31680:31717   */\n      mstore\n        /* \"#utility.yul\":31495:31724   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31730:31958   */\n    tag_434:\n        /* \"#utility.yul\":31870:31904   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":31866:31867   */\n      0x00\n        /* \"#utility.yul\":31858:31864   */\n      dup3\n        /* \"#utility.yul\":31854:31868   */\n      add\n        /* \"#utility.yul\":31847:31905   */\n      mstore\n        /* \"#utility.yul\":31939:31950   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31934:31936   */\n      0x20\n        /* \"#utility.yul\":31926:31932   */\n      dup3\n        /* \"#utility.yul\":31922:31937   */\n      add\n        /* \"#utility.yul\":31915:31951   */\n      mstore\n        /* \"#utility.yul\":31730:31958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31964:32192   */\n    tag_439:\n        /* \"#utility.yul\":32104:32138   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":32100:32101   */\n      0x00\n        /* \"#utility.yul\":32092:32098   */\n      dup3\n        /* \"#utility.yul\":32088:32102   */\n      add\n        /* \"#utility.yul\":32081:32139   */\n      mstore\n        /* \"#utility.yul\":32173:32184   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32168:32170   */\n      0x20\n        /* \"#utility.yul\":32160:32166   */\n      dup3\n        /* \"#utility.yul\":32156:32171   */\n      add\n        /* \"#utility.yul\":32149:32185   */\n      mstore\n        /* \"#utility.yul\":31964:32192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32198:32425   */\n    tag_444:\n        /* \"#utility.yul\":32338:32372   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":32334:32335   */\n      0x00\n        /* \"#utility.yul\":32326:32332   */\n      dup3\n        /* \"#utility.yul\":32322:32336   */\n      add\n        /* \"#utility.yul\":32315:32373   */\n      mstore\n        /* \"#utility.yul\":32407:32417   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32402:32404   */\n      0x20\n        /* \"#utility.yul\":32394:32400   */\n      dup3\n        /* \"#utility.yul\":32390:32405   */\n      add\n        /* \"#utility.yul\":32383:32418   */\n      mstore\n        /* \"#utility.yul\":32198:32425   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32431:33142   */\n    tag_183:\n        /* \"#utility.yul\":32470:32473   */\n      0x00\n        /* \"#utility.yul\":32508:32512   */\n      0x44\n        /* \"#utility.yul\":32490:32506   */\n      returndatasize\n        /* \"#utility.yul\":32487:32513   */\n      lt\n        /* \"#utility.yul\":32484:32523   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":32516:32521   */\n      jump(tag_579)\n        /* \"#utility.yul\":32484:32523   */\n    tag_580:\n        /* \"#utility.yul\":32545:32565   */\n      tag_581\n      tag_499\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":32620:32621   */\n      0x04\n        /* \"#utility.yul\":32602:32618   */\n      returndatasize\n        /* \"#utility.yul\":32598:32622   */\n      sub\n        /* \"#utility.yul\":32595:32596   */\n      0x04\n        /* \"#utility.yul\":32589:32593   */\n      dup3\n        /* \"#utility.yul\":32574:32623   */\n      returndatacopy\n        /* \"#utility.yul\":32653:32657   */\n      dup1\n        /* \"#utility.yul\":32647:32658   */\n      mload\n        /* \"#utility.yul\":32752:32768   */\n      returndatasize\n        /* \"#utility.yul\":32745:32749   */\n      0x24\n        /* \"#utility.yul\":32737:32743   */\n      dup3\n        /* \"#utility.yul\":32733:32750   */\n      add\n        /* \"#utility.yul\":32730:32769   */\n      gt\n        /* \"#utility.yul\":32697:32715   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":32689:32695   */\n      dup3\n        /* \"#utility.yul\":32686:32716   */\n      gt\n        /* \"#utility.yul\":32670:32783   */\n      or\n        /* \"#utility.yul\":32667:32813   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":32798:32803   */\n      pop\n      pop\n      jump(tag_579)\n        /* \"#utility.yul\":32667:32813   */\n    tag_582:\n        /* \"#utility.yul\":32844:32850   */\n      dup1\n        /* \"#utility.yul\":32838:32842   */\n      dup3\n        /* \"#utility.yul\":32834:32851   */\n      add\n        /* \"#utility.yul\":32880:32883   */\n      dup1\n        /* \"#utility.yul\":32874:32884   */\n      mload\n        /* \"#utility.yul\":32907:32925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":32899:32905   */\n      dup2\n        /* \"#utility.yul\":32896:32926   */\n      gt\n        /* \"#utility.yul\":32893:32936   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":32929:32934   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_579)\n        /* \"#utility.yul\":32893:32936   */\n    tag_583:\n        /* \"#utility.yul\":32977:32983   */\n      dup1\n        /* \"#utility.yul\":32970:32974   */\n      0x20\n        /* \"#utility.yul\":32965:32968   */\n      dup4\n        /* \"#utility.yul\":32961:32975   */\n      add\n        /* \"#utility.yul\":32957:32984   */\n      add\n        /* \"#utility.yul\":33036:33037   */\n      0x04\n        /* \"#utility.yul\":33018:33034   */\n      returndatasize\n        /* \"#utility.yul\":33014:33038   */\n      sub\n        /* \"#utility.yul\":33008:33012   */\n      dup6\n        /* \"#utility.yul\":33004:33039   */\n      add\n        /* \"#utility.yul\":32999:33002   */\n      dup2\n        /* \"#utility.yul\":32996:33040   */\n      gt\n        /* \"#utility.yul\":32993:33050   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":33043:33048   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_579)\n        /* \"#utility.yul\":32993:33050   */\n    tag_584:\n        /* \"#utility.yul\":33060:33117   */\n      tag_585\n        /* \"#utility.yul\":33108:33114   */\n      dup3\n        /* \"#utility.yul\":33102:33106   */\n      0x20\n        /* \"#utility.yul\":33098:33115   */\n      add\n        /* \"#utility.yul\":33090:33096   */\n      dup6\n        /* \"#utility.yul\":33086:33116   */\n      add\n        /* \"#utility.yul\":33080:33084   */\n      dup7\n        /* \"#utility.yul\":33060:33117   */\n      tag_501\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":33133:33136   */\n      dup3\n        /* \"#utility.yul\":33126:33136   */\n      swap6\n      pop\n        /* \"#utility.yul\":32474:33142   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":32431:33142   */\n    tag_579:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":33148:33270   */\n    tag_258:\n        /* \"#utility.yul\":33221:33245   */\n      tag_587\n        /* \"#utility.yul\":33239:33244   */\n      dup2\n        /* \"#utility.yul\":33221:33245   */\n      tag_358\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":33214:33219   */\n      dup2\n        /* \"#utility.yul\":33211:33246   */\n      eq\n        /* \"#utility.yul\":33201:33264   */\n      tag_588\n      jumpi\n        /* \"#utility.yul\":33260:33261   */\n      0x00\n        /* \"#utility.yul\":33257:33258   */\n      dup1\n        /* \"#utility.yul\":33250:33262   */\n      revert\n        /* \"#utility.yul\":33201:33264   */\n    tag_588:\n        /* \"#utility.yul\":33148:33270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33276:33392   */\n    tag_273:\n        /* \"#utility.yul\":33346:33367   */\n      tag_590\n        /* \"#utility.yul\":33361:33366   */\n      dup2\n        /* \"#utility.yul\":33346:33367   */\n      tag_376\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":33339:33344   */\n      dup2\n        /* \"#utility.yul\":33336:33368   */\n      eq\n        /* \"#utility.yul\":33326:33386   */\n      tag_591\n      jumpi\n        /* \"#utility.yul\":33382:33383   */\n      0x00\n        /* \"#utility.yul\":33379:33380   */\n      dup1\n        /* \"#utility.yul\":33372:33384   */\n      revert\n        /* \"#utility.yul\":33326:33386   */\n    tag_591:\n        /* \"#utility.yul\":33276:33392   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33398:33518   */\n    tag_277:\n        /* \"#utility.yul\":33470:33493   */\n      tag_593\n        /* \"#utility.yul\":33487:33492   */\n      dup2\n        /* \"#utility.yul\":33470:33493   */\n      tag_531\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":33463:33468   */\n      dup2\n        /* \"#utility.yul\":33460:33494   */\n      eq\n        /* \"#utility.yul\":33450:33512   */\n      tag_594\n      jumpi\n        /* \"#utility.yul\":33508:33509   */\n      0x00\n        /* \"#utility.yul\":33505:33506   */\n      dup1\n        /* \"#utility.yul\":33498:33510   */\n      revert\n        /* \"#utility.yul\":33450:33512   */\n    tag_594:\n        /* \"#utility.yul\":33398:33518   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33524:33646   */\n    tag_288:\n        /* \"#utility.yul\":33597:33621   */\n      tag_596\n        /* \"#utility.yul\":33615:33620   */\n      dup2\n        /* \"#utility.yul\":33597:33621   */\n      tag_447\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":33590:33595   */\n      dup2\n        /* \"#utility.yul\":33587:33622   */\n      eq\n        /* \"#utility.yul\":33577:33640   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":33636:33637   */\n      0x00\n        /* \"#utility.yul\":33633:33634   */\n      dup1\n        /* \"#utility.yul\":33626:33638   */\n      revert\n        /* \"#utility.yul\":33577:33640   */\n    tag_597:\n        /* \"#utility.yul\":33524:33646   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205b655ed291a5a788a07cabeb4a0dc42ddbeb560917ab825e458abab31fff56ce64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_524": {
									"entryPoint": 79,
									"id": 524,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:9"
															},
															"nodeType": "YulIf",
															"src": "262:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:9",
														"type": ""
													}
												],
												"src": "7:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:9"
															},
															"nodeType": "YulIf",
															"src": "531:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:9",
														"type": ""
													}
												],
												"src": "448:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:437:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "944:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "917:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:32:9"
															},
															"nodeType": "YulIf",
															"src": "906:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1035:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1050:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1074:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1085:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1064:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1054:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1135:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1137:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1137:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1137:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1115:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1104:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1101:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1232:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1288:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1299:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1284:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1284:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1308:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1242:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1232:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "866:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "877:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "889:6:9",
														"type": ""
													}
												],
												"src": "809:524:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1380:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1390:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1400:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1429:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1364:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1373:6:9",
														"type": ""
													}
												],
												"src": "1339:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1514:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1524:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1534:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1507:6:9",
														"type": ""
													}
												],
												"src": "1474:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1729:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:30:9"
															},
															"nodeType": "YulIf",
															"src": "1693:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1759:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1767:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1833:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1845:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1617:4:9",
														"type": ""
													}
												],
												"src": "1555:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1928:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1937:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1932:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1997:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2022:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2027:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2018:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2018:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2046:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2037:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2037:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2031:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2031:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2011:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1958:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1961:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1955:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1969:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1971:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1980:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1971:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1951:3:9",
																"statements": []
															},
															"src": "1947:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2144:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2149:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2140:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2140:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:9"
															},
															"nodeType": "YulIf",
															"src": "2069:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1900:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1905:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1910:6:9",
														"type": ""
													}
												],
												"src": "1869:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2243:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2257:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2274:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2304:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2278:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2365:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2379:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2375:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2331:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:26:9"
															},
															"nodeType": "YulIf",
															"src": "2321:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2454:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2468:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2468:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2468:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2418:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2415:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:38:9"
															},
															"nodeType": "YulIf",
															"src": "2412:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2217:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2226:6:9",
														"type": ""
													}
												],
												"src": "2182:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2561:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2613:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2591:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2565:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2732:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2673:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2709:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2706:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2667:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:62:9"
															},
															"nodeType": "YulIf",
															"src": "2664:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2772:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2537:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2545:4:9",
														"type": ""
													}
												],
												"src": "2508:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2795:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3009:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2981:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3167:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3290:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3502:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3519:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3413:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3625:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3536:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3735:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3690:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3700:6:9",
														"type": ""
													}
												],
												"src": "3659:102:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200293c3803806200293c833981810160405281019062000037919062000199565b62000048816200004f60201b60201c565b506200036e565b8060029080519060200190620000679291906200006b565b5050565b82805462000079906200027f565b90600052602060002090601f0160209004810192826200009d5760008555620000e9565b82601f10620000b857805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e8578251825591602001919060010190620000cb565b5b509050620000f89190620000fc565b5090565b5b8082111562000117576000816000905550600101620000fd565b5090565b6000620001326200012c8462000213565b620001ea565b9050828152602081018484840111156200015157620001506200034e565b5b6200015e84828562000249565b509392505050565b600082601f8301126200017e576200017d62000349565b5b8151620001908482602086016200011b565b91505092915050565b600060208284031215620001b257620001b162000358565b5b600082015167ffffffffffffffff811115620001d357620001d262000353565b5b620001e18482850162000166565b91505092915050565b6000620001f662000209565b9050620002048282620002b5565b919050565b6000604051905090565b600067ffffffffffffffff8211156200023157620002306200031a565b5b6200023c826200035d565b9050602081019050919050565b60005b83811015620002695780820151818401526020810190506200024c565b8381111562000279576000848401525b50505050565b600060028204905060018216806200029857607f821691505b60208210811415620002af57620002ae620002eb565b5b50919050565b620002c0826200035d565b810181811067ffffffffffffffff82111715620002e257620002e16200031a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6125be806200037e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906116f7565b6101d0565b6040516100b39190611d50565b60405180910390f35b6100d660048036038101906100d191906117af565b610299565b6040516100e39190611bd3565b60405180910390f35b61010660048036038101906101019190611809565b61037b565b6040516101139190611bee565b60405180910390f35b61013660048036038101906101319190611551565b61040f565b005b610152600480360381019061014d9190611737565b6104b0565b60405161015f9190611b7a565b60405180910390f35b610182600480360381019061017d91906116b7565b6105c9565b005b61019e60048036038101906101999190611511565b6105df565b6040516101ab9190611bd3565b60405180910390f35b6101ce60048036038101906101c99190611620565b610673565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c50565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610374575061037382610714565b5b9050919050565b60606002805461038a90611fbf565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611fbf565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b61041761077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c8561045761077e565b6105df565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611cb0565b60405180910390fd5b6104a98585858585610786565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611d10565b60405180910390fd5b6000835167ffffffffffffffff811115610513576105126120f8565b5b6040519080825280602002602001820160405280156105415781602001602082028036833780820191505090505b50905060005b84518110156105be5761058e858281518110610566576105656120c9565b5b6020026020010151858381518110610581576105806120c9565b5b60200260200101516101d0565b8282815181106105a1576105a06120c9565b5b602002602001018181525050806105b790612022565b9050610547565b508091505092915050565b6105db6105d461077e565b8383610a9a565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067b61077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c157506106c0856106bb61077e565b6105df565b5b610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790611c70565b60405180910390fd5b61070d8585858585610c07565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611d30565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083190611c90565b60405180910390fd5b600061084461077e565b9050610854818787878787610e89565b60005b8451811015610a05576000858281518110610875576108746120c9565b5b602002602001015190506000858381518110610894576108936120c9565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90611cd0565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ea9190611eb3565b92505081905550505050806109fe90612022565b9050610857565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7c929190611b9c565b60405180910390a4610a92818787878787610e91565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0090611cf0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bfa9190611bd3565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6e90611c90565b60405180910390fd5b6000610c8161077e565b9050610ca1818787610c9288611078565b610c9b88611078565b87610e89565b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611cd0565b60405180910390fd5b83810360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ded9190611eb3565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610e6a929190611d6b565b60405180910390a4610e808288888888886110f2565b50505050505050565b505050505050565b610eb08473ffffffffffffffffffffffffffffffffffffffff166112d9565b15611070578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610ef6959493929190611ab8565b602060405180830381600087803b158015610f1057600080fd5b505af1925050508015610f4157506040513d601f19601f82011682018060405250810190610f3e91906117dc565b60015b610fe757610f4d612127565b806308c379a01415610faa5750610f62612496565b80610f6d5750610fac565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa19190611bee565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fde90611c10565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461106e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106590611c30565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff811115611097576110966120f8565b5b6040519080825280602002602001820160405280156110c55781602001602082028036833780820191505090505b50905082816000815181106110dd576110dc6120c9565b5b60200260200101818152505080915050919050565b6111118473ffffffffffffffffffffffffffffffffffffffff166112d9565b156112d1578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611157959493929190611b20565b602060405180830381600087803b15801561117157600080fd5b505af19250505080156111a257506040513d601f19601f8201168201806040525081019061119f91906117dc565b60015b611248576111ae612127565b806308c379a0141561120b57506111c3612496565b806111ce575061120d565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112029190611bee565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123f90611c10565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c690611c30565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061130f61130a84611db9565b611d94565b905080838252602082019050828560208602820111156113325761133161214e565b5b60005b858110156113625781611348888261141e565b845260208401935060208301925050600181019050611335565b5050509392505050565b600061137f61137a84611de5565b611d94565b905080838252602082019050828560208602820111156113a2576113a161214e565b5b60005b858110156113d257816113b888826114fc565b8452602084019350602083019250506001810190506113a5565b5050509392505050565b60006113ef6113ea84611e11565b611d94565b90508281526020810184848401111561140b5761140a612153565b5b611416848285611f7d565b509392505050565b60008135905061142d8161252c565b92915050565b600082601f83011261144857611447612149565b5b81356114588482602086016112fc565b91505092915050565b600082601f83011261147657611475612149565b5b813561148684826020860161136c565b91505092915050565b60008135905061149e81612543565b92915050565b6000813590506114b38161255a565b92915050565b6000815190506114c88161255a565b92915050565b600082601f8301126114e3576114e2612149565b5b81356114f38482602086016113dc565b91505092915050565b60008135905061150b81612571565b92915050565b600080604083850312156115285761152761215d565b5b60006115368582860161141e565b92505060206115478582860161141e565b9150509250929050565b600080600080600060a0868803121561156d5761156c61215d565b5b600061157b8882890161141e565b955050602061158c8882890161141e565b945050604086013567ffffffffffffffff8111156115ad576115ac612158565b5b6115b988828901611461565b935050606086013567ffffffffffffffff8111156115da576115d9612158565b5b6115e688828901611461565b925050608086013567ffffffffffffffff81111561160757611606612158565b5b611613888289016114ce565b9150509295509295909350565b600080600080600060a0868803121561163c5761163b61215d565b5b600061164a8882890161141e565b955050602061165b8882890161141e565b945050604061166c888289016114fc565b935050606061167d888289016114fc565b925050608086013567ffffffffffffffff81111561169e5761169d612158565b5b6116aa888289016114ce565b9150509295509295909350565b600080604083850312156116ce576116cd61215d565b5b60006116dc8582860161141e565b92505060206116ed8582860161148f565b9150509250929050565b6000806040838503121561170e5761170d61215d565b5b600061171c8582860161141e565b925050602061172d858286016114fc565b9150509250929050565b6000806040838503121561174e5761174d61215d565b5b600083013567ffffffffffffffff81111561176c5761176b612158565b5b61177885828601611433565b925050602083013567ffffffffffffffff81111561179957611798612158565b5b6117a585828601611461565b9150509250929050565b6000602082840312156117c5576117c461215d565b5b60006117d3848285016114a4565b91505092915050565b6000602082840312156117f2576117f161215d565b5b6000611800848285016114b9565b91505092915050565b60006020828403121561181f5761181e61215d565b5b600061182d848285016114fc565b91505092915050565b60006118428383611a9a565b60208301905092915050565b61185781611f09565b82525050565b600061186882611e52565b6118728185611e80565b935061187d83611e42565b8060005b838110156118ae5781516118958882611836565b97506118a083611e73565b925050600181019050611881565b5085935050505092915050565b6118c481611f1b565b82525050565b60006118d582611e5d565b6118df8185611e91565b93506118ef818560208601611f8c565b6118f881612162565b840191505092915050565b600061190e82611e68565b6119188185611ea2565b9350611928818560208601611f8c565b61193181612162565b840191505092915050565b6000611949603483611ea2565b915061195482612180565b604082019050919050565b600061196c602883611ea2565b9150611977826121cf565b604082019050919050565b600061198f602b83611ea2565b915061199a8261221e565b604082019050919050565b60006119b2602983611ea2565b91506119bd8261226d565b604082019050919050565b60006119d5602583611ea2565b91506119e0826122bc565b604082019050919050565b60006119f8603283611ea2565b9150611a038261230b565b604082019050919050565b6000611a1b602a83611ea2565b9150611a268261235a565b604082019050919050565b6000611a3e602983611ea2565b9150611a49826123a9565b604082019050919050565b6000611a61602983611ea2565b9150611a6c826123f8565b604082019050919050565b6000611a84602883611ea2565b9150611a8f82612447565b604082019050919050565b611aa381611f73565b82525050565b611ab281611f73565b82525050565b600060a082019050611acd600083018861184e565b611ada602083018761184e565b8181036040830152611aec818661185d565b90508181036060830152611b00818561185d565b90508181036080830152611b1481846118ca565b90509695505050505050565b600060a082019050611b35600083018861184e565b611b42602083018761184e565b611b4f6040830186611aa9565b611b5c6060830185611aa9565b8181036080830152611b6e81846118ca565b90509695505050505050565b60006020820190508181036000830152611b94818461185d565b905092915050565b60006040820190508181036000830152611bb6818561185d565b90508181036020830152611bca818461185d565b90509392505050565b6000602082019050611be860008301846118bb565b92915050565b60006020820190508181036000830152611c088184611903565b905092915050565b60006020820190508181036000830152611c298161193c565b9050919050565b60006020820190508181036000830152611c498161195f565b9050919050565b60006020820190508181036000830152611c6981611982565b9050919050565b60006020820190508181036000830152611c89816119a5565b9050919050565b60006020820190508181036000830152611ca9816119c8565b9050919050565b60006020820190508181036000830152611cc9816119eb565b9050919050565b60006020820190508181036000830152611ce981611a0e565b9050919050565b60006020820190508181036000830152611d0981611a31565b9050919050565b60006020820190508181036000830152611d2981611a54565b9050919050565b60006020820190508181036000830152611d4981611a77565b9050919050565b6000602082019050611d656000830184611aa9565b92915050565b6000604082019050611d806000830185611aa9565b611d8d6020830184611aa9565b9392505050565b6000611d9e611daf565b9050611daa8282611ff1565b919050565b6000604051905090565b600067ffffffffffffffff821115611dd457611dd36120f8565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e0057611dff6120f8565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e2c57611e2b6120f8565b5b611e3582612162565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611ebe82611f73565b9150611ec983611f73565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611efe57611efd61206b565b5b828201905092915050565b6000611f1482611f53565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611faa578082015181840152602081019050611f8f565b83811115611fb9576000848401525b50505050565b60006002820490506001821680611fd757607f821691505b60208210811415611feb57611fea61209a565b5b50919050565b611ffa82612162565b810181811067ffffffffffffffff82111715612019576120186120f8565b5b80604052505050565b600061202d82611f73565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156120605761205f61206b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156121465760046000803e612143600051612173565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b600060443d10156124a657612529565b6124ae611daf565b60043d036004823e80513d602482011167ffffffffffffffff821117156124d6575050612529565b808201805167ffffffffffffffff8111156124f45750505050612529565b80602083010160043d038501811115612511575050505050612529565b61252082602001850186611ff1565b82955050505050505b90565b61253581611f09565b811461254057600080fd5b50565b61254c81611f1b565b811461255757600080fd5b50565b61256381611f27565b811461256e57600080fd5b50565b61257a81611f73565b811461258557600080fd5b5056fea26469706673582212205b655ed291a5a788a07cabeb4a0dc42ddbeb560917ab825e458abab31fff56ce64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x293C CODESIZE SUB DUP1 PUSH3 0x293C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x199 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x36E JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x27F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x132 PUSH3 0x12C DUP5 PUSH3 0x213 JUMP JUMPDEST PUSH3 0x1EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH3 0x150 PUSH3 0x34E JUMP JUMPDEST JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x249 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17E JUMPI PUSH3 0x17D PUSH3 0x349 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x190 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B2 JUMPI PUSH3 0x1B1 PUSH3 0x358 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1D3 JUMPI PUSH3 0x1D2 PUSH3 0x353 JUMP JUMPDEST JUMPDEST PUSH3 0x1E1 DUP5 DUP3 DUP6 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F6 PUSH3 0x209 JUMP JUMPDEST SWAP1 POP PUSH3 0x204 DUP3 DUP3 PUSH3 0x2B5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x31A JUMP JUMPDEST JUMPDEST PUSH3 0x23C DUP3 PUSH3 0x35D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x269 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x24C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x279 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x298 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2AF JUMPI PUSH3 0x2AE PUSH3 0x2EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C0 DUP3 PUSH3 0x35D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2E2 JUMPI PUSH3 0x2E1 PUSH3 0x31A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25BE DUP1 PUSH3 0x37E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x714 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1FBF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x541 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B7 SWAP1 PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP PUSH2 0x547 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D4 PUSH2 0x77E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C1 JUMPI POP PUSH2 0x6C0 DUP6 PUSH2 0x6BB PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC07 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0x854 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP3 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA92 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE91 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB00 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6E SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC81 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0xCA1 DUP2 DUP8 DUP8 PUSH2 0xC92 DUP9 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0xC9B DUP9 PUSH2 0x1078 JUMP JUMPDEST DUP8 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2F SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE6A SWAP3 SWAP2 SWAP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE80 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x10F2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEB0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12D9 JUMP JUMPDEST ISZERO PUSH2 0x1070 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF41 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFE7 JUMPI PUSH2 0xF4D PUSH2 0x2127 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFAA JUMPI POP PUSH2 0xF62 PUSH2 0x2496 JUMP JUMPDEST DUP1 PUSH2 0xF6D JUMPI POP PUSH2 0xFAC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA1 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDE SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x106E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1065 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1097 JUMPI PUSH2 0x1096 PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10DD JUMPI PUSH2 0x10DC PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1111 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12D9 JUMP JUMPDEST ISZERO PUSH2 0x12D1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1157 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11A2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119F SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1248 JUMPI PUSH2 0x11AE PUSH2 0x2127 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x120B JUMPI POP PUSH2 0x11C3 PUSH2 0x2496 JUMP JUMPDEST DUP1 PUSH2 0x11CE JUMPI POP PUSH2 0x120D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1202 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123F SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C6 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130F PUSH2 0x130A DUP5 PUSH2 0x1DB9 JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1332 JUMPI PUSH2 0x1331 PUSH2 0x214E JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1362 JUMPI DUP2 PUSH2 0x1348 DUP9 DUP3 PUSH2 0x141E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1335 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137F PUSH2 0x137A DUP5 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x13A2 JUMPI PUSH2 0x13A1 PUSH2 0x214E JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP2 PUSH2 0x13B8 DUP9 DUP3 PUSH2 0x14FC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13A5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EF PUSH2 0x13EA DUP5 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x140B JUMPI PUSH2 0x140A PUSH2 0x2153 JUMP JUMPDEST JUMPDEST PUSH2 0x1416 DUP5 DUP3 DUP6 PUSH2 0x1F7D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142D DUP2 PUSH2 0x252C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1448 JUMPI PUSH2 0x1447 PUSH2 0x2149 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1458 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1476 JUMPI PUSH2 0x1475 PUSH2 0x2149 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1486 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x136C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x149E DUP2 PUSH2 0x2543 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B3 DUP2 PUSH2 0x255A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14C8 DUP2 PUSH2 0x255A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14E3 JUMPI PUSH2 0x14E2 PUSH2 0x2149 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150B DUP2 PUSH2 0x2571 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1536 DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1547 DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x156D JUMPI PUSH2 0x156C PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x157B DUP9 DUP3 DUP10 ADD PUSH2 0x141E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x158C DUP9 DUP3 DUP10 ADD PUSH2 0x141E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AD JUMPI PUSH2 0x15AC PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x15B9 DUP9 DUP3 DUP10 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DA JUMPI PUSH2 0x15D9 PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x15E6 DUP9 DUP3 DUP10 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1607 JUMPI PUSH2 0x1606 PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x1613 DUP9 DUP3 DUP10 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x164A DUP9 DUP3 DUP10 ADD PUSH2 0x141E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x165B DUP9 DUP3 DUP10 ADD PUSH2 0x141E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x166C DUP9 DUP3 DUP10 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x167D DUP9 DUP3 DUP10 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x169E JUMPI PUSH2 0x169D PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x16AA DUP9 DUP3 DUP10 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CE JUMPI PUSH2 0x16CD PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16DC DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16ED DUP6 DUP3 DUP7 ADD PUSH2 0x148F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170E JUMPI PUSH2 0x170D PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x171C DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172D DUP6 DUP3 DUP7 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x174E JUMPI PUSH2 0x174D PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176C JUMPI PUSH2 0x176B PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x1778 DUP6 DUP3 DUP7 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1799 JUMPI PUSH2 0x1798 PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x14A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F2 JUMPI PUSH2 0x17F1 PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1800 DUP5 DUP3 DUP6 ADD PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181F JUMPI PUSH2 0x181E PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182D DUP5 DUP3 DUP6 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1842 DUP4 DUP4 PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1857 DUP2 PUSH2 0x1F09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP3 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x1872 DUP2 DUP6 PUSH2 0x1E80 JUMP JUMPDEST SWAP4 POP PUSH2 0x187D DUP4 PUSH2 0x1E42 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18AE JUMPI DUP2 MLOAD PUSH2 0x1895 DUP9 DUP3 PUSH2 0x1836 JUMP JUMPDEST SWAP8 POP PUSH2 0x18A0 DUP4 PUSH2 0x1E73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1881 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C4 DUP2 PUSH2 0x1F1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D5 DUP3 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x18DF DUP2 DUP6 PUSH2 0x1E91 JUMP JUMPDEST SWAP4 POP PUSH2 0x18EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x18F8 DUP2 PUSH2 0x2162 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190E DUP3 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x1918 DUP2 DUP6 PUSH2 0x1EA2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1928 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x1931 DUP2 PUSH2 0x2162 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1949 PUSH1 0x34 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1954 DUP3 PUSH2 0x2180 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196C PUSH1 0x28 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1977 DUP3 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198F PUSH1 0x2B DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x199A DUP3 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B2 PUSH1 0x29 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BD DUP3 PUSH2 0x226D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D5 PUSH1 0x25 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E0 DUP3 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F8 PUSH1 0x32 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A03 DUP3 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1B PUSH1 0x2A DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A26 DUP3 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3E PUSH1 0x29 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A49 DUP3 PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A61 PUSH1 0x29 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6C DUP3 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A84 PUSH1 0x28 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8F DUP3 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA3 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1AB2 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1ACD PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1ADA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x184E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1AEC DUP2 DUP7 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B00 DUP2 DUP6 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B14 DUP2 DUP5 PUSH2 0x18CA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B35 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1B42 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1B4F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x1B5C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1AA9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B6E DUP2 DUP5 PUSH2 0x18CA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B94 DUP2 DUP5 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 DUP6 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1BCA DUP2 DUP5 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C08 DUP2 DUP5 PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C29 DUP2 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C49 DUP2 PUSH2 0x195F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 PUSH2 0x1982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C89 DUP2 PUSH2 0x19A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CA9 DUP2 PUSH2 0x19C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC9 DUP2 PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE9 DUP2 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D09 DUP2 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D29 DUP2 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D49 DUP2 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D80 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x1D8D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AA9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E PUSH2 0x1DAF JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAA DUP3 DUP3 PUSH2 0x1FF1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD3 PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E00 JUMPI PUSH2 0x1DFF PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH2 0x1E35 DUP3 PUSH2 0x2162 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBE DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC9 DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EFE JUMPI PUSH2 0x1EFD PUSH2 0x206B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F14 DUP3 PUSH2 0x1F53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FAA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F8F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1FB9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FD7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1FEB JUMPI PUSH2 0x1FEA PUSH2 0x209A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FFA DUP3 PUSH2 0x2162 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2019 JUMPI PUSH2 0x2018 PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202D DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2060 JUMPI PUSH2 0x205F PUSH2 0x206B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2146 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2143 PUSH1 0x0 MLOAD PUSH2 0x2173 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x24A6 JUMPI PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x24AE PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x24D6 JUMPI POP POP PUSH2 0x2529 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F4 JUMPI POP POP POP POP PUSH2 0x2529 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2511 JUMPI POP POP POP POP POP PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x2520 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1FF1 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2535 DUP2 PUSH2 0x1F09 JUMP JUMPDEST DUP2 EQ PUSH2 0x2540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x254C DUP2 PUSH2 0x1F1B JUMP JUMPDEST DUP2 EQ PUSH2 0x2557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2563 DUP2 PUSH2 0x1F27 JUMP JUMPDEST DUP2 EQ PUSH2 0x256E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x257A DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP2 EQ PUSH2 0x2585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH6 0x5ED291A5A788 LOG0 PUSH29 0xABEB4A0DC42DDBEB560917AB825E458ABAB31FFF56CE64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "589:14992:0:-:0;;;1126:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1168:13;1176:4;1168:7;;;:13;;:::i;:::-;1126:62;589:14992;;8242:86;8315:6;8308:4;:13;;;;;;;;;;;;:::i;:::-;;8242:86;:::o;589:14992::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:9:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:524::-;889:6;938:2;926:9;917:7;913:23;909:32;906:119;;;944:79;;:::i;:::-;906:119;1085:1;1074:9;1070:17;1064:24;1115:18;1107:6;1104:30;1101:117;;;1137:79;;:::i;:::-;1101:117;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;:::i;:::-;1232:84;;1035:291;809:524;;;;:::o;1339:129::-;1373:6;1400:20;;:::i;:::-;1390:30;;1429:33;1457:4;1449:6;1429:33;:::i;:::-;1339:129;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:308::-;1617:4;1707:18;1699:6;1696:30;1693:56;;;1729:18;;:::i;:::-;1693:56;1767:29;1789:6;1767:29;:::i;:::-;1759:37;;1851:4;1845;1841:15;1833:23;;1555:308;;;:::o;1869:307::-;1937:1;1947:113;1961:6;1958:1;1955:13;1947:113;;;2046:1;2041:3;2037:11;2031:18;2027:1;2022:3;2018:11;2011:39;1983:2;1980:1;1976:10;1971:15;;1947:113;;;2078:6;2075:1;2072:13;2069:101;;;2158:1;2149:6;2144:3;2140:16;2133:27;2069:101;1918:258;1869:307;;;:::o;2182:320::-;2226:6;2263:1;2257:4;2253:12;2243:22;;2310:1;2304:4;2300:12;2331:18;2321:81;;2387:4;2379:6;2375:17;2365:27;;2321:81;2449:2;2441:6;2438:14;2418:18;2415:38;2412:84;;;2468:18;;:::i;:::-;2412:84;2233:269;2182:320;;;:::o;2508:281::-;2591:27;2613:4;2591:27;:::i;:::-;2583:6;2579:40;2721:6;2709:10;2706:22;2685:18;2673:10;2670:34;2667:62;2664:88;;;2732:18;;:::i;:::-;2664:88;2772:10;2768:2;2761:22;2551:238;2508:281;;:::o;2795:180::-;2843:77;2840:1;2833:88;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2981:180;3029:77;3026:1;3019:88;3126:4;3123:1;3116:15;3150:4;3147:1;3140:15;3167:117;3276:1;3273;3266:12;3290:117;3399:1;3396;3389:12;3413:117;3522:1;3519;3512:12;3536:117;3645:1;3642;3635:12;3659:102;3700:6;3751:2;3747:7;3742:2;3735:5;3731:14;3727:28;3717:38;;3659:102;;;:::o;589:14992:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1095": {
									"entryPoint": 4216,
									"id": 1095,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_939": {
									"entryPoint": 3721,
									"id": 939,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1067": {
									"entryPoint": 3729,
									"id": 1067,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1002": {
									"entryPoint": 4338,
									"id": 1002,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1581": {
									"entryPoint": 1918,
									"id": 1581,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_513": {
									"entryPoint": 1926,
									"id": 513,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_387": {
									"entryPoint": 3079,
									"id": 387,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_920": {
									"entryPoint": 2714,
									"id": 920,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_180": {
									"entryPoint": 1200,
									"id": 180,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_116": {
									"entryPoint": 464,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_215": {
									"entryPoint": 1503,
									"id": 215,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1292": {
									"entryPoint": 4825,
									"id": 1292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_293": {
									"entryPoint": 1039,
									"id": 293,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_253": {
									"entryPoint": 1651,
									"id": 253,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_197": {
									"entryPoint": 1481,
									"id": 197,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1817": {
									"entryPoint": 1812,
									"id": 1817,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_76": {
									"entryPoint": 665,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_88": {
									"entryPoint": 891,
									"id": 88,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 4860,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5084,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6840,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6944,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7531,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 8563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 8655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 8734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a": {
									"entryPoint": 8813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 9050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 9129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 9287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 9366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 9516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33649:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:9"
															},
															"nodeType": "YulIf",
															"src": "350:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:9",
														"type": ""
													}
												],
												"src": "24:722:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:9"
															},
															"nodeType": "YulIf",
															"src": "1095:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:9",
														"type": ""
													}
												],
												"src": "769:722:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1615:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1599:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1590:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1680:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1687:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1703:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1718:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1725:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1707:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1768:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1770:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1770:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1749:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1754:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1763:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1742:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:25:9"
															},
															"nodeType": "YulIf",
															"src": "1739:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1884:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1889:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1894:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1860:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1860:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1553:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1558:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1566:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1574:5:9",
														"type": ""
													}
												],
												"src": "1497:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1997:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1984:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1975:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2040:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2013:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1943:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1951:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1959:5:9",
														"type": ""
													}
												],
												"src": "1913:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2203:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2188:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2195:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:35:9"
															},
															"nodeType": "YulIf",
															"src": "2162:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2293:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2297:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2412:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2420:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2435:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2345:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2336:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2130:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2138:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2146:5:9",
														"type": ""
													}
												],
												"src": "2075:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2594:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2596:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2596:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2573:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2581:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2569:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2569:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:35:9"
															},
															"nodeType": "YulIf",
															"src": "2555:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2686:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2700:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2690:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2729:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2805:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2813:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2801:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2738:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2729:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2523:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2531:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2539:5:9",
														"type": ""
													}
												],
												"src": "2468:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2893:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2903:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2925:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2912:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2903:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2965:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2941:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2871:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:9",
														"type": ""
													}
												],
												"src": "2844:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3044:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3053:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3044:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3082:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3012:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3020:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3028:5:9",
														"type": ""
													}
												],
												"src": "2983:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3198:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3207:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3198:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3255:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3229:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3166:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3174:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3182:5:9",
														"type": ""
													}
												],
												"src": "3126:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3396:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3398:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3398:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3398:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3375:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3383:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3371:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3390:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:35:9"
															},
															"nodeType": "YulIf",
															"src": "3357:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3488:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3515:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3502:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3492:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3591:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3599:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3606:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3614:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3540:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3531:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3325:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3333:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3341:5:9",
														"type": ""
													}
												],
												"src": "3286:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3692:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3714:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3701:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3692:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3757:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3730:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3660:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3668:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3676:5:9",
														"type": ""
													}
												],
												"src": "3630:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3858:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3904:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3906:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3906:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3906:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3879:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:32:9"
															},
															"nodeType": "YulIf",
															"src": "3868:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3997:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4012:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4016:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4041:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4076:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4087:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4072:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4096:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4051:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4051:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4041:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4124:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4139:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4143:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4169:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4204:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4215:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4224:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4179:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4169:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3820:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3831:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3843:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3851:6:9",
														"type": ""
													}
												],
												"src": "3775:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:1316:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4495:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4497:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4497:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4497:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4469:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4478:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:33:9"
															},
															"nodeType": "YulIf",
															"src": "4458:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4588:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4603:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4617:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4607:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4632:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4667:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4678:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4663:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4663:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4687:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4642:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4632:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4715:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4730:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4734:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4760:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4795:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4806:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4791:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4815:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4770:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4760:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4843:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4889:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4900:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4885:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4885:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4872:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4951:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4953:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4953:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4953:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4923:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4931:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4920:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "4917:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5048:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5108:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5119:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5104:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5104:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5128:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5058:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5048:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5156:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5171:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5202:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5213:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5198:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5198:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5185:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5175:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5264:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5266:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5266:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5266:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5236:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5233:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5230:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5361:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5421:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5432:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5417:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5441:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5371:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5361:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5469:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5515:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5526:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5511:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5511:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5498:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5488:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5578:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5580:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5580:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5580:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5550:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5558:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5547:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5544:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5675:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5719:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5730:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5715:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5739:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5685:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5675:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4386:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4397:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4417:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4425:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4433:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4441:6:9",
														"type": ""
													}
												],
												"src": "4255:1509:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5913:946:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5960:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5962:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5962:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5962:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5934:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5955:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:33:9"
															},
															"nodeType": "YulIf",
															"src": "5923:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6053:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6068:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6072:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6097:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6132:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6143:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6128:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6128:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6152:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6107:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6107:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6097:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6180:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6195:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6199:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6225:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6260:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6271:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6256:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6280:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6235:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6225:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6308:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6323:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6327:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6353:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6388:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6399:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6384:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6408:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6363:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6363:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6353:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6436:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6451:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6465:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6455:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6481:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6516:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6527:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6512:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6512:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6536:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6491:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6491:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6481:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6564:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6579:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6610:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6621:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6606:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6606:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6593:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6593:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6583:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6673:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6675:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6675:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6675:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6645:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6642:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6642:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "6639:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6770:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6814:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6825:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6810:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6834:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6780:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6770:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5851:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5862:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5874:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5882:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5890:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5898:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5906:6:9",
														"type": ""
													}
												],
												"src": "5770:1089:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6945:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6991:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6993:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6993:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6993:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6966:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6962:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:32:9"
															},
															"nodeType": "YulIf",
															"src": "6955:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7084:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7099:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7103:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7128:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7163:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7174:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7159:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7159:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7183:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7138:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7128:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7211:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7226:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7230:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7256:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7288:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7299:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7284:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7284:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7266:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7266:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7256:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6907:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6918:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6930:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6938:6:9",
														"type": ""
													}
												],
												"src": "6865:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7470:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7443:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7439:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7439:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:32:9"
															},
															"nodeType": "YulIf",
															"src": "7432:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7561:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7576:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7590:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7580:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7605:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7640:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7651:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7636:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7636:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7660:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7615:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7605:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7688:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7703:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7707:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7733:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7768:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7779:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7764:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7764:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7788:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7743:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7733:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7384:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7395:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7407:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7415:6:9",
														"type": ""
													}
												],
												"src": "7339:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7952:761:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7998:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8000:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8000:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8000:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7973:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7982:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7994:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:32:9"
															},
															"nodeType": "YulIf",
															"src": "7962:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8091:302:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8106:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8137:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8148:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8133:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8133:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8120:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8120:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8110:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8198:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8200:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8200:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8200:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8170:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8167:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "8164:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8295:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8355:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8366:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8351:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8351:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8375:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8305:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8305:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8295:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8403:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8418:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8449:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8460:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8445:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8445:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8432:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8422:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8511:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8513:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8513:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8513:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8483:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8491:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "8477:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8608:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8668:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8679:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8664:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8664:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8688:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8618:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8618:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8608:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7914:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7925:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7937:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7945:6:9",
														"type": ""
													}
												],
												"src": "7819:894:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8784:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8830:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8832:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8832:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8805:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8814:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8797:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:32:9"
															},
															"nodeType": "YulIf",
															"src": "8794:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8923:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8938:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8952:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8942:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8967:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9001:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9012:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8997:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8997:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9021:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "8977:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8977:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8967:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8754:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8765:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8777:6:9",
														"type": ""
													}
												],
												"src": "8719:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9128:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9174:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9176:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9176:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9176:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9149:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9158:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9145:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9141:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:32:9"
															},
															"nodeType": "YulIf",
															"src": "9138:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9267:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9282:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9296:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9286:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9311:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9356:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9367:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9352:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9352:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9376:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9321:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9321:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9311:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9098:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9109:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9121:6:9",
														"type": ""
													}
												],
												"src": "9052:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9473:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9519:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9521:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9521:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9521:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9494:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9503:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:32:9"
															},
															"nodeType": "YulIf",
															"src": "9483:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9612:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9627:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9641:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9631:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9656:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9691:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9702:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9687:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9687:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9711:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9666:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9666:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9656:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9443:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9454:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9466:6:9",
														"type": ""
													}
												],
												"src": "9407:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9822:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9866:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9874:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9832:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9887:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9905:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9910:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9887:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9795:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9803:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9811:10:9",
														"type": ""
													}
												],
												"src": "9742:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10009:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10032:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10014:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10014:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9980:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9987:3:9",
														"type": ""
													}
												],
												"src": "9927:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10205:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10215:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10277:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10229:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10219:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10292:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10373:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10378:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10299:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10299:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10292:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10394:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10459:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10409:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10409:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10398:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10474:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10488:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10478:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10564:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10578:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10605:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10599:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10599:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10582:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10625:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10676:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10691:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10632:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10632:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10625:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10708:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10771:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10718:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10718:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10708:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10526:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10529:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10523:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10537:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10539:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10548:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10551:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10544:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10544:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10539:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10508:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10510:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10519:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10514:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10504:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10804:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10797:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10184:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10191:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10200:3:9",
														"type": ""
													}
												],
												"src": "10081:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10878:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10915:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10900:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10888:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10866:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10873:3:9",
														"type": ""
													}
												],
												"src": "10819:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11024:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11034:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11080:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11048:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11038:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11095:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11160:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11165:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11102:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11102:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11095:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11207:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11214:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11203:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11221:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11226:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11181:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11181:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11242:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11253:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11280:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11258:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11258:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11249:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11005:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11012:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11020:3:9",
														"type": ""
													}
												],
												"src": "10934:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11392:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11402:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11449:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11416:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11406:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11464:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11530:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11535:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11471:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11471:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11464:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11577:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11584:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11573:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11573:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11591:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11596:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11551:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11551:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11551:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11612:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11623:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11650:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11628:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11628:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11619:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11612:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11373:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11380:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11388:3:9",
														"type": ""
													}
												],
												"src": "11300:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11816:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11826:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11892:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11833:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11833:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11826:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11998:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "11909:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11909:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11909:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12011:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12022:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12027:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12011:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11804:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11812:3:9",
														"type": ""
													}
												],
												"src": "11670:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12188:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12198:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12264:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12269:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12205:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12198:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12370:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "12281:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12281:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12281:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12383:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12394:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12399:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12390:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12390:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12383:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12176:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12184:3:9",
														"type": ""
													}
												],
												"src": "12042:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12560:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12570:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12636:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12641:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12577:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12577:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12570:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12742:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "12653:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12653:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12653:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12755:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12766:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12771:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12762:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12762:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12755:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12548:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12556:3:9",
														"type": ""
													}
												],
												"src": "12414:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12932:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12942:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13008:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13013:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12949:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12949:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12942:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13114:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "13025:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13025:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13025:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13127:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13138:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13143:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13134:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13127:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12920:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12928:3:9",
														"type": ""
													}
												],
												"src": "12786:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13304:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13314:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13380:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13385:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13321:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13321:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13314:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13486:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "13397:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13499:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13510:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13515:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13506:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13499:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13292:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13300:3:9",
														"type": ""
													}
												],
												"src": "13158:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13676:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13686:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13752:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13757:2:9",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13693:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13686:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13858:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "13769:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13769:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13769:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13871:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13882:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13887:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13878:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13878:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13871:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13664:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13672:3:9",
														"type": ""
													}
												],
												"src": "13530:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14048:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14058:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14124:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14129:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14065:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14065:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14058:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14230:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "14141:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14141:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14141:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14243:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14254:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14259:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14250:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14250:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14243:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14036:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14044:3:9",
														"type": ""
													}
												],
												"src": "13902:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14420:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14430:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14496:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14501:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14437:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14437:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14430:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14602:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "14513:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14513:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14513:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14615:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14626:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14631:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14622:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14615:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14408:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14416:3:9",
														"type": ""
													}
												],
												"src": "14274:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14792:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14802:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14868:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14809:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14809:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14802:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14974:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "14885:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14885:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14885:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14987:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14998:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15003:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14994:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14994:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14987:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14780:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14788:3:9",
														"type": ""
													}
												],
												"src": "14646:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15164:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15174:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15240:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15245:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15181:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15181:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15174:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15346:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "15257:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15257:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15257:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15359:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15370:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15375:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15366:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15366:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15359:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15152:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15160:3:9",
														"type": ""
													}
												],
												"src": "15018:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15445:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15462:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15485:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15467:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15467:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15455:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15455:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15455:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15433:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15440:3:9",
														"type": ""
													}
												],
												"src": "15390:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15569:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15586:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15609:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15591:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15591:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15579:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15579:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15579:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15557:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15564:3:9",
														"type": ""
													}
												],
												"src": "15504:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15956:725:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15966:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15978:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15989:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15974:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15966:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16047:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16060:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16071:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16056:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16056:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16003:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16003:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16003:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16128:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16141:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16152:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16137:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16137:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16084:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16084:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16084:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16177:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16188:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16173:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16173:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16197:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16203:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16193:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16193:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16166:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16166:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16223:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16325:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16334:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16231:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16231:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16223:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16360:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16371:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16356:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16380:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16386:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16376:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16376:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16349:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16349:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16349:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16406:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16508:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16517:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16414:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16414:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16406:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16543:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16554:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16539:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16539:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16564:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16570:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16560:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16560:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16532:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16532:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16532:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16590:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16660:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16669:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16598:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16598:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16590:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15896:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15908:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15916:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15924:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15932:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15940:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15951:4:9",
														"type": ""
													}
												],
												"src": "15628:1053:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16915:523:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16925:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16937:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16948:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16933:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16933:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16925:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17006:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17019:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17030:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17015:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17015:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16962:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16962:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16962:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17087:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17100:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17111:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17096:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17096:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17043:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17043:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17043:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17169:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17182:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17193:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17178:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17178:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17125:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17125:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17125:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17251:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17264:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17275:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17260:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17260:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17207:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17207:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17207:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17300:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17311:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17296:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17296:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17321:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17327:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17317:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17317:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17289:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17289:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17289:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17347:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "17417:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17426:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17355:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17355:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17347:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16855:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16867:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16875:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16883:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16891:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16899:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16910:4:9",
														"type": ""
													}
												],
												"src": "16687:751:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17592:225:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17602:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17614:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17625:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17610:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17610:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17602:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17649:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17660:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17645:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17645:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17668:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17674:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17664:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17664:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17638:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17638:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17638:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17694:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17796:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17805:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17702:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17702:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17694:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17564:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17576:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17587:4:9",
														"type": ""
													}
												],
												"src": "17444:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18049:408:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18059:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18071:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18082:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18067:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18067:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18059:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18106:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18117:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18102:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18102:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18125:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18131:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18121:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18121:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18095:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18095:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18095:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18151:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18253:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18262:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18159:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18159:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18151:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18288:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18299:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18284:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18284:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18308:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18314:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18304:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18304:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18277:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18277:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18277:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18334:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18436:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18445:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18342:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18342:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18334:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18013:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18025:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18033:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18044:4:9",
														"type": ""
													}
												],
												"src": "17823:634:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18555:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18565:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18577:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18588:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18573:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18573:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18565:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18639:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18652:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18663:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18648:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18648:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18601:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18601:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18601:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18527:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18539:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18550:4:9",
														"type": ""
													}
												],
												"src": "18463:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18797:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18807:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18819:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18830:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18815:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18815:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18807:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18854:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18865:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18850:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18873:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18879:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18869:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18869:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18843:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18843:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18843:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18899:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18971:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18980:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18907:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18907:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18899:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18769:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18781:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18792:4:9",
														"type": ""
													}
												],
												"src": "18679:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19169:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19179:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19191:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19202:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19187:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19187:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19179:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19226:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19237:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19222:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19222:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19245:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19251:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19241:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19241:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19215:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19215:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19215:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19271:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19405:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19279:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19279:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19271:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19149:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19164:4:9",
														"type": ""
													}
												],
												"src": "18998:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19594:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19604:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19616:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19627:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19612:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19612:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19604:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19651:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19662:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19647:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19647:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19670:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19676:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19666:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19666:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19640:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19640:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19640:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19696:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19830:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19704:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19704:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19696:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19574:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19589:4:9",
														"type": ""
													}
												],
												"src": "19423:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20019:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20029:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20041:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20052:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20037:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20037:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20029:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20076:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20087:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20072:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20072:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20095:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20101:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20091:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20091:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20065:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20065:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20065:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20121:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20255:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20129:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20129:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20121:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19999:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20014:4:9",
														"type": ""
													}
												],
												"src": "19848:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20444:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20454:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20466:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20477:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20462:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20462:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20454:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20501:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20512:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20497:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20497:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20520:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20526:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20516:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20516:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20490:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20490:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20490:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20546:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20680:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20554:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20554:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20546:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20424:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20439:4:9",
														"type": ""
													}
												],
												"src": "20273:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20869:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20879:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20891:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20902:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20887:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20887:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20879:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20926:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20937:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20922:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20922:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20945:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20951:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20941:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20941:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20915:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20915:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20915:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20971:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21105:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20979:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20979:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20971:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20849:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20864:4:9",
														"type": ""
													}
												],
												"src": "20698:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21294:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21304:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21316:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21327:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21312:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21312:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21304:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21351:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21362:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21347:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21347:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21370:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21376:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21366:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21366:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21340:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21340:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21340:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21396:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21530:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21404:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21404:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21396:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21274:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21289:4:9",
														"type": ""
													}
												],
												"src": "21123:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21719:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21729:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21741:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21752:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21737:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21737:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21729:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21776:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21787:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21772:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21772:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21795:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21801:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21791:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21791:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21765:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21765:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21765:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21821:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21955:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21829:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21829:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21821:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21699:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21714:4:9",
														"type": ""
													}
												],
												"src": "21548:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22144:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22154:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22166:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22177:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22162:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22162:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22154:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22201:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22212:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22197:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22197:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22220:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22226:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22216:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22216:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22190:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22190:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22190:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22246:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22380:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22254:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22254:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22246:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22124:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22139:4:9",
														"type": ""
													}
												],
												"src": "21973:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22569:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22579:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22591:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22602:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22587:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22587:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22579:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22626:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22637:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22622:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22622:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22645:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22651:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22641:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22641:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22615:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22615:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22615:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22671:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22805:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22679:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22679:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22671:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22549:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22564:4:9",
														"type": ""
													}
												],
												"src": "22398:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22994:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23004:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23016:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23027:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23012:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23012:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23004:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23051:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23062:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23047:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23047:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23070:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23076:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23066:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23066:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23040:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23040:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23040:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23096:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23230:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23104:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23104:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23096:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22974:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22989:4:9",
														"type": ""
													}
												],
												"src": "22823:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23346:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23356:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23368:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23379:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23364:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23364:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23356:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23436:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23449:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23460:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23445:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23445:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23392:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23392:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23392:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23318:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23330:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23341:4:9",
														"type": ""
													}
												],
												"src": "23248:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23602:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23612:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23624:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23635:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23620:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23620:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23612:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23692:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23705:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23716:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23701:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23701:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23648:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23648:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23648:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23773:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23786:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23797:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23782:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23782:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23729:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23729:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23729:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23566:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23578:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23586:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23597:4:9",
														"type": ""
													}
												],
												"src": "23476:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23855:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23865:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "23875:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23875:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23865:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "23924:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23932:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "23904:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23904:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23904:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23839:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23848:6:9",
														"type": ""
													}
												],
												"src": "23814:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23989:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23999:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24015:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24009:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24009:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23999:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23982:6:9",
														"type": ""
													}
												],
												"src": "23949:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24112:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24217:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "24219:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24219:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24219:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24189:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24197:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24186:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24186:30:9"
															},
															"nodeType": "YulIf",
															"src": "24183:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24249:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24261:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24269:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "24257:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24257:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24249:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24311:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "24323:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24329:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24319:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24319:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24311:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24096:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "24107:4:9",
														"type": ""
													}
												],
												"src": "24030:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24429:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24534:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "24536:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24536:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24536:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24506:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24514:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24503:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24503:30:9"
															},
															"nodeType": "YulIf",
															"src": "24500:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24566:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24578:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24586:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "24574:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24574:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24566:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24628:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "24640:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24646:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24636:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24636:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24628:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24413:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "24424:4:9",
														"type": ""
													}
												],
												"src": "24347:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24730:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24835:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "24837:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24837:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24837:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24807:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24815:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24804:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24804:30:9"
															},
															"nodeType": "YulIf",
															"src": "24801:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24867:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24897:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "24875:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24875:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24867:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24941:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "24953:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24959:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24949:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24949:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "24941:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24714:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "24725:4:9",
														"type": ""
													}
												],
												"src": "24664:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25049:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25059:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "25067:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "25059:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25080:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "25092:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25097:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25088:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25088:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "25080:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "25036:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "25044:4:9",
														"type": ""
													}
												],
												"src": "24977:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25189:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25200:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25216:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25210:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25210:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25200:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25172:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25182:6:9",
														"type": ""
													}
												],
												"src": "25115:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25293:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25304:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25320:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25314:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25314:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25304:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25276:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25286:6:9",
														"type": ""
													}
												],
												"src": "25235:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25398:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25409:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25425:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25419:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25419:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25409:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25381:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25391:6:9",
														"type": ""
													}
												],
												"src": "25339:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25519:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25529:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "25541:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25546:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25537:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25537:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "25529:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "25506:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "25514:4:9",
														"type": ""
													}
												],
												"src": "25444:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25674:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25691:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25696:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25684:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25684:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25684:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25712:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25731:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25736:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25727:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25712:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25646:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25651:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25662:11:9",
														"type": ""
													}
												],
												"src": "25563:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25848:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25865:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25870:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25858:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25858:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25858:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25886:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25905:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25910:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25901:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25901:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25886:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25820:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25825:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25836:11:9",
														"type": ""
													}
												],
												"src": "25753:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26023:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26040:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26045:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26033:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26033:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26033:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26061:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26080:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26085:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26076:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26076:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26061:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25995:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26000:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26011:11:9",
														"type": ""
													}
												],
												"src": "25927:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26146:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26156:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26179:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26161:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26161:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26156:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26190:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26213:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26195:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26195:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26190:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26353:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26355:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26355:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26355:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26274:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26281:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "26349:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26277:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26277:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26271:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26271:81:9"
															},
															"nodeType": "YulIf",
															"src": "26268:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26385:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26396:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26399:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26392:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26392:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "26385:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26133:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26136:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "26142:3:9",
														"type": ""
													}
												],
												"src": "26102:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26458:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26468:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26497:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "26479:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26479:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26468:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26440:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26450:7:9",
														"type": ""
													}
												],
												"src": "26413:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26557:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26567:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26592:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "26585:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26585:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26578:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26578:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26567:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26539:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26549:7:9",
														"type": ""
													}
												],
												"src": "26515:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26655:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26665:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26680:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26687:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26676:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26676:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26665:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26637:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26647:7:9",
														"type": ""
													}
												],
												"src": "26611:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26811:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26821:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26836:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26843:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26832:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26832:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26821:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26793:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26803:7:9",
														"type": ""
													}
												],
												"src": "26766:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26943:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26953:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26964:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "26953:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26925:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "26935:7:9",
														"type": ""
													}
												],
												"src": "26898:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27032:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "27055:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "27060:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27065:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "27042:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27042:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27042:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "27113:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27118:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27109:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27109:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27127:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27102:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27102:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27102:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "27014:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "27019:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27024:6:9",
														"type": ""
													}
												],
												"src": "26981:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27190:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27200:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "27209:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "27204:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27269:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27294:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "27299:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27290:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27290:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "27313:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "27318:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27309:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27309:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27303:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27303:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27283:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27283:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27283:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27230:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27233:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27227:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27227:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "27241:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27243:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "27252:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27255:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27248:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27248:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "27243:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "27223:3:9",
																"statements": []
															},
															"src": "27219:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27366:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27416:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "27421:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27412:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27412:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27430:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27405:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27405:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27405:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27347:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27350:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27344:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27344:13:9"
															},
															"nodeType": "YulIf",
															"src": "27341:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "27172:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "27177:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27182:6:9",
														"type": ""
													}
												],
												"src": "27141:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27505:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27515:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "27529:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27535:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "27525:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27525:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27515:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27546:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "27576:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27582:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27572:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27572:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "27550:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27623:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27637:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "27651:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27659:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "27647:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27647:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27637:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "27603:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "27596:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27596:26:9"
															},
															"nodeType": "YulIf",
															"src": "27593:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27726:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "27740:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27740:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27740:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "27690:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27713:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27721:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "27710:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27710:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "27687:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27687:38:9"
															},
															"nodeType": "YulIf",
															"src": "27684:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "27489:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27498:6:9",
														"type": ""
													}
												],
												"src": "27454:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27823:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27833:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "27855:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "27885:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27863:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27863:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27851:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27851:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "27837:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28002:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "28004:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28004:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28004:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "27945:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27957:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "27942:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27942:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "27981:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27993:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "27978:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27978:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "27939:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27939:62:9"
															},
															"nodeType": "YulIf",
															"src": "27936:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28040:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "28044:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28033:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28033:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28033:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27809:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "27817:4:9",
														"type": ""
													}
												],
												"src": "27780:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28110:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28120:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28147:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28129:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28129:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28120:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28243:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28245:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28245:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28245:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28168:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28175:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "28165:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28165:77:9"
															},
															"nodeType": "YulIf",
															"src": "28162:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28274:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28285:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28292:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28281:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28281:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "28274:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28096:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "28106:3:9",
														"type": ""
													}
												],
												"src": "28067:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28334:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28351:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28354:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28344:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28344:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28344:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28448:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28451:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28441:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28441:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28441:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28472:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28475:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28465:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28465:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28465:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "28306:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28520:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28537:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28540:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28530:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28530:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28530:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28634:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28637:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28627:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28627:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28627:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28658:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28661:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28651:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28651:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28651:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "28492:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28706:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28723:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28726:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28716:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28716:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28716:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28820:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28823:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28813:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28813:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28813:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28844:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28847:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28837:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28837:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28837:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "28678:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28892:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28909:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28912:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28902:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28902:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28902:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29006:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29009:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28999:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28999:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28999:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29030:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29033:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29023:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29023:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29023:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "28864:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29089:144:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29126:101:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29155:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29158:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29161:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "29140:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29140:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29140:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "29176:41:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29214:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "29208:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29208:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "29183:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29183:34:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "29176:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "29105:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29105:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29123:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29102:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29102:23:9"
															},
															"nodeType": "YulIf",
															"src": "29099:128:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "29085:3:9",
														"type": ""
													}
												],
												"src": "29050:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29328:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29345:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29348:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29338:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29338:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29338:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "29239:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29451:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29468:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29471:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29461:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29461:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29461:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "29362:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29574:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29591:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29594:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29584:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29584:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29584:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "29485:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29697:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29714:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29717:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29707:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29707:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29707:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "29608:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29820:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29837:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29840:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "29830:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29830:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29830:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "29731:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29902:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29912:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29930:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29937:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29926:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29926:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29946:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "29942:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29942:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29922:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29922:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "29912:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29885:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "29895:6:9",
														"type": ""
													}
												],
												"src": "29854:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30015:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30025:36:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30050:3:9",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30055:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "30046:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30046:15:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "30025:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29996:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "30006:8:9",
														"type": ""
													}
												],
												"src": "29962:106:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30180:133:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30202:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30210:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30198:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30198:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30214:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30191:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30191:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30191:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30270:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30278:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30266:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30266:15:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30283:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30259:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30259:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30259:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30172:6:9",
														"type": ""
													}
												],
												"src": "30074:239:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30425:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30447:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30455:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30443:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30443:14:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30459:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30436:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30436:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30436:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30515:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30523:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30511:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30511:15:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30528:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30504:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30504:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30504:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30417:6:9",
														"type": ""
													}
												],
												"src": "30319:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30658:124:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30680:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30688:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30676:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30676:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30692:34:9",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30669:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30669:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30669:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30748:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30756:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30744:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30744:15:9"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30761:13:9",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30737:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30737:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30737:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30650:6:9",
														"type": ""
													}
												],
												"src": "30552:230:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30894:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30916:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30924:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30912:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30912:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30928:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30905:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30905:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30905:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30984:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30992:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30980:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30980:15:9"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30997:11:9",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30973:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30973:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30973:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30886:6:9",
														"type": ""
													}
												],
												"src": "30788:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31128:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31150:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31158:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31146:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31146:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31162:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31139:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31139:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31139:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31218:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31226:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31214:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31214:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31231:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31207:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31207:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31120:6:9",
														"type": ""
													}
												],
												"src": "31022:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31358:131:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31380:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31388:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31376:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31376:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31392:34:9",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31369:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31369:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31369:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31448:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31456:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31444:15:9"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31461:20:9",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31437:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31437:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31437:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31350:6:9",
														"type": ""
													}
												],
												"src": "31252:237:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31601:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31623:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31631:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31619:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31619:14:9"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31635:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31612:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31612:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31612:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31691:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31699:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31687:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31687:15:9"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31704:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31680:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31680:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31680:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31593:6:9",
														"type": ""
													}
												],
												"src": "31495:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31836:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31858:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31866:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31854:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31854:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31870:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31847:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31847:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31847:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31926:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31934:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31922:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31922:15:9"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31939:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31915:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31915:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31915:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31828:6:9",
														"type": ""
													}
												],
												"src": "31730:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32070:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32092:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32100:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32088:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32088:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32104:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32081:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32081:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32081:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32160:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32168:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32156:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32156:15:9"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32173:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32149:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32149:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32149:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32062:6:9",
														"type": ""
													}
												],
												"src": "31964:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32304:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32326:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32334:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32322:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32322:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32338:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32315:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32315:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32315:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32394:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32402:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32390:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32390:15:9"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32407:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32383:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32383:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32383:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32296:6:9",
														"type": ""
													}
												],
												"src": "32198:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32474:668:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32514:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "32516:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "32490:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32490:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32508:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "32487:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32487:26:9"
															},
															"nodeType": "YulIf",
															"src": "32484:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32533:32:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "32545:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32545:20:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "32537:4:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "32589:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32595:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "32602:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32602:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32620:1:9",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32598:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32598:24:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "32574:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32574:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32574:49:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32633:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "32653:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "32647:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32647:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "32637:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32784:29:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "32798:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "32689:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32697:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "32686:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32686:30:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "32737:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "32745:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "32733:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32733:17:9"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "32752:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32752:16:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "32730:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32730:39:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "32670:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32670:113:9"
															},
															"nodeType": "YulIf",
															"src": "32667:146:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32823:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "32838:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "32844:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32834:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32834:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "32827:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32860:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "32880:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "32874:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32874:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "32864:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32927:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "32929:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32899:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32907:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "32896:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32896:30:9"
															},
															"nodeType": "YulIf",
															"src": "32893:43:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32946:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "32965:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32970:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32961:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32961:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32977:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32957:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32957:27:9"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "32950:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33041:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "33043:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "32999:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "33008:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "33018:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "33018:16:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "33036:1:9",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "33014:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33014:24:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33004:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33004:35:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "32996:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32996:44:9"
															},
															"nodeType": "YulIf",
															"src": "32993:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "33080:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "33090:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "33102:4:9",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "33108:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "33098:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33098:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33086:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33086:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "33060:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33060:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33060:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33126:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "33133:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "33126:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "32470:3:9",
														"type": ""
													}
												],
												"src": "32431:711:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33191:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33248:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33257:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33260:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "33250:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33250:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33250:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "33214:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "33239:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "33221:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33221:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "33211:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33211:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33204:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33204:43:9"
															},
															"nodeType": "YulIf",
															"src": "33201:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33184:5:9",
														"type": ""
													}
												],
												"src": "33148:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33316:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33370:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33379:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33382:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "33372:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33372:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33372:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "33339:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "33361:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "33346:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33346:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "33336:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33336:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33329:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33329:40:9"
															},
															"nodeType": "YulIf",
															"src": "33326:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33309:5:9",
														"type": ""
													}
												],
												"src": "33276:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33440:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33496:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33505:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33508:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "33498:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33498:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33498:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "33463:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "33487:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "33470:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33470:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "33460:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33460:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33453:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33453:42:9"
															},
															"nodeType": "YulIf",
															"src": "33450:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33433:5:9",
														"type": ""
													}
												],
												"src": "33398:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33567:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33624:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33633:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33636:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "33626:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33626:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33626:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "33590:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "33615:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "33597:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "33597:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "33587:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33587:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33580:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33580:43:9"
															},
															"nodeType": "YulIf",
															"src": "33577:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33560:5:9",
														"type": ""
													}
												],
												"src": "33524:122:9"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906116f7565b6101d0565b6040516100b39190611d50565b60405180910390f35b6100d660048036038101906100d191906117af565b610299565b6040516100e39190611bd3565b60405180910390f35b61010660048036038101906101019190611809565b61037b565b6040516101139190611bee565b60405180910390f35b61013660048036038101906101319190611551565b61040f565b005b610152600480360381019061014d9190611737565b6104b0565b60405161015f9190611b7a565b60405180910390f35b610182600480360381019061017d91906116b7565b6105c9565b005b61019e60048036038101906101999190611511565b6105df565b6040516101ab9190611bd3565b60405180910390f35b6101ce60048036038101906101c99190611620565b610673565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c50565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610374575061037382610714565b5b9050919050565b60606002805461038a90611fbf565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611fbf565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b61041761077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c8561045761077e565b6105df565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611cb0565b60405180910390fd5b6104a98585858585610786565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611d10565b60405180910390fd5b6000835167ffffffffffffffff811115610513576105126120f8565b5b6040519080825280602002602001820160405280156105415781602001602082028036833780820191505090505b50905060005b84518110156105be5761058e858281518110610566576105656120c9565b5b6020026020010151858381518110610581576105806120c9565b5b60200260200101516101d0565b8282815181106105a1576105a06120c9565b5b602002602001018181525050806105b790612022565b9050610547565b508091505092915050565b6105db6105d461077e565b8383610a9a565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067b61077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c157506106c0856106bb61077e565b6105df565b5b610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790611c70565b60405180910390fd5b61070d8585858585610c07565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611d30565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083190611c90565b60405180910390fd5b600061084461077e565b9050610854818787878787610e89565b60005b8451811015610a05576000858281518110610875576108746120c9565b5b602002602001015190506000858381518110610894576108936120c9565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90611cd0565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ea9190611eb3565b92505081905550505050806109fe90612022565b9050610857565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7c929190611b9c565b60405180910390a4610a92818787878787610e91565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0090611cf0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bfa9190611bd3565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6e90611c90565b60405180910390fd5b6000610c8161077e565b9050610ca1818787610c9288611078565b610c9b88611078565b87610e89565b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611cd0565b60405180910390fd5b83810360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ded9190611eb3565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610e6a929190611d6b565b60405180910390a4610e808288888888886110f2565b50505050505050565b505050505050565b610eb08473ffffffffffffffffffffffffffffffffffffffff166112d9565b15611070578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610ef6959493929190611ab8565b602060405180830381600087803b158015610f1057600080fd5b505af1925050508015610f4157506040513d601f19601f82011682018060405250810190610f3e91906117dc565b60015b610fe757610f4d612127565b806308c379a01415610faa5750610f62612496565b80610f6d5750610fac565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa19190611bee565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fde90611c10565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461106e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106590611c30565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff811115611097576110966120f8565b5b6040519080825280602002602001820160405280156110c55781602001602082028036833780820191505090505b50905082816000815181106110dd576110dc6120c9565b5b60200260200101818152505080915050919050565b6111118473ffffffffffffffffffffffffffffffffffffffff166112d9565b156112d1578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611157959493929190611b20565b602060405180830381600087803b15801561117157600080fd5b505af19250505080156111a257506040513d601f19601f8201168201806040525081019061119f91906117dc565b60015b611248576111ae612127565b806308c379a0141561120b57506111c3612496565b806111ce575061120d565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112029190611bee565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123f90611c10565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c690611c30565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061130f61130a84611db9565b611d94565b905080838252602082019050828560208602820111156113325761133161214e565b5b60005b858110156113625781611348888261141e565b845260208401935060208301925050600181019050611335565b5050509392505050565b600061137f61137a84611de5565b611d94565b905080838252602082019050828560208602820111156113a2576113a161214e565b5b60005b858110156113d257816113b888826114fc565b8452602084019350602083019250506001810190506113a5565b5050509392505050565b60006113ef6113ea84611e11565b611d94565b90508281526020810184848401111561140b5761140a612153565b5b611416848285611f7d565b509392505050565b60008135905061142d8161252c565b92915050565b600082601f83011261144857611447612149565b5b81356114588482602086016112fc565b91505092915050565b600082601f83011261147657611475612149565b5b813561148684826020860161136c565b91505092915050565b60008135905061149e81612543565b92915050565b6000813590506114b38161255a565b92915050565b6000815190506114c88161255a565b92915050565b600082601f8301126114e3576114e2612149565b5b81356114f38482602086016113dc565b91505092915050565b60008135905061150b81612571565b92915050565b600080604083850312156115285761152761215d565b5b60006115368582860161141e565b92505060206115478582860161141e565b9150509250929050565b600080600080600060a0868803121561156d5761156c61215d565b5b600061157b8882890161141e565b955050602061158c8882890161141e565b945050604086013567ffffffffffffffff8111156115ad576115ac612158565b5b6115b988828901611461565b935050606086013567ffffffffffffffff8111156115da576115d9612158565b5b6115e688828901611461565b925050608086013567ffffffffffffffff81111561160757611606612158565b5b611613888289016114ce565b9150509295509295909350565b600080600080600060a0868803121561163c5761163b61215d565b5b600061164a8882890161141e565b955050602061165b8882890161141e565b945050604061166c888289016114fc565b935050606061167d888289016114fc565b925050608086013567ffffffffffffffff81111561169e5761169d612158565b5b6116aa888289016114ce565b9150509295509295909350565b600080604083850312156116ce576116cd61215d565b5b60006116dc8582860161141e565b92505060206116ed8582860161148f565b9150509250929050565b6000806040838503121561170e5761170d61215d565b5b600061171c8582860161141e565b925050602061172d858286016114fc565b9150509250929050565b6000806040838503121561174e5761174d61215d565b5b600083013567ffffffffffffffff81111561176c5761176b612158565b5b61177885828601611433565b925050602083013567ffffffffffffffff81111561179957611798612158565b5b6117a585828601611461565b9150509250929050565b6000602082840312156117c5576117c461215d565b5b60006117d3848285016114a4565b91505092915050565b6000602082840312156117f2576117f161215d565b5b6000611800848285016114b9565b91505092915050565b60006020828403121561181f5761181e61215d565b5b600061182d848285016114fc565b91505092915050565b60006118428383611a9a565b60208301905092915050565b61185781611f09565b82525050565b600061186882611e52565b6118728185611e80565b935061187d83611e42565b8060005b838110156118ae5781516118958882611836565b97506118a083611e73565b925050600181019050611881565b5085935050505092915050565b6118c481611f1b565b82525050565b60006118d582611e5d565b6118df8185611e91565b93506118ef818560208601611f8c565b6118f881612162565b840191505092915050565b600061190e82611e68565b6119188185611ea2565b9350611928818560208601611f8c565b61193181612162565b840191505092915050565b6000611949603483611ea2565b915061195482612180565b604082019050919050565b600061196c602883611ea2565b9150611977826121cf565b604082019050919050565b600061198f602b83611ea2565b915061199a8261221e565b604082019050919050565b60006119b2602983611ea2565b91506119bd8261226d565b604082019050919050565b60006119d5602583611ea2565b91506119e0826122bc565b604082019050919050565b60006119f8603283611ea2565b9150611a038261230b565b604082019050919050565b6000611a1b602a83611ea2565b9150611a268261235a565b604082019050919050565b6000611a3e602983611ea2565b9150611a49826123a9565b604082019050919050565b6000611a61602983611ea2565b9150611a6c826123f8565b604082019050919050565b6000611a84602883611ea2565b9150611a8f82612447565b604082019050919050565b611aa381611f73565b82525050565b611ab281611f73565b82525050565b600060a082019050611acd600083018861184e565b611ada602083018761184e565b8181036040830152611aec818661185d565b90508181036060830152611b00818561185d565b90508181036080830152611b1481846118ca565b90509695505050505050565b600060a082019050611b35600083018861184e565b611b42602083018761184e565b611b4f6040830186611aa9565b611b5c6060830185611aa9565b8181036080830152611b6e81846118ca565b90509695505050505050565b60006020820190508181036000830152611b94818461185d565b905092915050565b60006040820190508181036000830152611bb6818561185d565b90508181036020830152611bca818461185d565b90509392505050565b6000602082019050611be860008301846118bb565b92915050565b60006020820190508181036000830152611c088184611903565b905092915050565b60006020820190508181036000830152611c298161193c565b9050919050565b60006020820190508181036000830152611c498161195f565b9050919050565b60006020820190508181036000830152611c6981611982565b9050919050565b60006020820190508181036000830152611c89816119a5565b9050919050565b60006020820190508181036000830152611ca9816119c8565b9050919050565b60006020820190508181036000830152611cc9816119eb565b9050919050565b60006020820190508181036000830152611ce981611a0e565b9050919050565b60006020820190508181036000830152611d0981611a31565b9050919050565b60006020820190508181036000830152611d2981611a54565b9050919050565b60006020820190508181036000830152611d4981611a77565b9050919050565b6000602082019050611d656000830184611aa9565b92915050565b6000604082019050611d806000830185611aa9565b611d8d6020830184611aa9565b9392505050565b6000611d9e611daf565b9050611daa8282611ff1565b919050565b6000604051905090565b600067ffffffffffffffff821115611dd457611dd36120f8565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e0057611dff6120f8565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e2c57611e2b6120f8565b5b611e3582612162565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611ebe82611f73565b9150611ec983611f73565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611efe57611efd61206b565b5b828201905092915050565b6000611f1482611f53565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611faa578082015181840152602081019050611f8f565b83811115611fb9576000848401525b50505050565b60006002820490506001821680611fd757607f821691505b60208210811415611feb57611fea61209a565b5b50919050565b611ffa82612162565b810181811067ffffffffffffffff82111715612019576120186120f8565b5b80604052505050565b600061202d82611f73565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156120605761205f61206b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156121465760046000803e612143600051612173565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b600060443d10156124a657612529565b6124ae611daf565b60043d036004823e80513d602482011167ffffffffffffffff821117156124d6575050612529565b808201805167ffffffffffffffff8111156124f45750505050612529565b80602083010160043d038501811115612511575050505050612529565b61252082602001850186611ff1565b82955050505050505b90565b61253581611f09565b811461254057600080fd5b50565b61254c81611f1b565b811461255757600080fd5b50565b61256381611f27565b811461256e57600080fd5b50565b61257a81611f73565b811461258557600080fd5b5056fea26469706673582212205b655ed291a5a788a07cabeb4a0dc42ddbeb560917ab825e458abab31fff56ce64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x714 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1FBF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x541 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B7 SWAP1 PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP PUSH2 0x547 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D4 PUSH2 0x77E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C1 JUMPI POP PUSH2 0x6C0 DUP6 PUSH2 0x6BB PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC07 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0x854 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP3 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA92 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xE91 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB00 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6E SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC81 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0xCA1 DUP2 DUP8 DUP8 PUSH2 0xC92 DUP9 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0xC9B DUP9 PUSH2 0x1078 JUMP JUMPDEST DUP8 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2F SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE6A SWAP3 SWAP2 SWAP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE80 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x10F2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEB0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12D9 JUMP JUMPDEST ISZERO PUSH2 0x1070 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF41 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFE7 JUMPI PUSH2 0xF4D PUSH2 0x2127 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFAA JUMPI POP PUSH2 0xF62 PUSH2 0x2496 JUMP JUMPDEST DUP1 PUSH2 0xF6D JUMPI POP PUSH2 0xFAC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA1 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDE SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x106E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1065 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1097 JUMPI PUSH2 0x1096 PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10DD JUMPI PUSH2 0x10DC PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1111 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12D9 JUMP JUMPDEST ISZERO PUSH2 0x12D1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1157 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11A2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119F SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1248 JUMPI PUSH2 0x11AE PUSH2 0x2127 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x120B JUMPI POP PUSH2 0x11C3 PUSH2 0x2496 JUMP JUMPDEST DUP1 PUSH2 0x11CE JUMPI POP PUSH2 0x120D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1202 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123F SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C6 SWAP1 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130F PUSH2 0x130A DUP5 PUSH2 0x1DB9 JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1332 JUMPI PUSH2 0x1331 PUSH2 0x214E JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1362 JUMPI DUP2 PUSH2 0x1348 DUP9 DUP3 PUSH2 0x141E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1335 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137F PUSH2 0x137A DUP5 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x13A2 JUMPI PUSH2 0x13A1 PUSH2 0x214E JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP2 PUSH2 0x13B8 DUP9 DUP3 PUSH2 0x14FC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x13A5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EF PUSH2 0x13EA DUP5 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x140B JUMPI PUSH2 0x140A PUSH2 0x2153 JUMP JUMPDEST JUMPDEST PUSH2 0x1416 DUP5 DUP3 DUP6 PUSH2 0x1F7D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142D DUP2 PUSH2 0x252C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1448 JUMPI PUSH2 0x1447 PUSH2 0x2149 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1458 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1476 JUMPI PUSH2 0x1475 PUSH2 0x2149 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1486 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x136C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x149E DUP2 PUSH2 0x2543 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B3 DUP2 PUSH2 0x255A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14C8 DUP2 PUSH2 0x255A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14E3 JUMPI PUSH2 0x14E2 PUSH2 0x2149 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x13DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150B DUP2 PUSH2 0x2571 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1536 DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1547 DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x156D JUMPI PUSH2 0x156C PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x157B DUP9 DUP3 DUP10 ADD PUSH2 0x141E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x158C DUP9 DUP3 DUP10 ADD PUSH2 0x141E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AD JUMPI PUSH2 0x15AC PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x15B9 DUP9 DUP3 DUP10 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DA JUMPI PUSH2 0x15D9 PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x15E6 DUP9 DUP3 DUP10 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1607 JUMPI PUSH2 0x1606 PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x1613 DUP9 DUP3 DUP10 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x164A DUP9 DUP3 DUP10 ADD PUSH2 0x141E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x165B DUP9 DUP3 DUP10 ADD PUSH2 0x141E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x166C DUP9 DUP3 DUP10 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x167D DUP9 DUP3 DUP10 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x169E JUMPI PUSH2 0x169D PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x16AA DUP9 DUP3 DUP10 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CE JUMPI PUSH2 0x16CD PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16DC DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16ED DUP6 DUP3 DUP7 ADD PUSH2 0x148F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170E JUMPI PUSH2 0x170D PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x171C DUP6 DUP3 DUP7 ADD PUSH2 0x141E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172D DUP6 DUP3 DUP7 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x174E JUMPI PUSH2 0x174D PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176C JUMPI PUSH2 0x176B PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x1778 DUP6 DUP3 DUP7 ADD PUSH2 0x1433 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1799 JUMPI PUSH2 0x1798 PUSH2 0x2158 JUMP JUMPDEST JUMPDEST PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x14A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F2 JUMPI PUSH2 0x17F1 PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1800 DUP5 DUP3 DUP6 ADD PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181F JUMPI PUSH2 0x181E PUSH2 0x215D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182D DUP5 DUP3 DUP6 ADD PUSH2 0x14FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1842 DUP4 DUP4 PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1857 DUP2 PUSH2 0x1F09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP3 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x1872 DUP2 DUP6 PUSH2 0x1E80 JUMP JUMPDEST SWAP4 POP PUSH2 0x187D DUP4 PUSH2 0x1E42 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18AE JUMPI DUP2 MLOAD PUSH2 0x1895 DUP9 DUP3 PUSH2 0x1836 JUMP JUMPDEST SWAP8 POP PUSH2 0x18A0 DUP4 PUSH2 0x1E73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1881 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C4 DUP2 PUSH2 0x1F1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D5 DUP3 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x18DF DUP2 DUP6 PUSH2 0x1E91 JUMP JUMPDEST SWAP4 POP PUSH2 0x18EF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x18F8 DUP2 PUSH2 0x2162 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190E DUP3 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x1918 DUP2 DUP6 PUSH2 0x1EA2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1928 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x1931 DUP2 PUSH2 0x2162 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1949 PUSH1 0x34 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1954 DUP3 PUSH2 0x2180 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196C PUSH1 0x28 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1977 DUP3 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198F PUSH1 0x2B DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x199A DUP3 PUSH2 0x221E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B2 PUSH1 0x29 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BD DUP3 PUSH2 0x226D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D5 PUSH1 0x25 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E0 DUP3 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F8 PUSH1 0x32 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A03 DUP3 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1B PUSH1 0x2A DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A26 DUP3 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3E PUSH1 0x29 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A49 DUP3 PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A61 PUSH1 0x29 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6C DUP3 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A84 PUSH1 0x28 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8F DUP3 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA3 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1AB2 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1ACD PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1ADA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x184E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1AEC DUP2 DUP7 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B00 DUP2 DUP6 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B14 DUP2 DUP5 PUSH2 0x18CA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B35 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1B42 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1B4F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x1B5C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1AA9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1B6E DUP2 DUP5 PUSH2 0x18CA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B94 DUP2 DUP5 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 DUP6 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1BCA DUP2 DUP5 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C08 DUP2 DUP5 PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C29 DUP2 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C49 DUP2 PUSH2 0x195F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 PUSH2 0x1982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C89 DUP2 PUSH2 0x19A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CA9 DUP2 PUSH2 0x19C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC9 DUP2 PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE9 DUP2 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D09 DUP2 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D29 DUP2 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D49 DUP2 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D80 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x1D8D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AA9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E PUSH2 0x1DAF JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAA DUP3 DUP3 PUSH2 0x1FF1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD3 PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E00 JUMPI PUSH2 0x1DFF PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST PUSH2 0x1E35 DUP3 PUSH2 0x2162 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBE DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC9 DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EFE JUMPI PUSH2 0x1EFD PUSH2 0x206B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F14 DUP3 PUSH2 0x1F53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FAA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F8F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1FB9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FD7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1FEB JUMPI PUSH2 0x1FEA PUSH2 0x209A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FFA DUP3 PUSH2 0x2162 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2019 JUMPI PUSH2 0x2018 PUSH2 0x20F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202D DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2060 JUMPI PUSH2 0x205F PUSH2 0x206B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2146 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2143 PUSH1 0x0 MLOAD PUSH2 0x2173 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x24A6 JUMPI PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x24AE PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x24D6 JUMPI POP POP PUSH2 0x2529 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F4 JUMPI POP POP POP POP PUSH2 0x2529 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2511 JUMPI POP POP POP POP POP PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x2520 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x1FF1 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2535 DUP2 PUSH2 0x1F09 JUMP JUMPDEST DUP2 EQ PUSH2 0x2540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x254C DUP2 PUSH2 0x1F1B JUMP JUMPDEST DUP2 EQ PUSH2 0x2557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2563 DUP2 PUSH2 0x1F27 JUMP JUMPDEST DUP2 EQ PUSH2 0x256E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x257A DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP2 EQ PUSH2 0x2585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH6 0x5ED291A5A788 LOG0 PUSH29 0xABEB4A0DC42DDBEB560917AB825E458ABAB31FFF56CE64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "589:14992:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2476:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1255:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1959:375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4351:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2861:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3437:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3657:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3890:389;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2476:228;2562:7;2608:1;2589:21;;:7;:21;;;;2581:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2675:9;:13;2685:2;2675:13;;;;;;;;;;;:22;2689:7;2675:22;;;;;;;;;;;;;;;;2668:29;;2476:228;;;;:::o;1255:305::-;1357:4;1407:26;1392:41;;;:11;:41;;;;:109;;;;1464:37;1449:52;;;:11;:52;;;;1392:109;:161;;;;1517:36;1541:11;1517:23;:36::i;:::-;1392:161;1373:180;;1255:305;;;:::o;1959:375::-;2028:13;2060:4;2053:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1959:375;;;:::o;4351:430::-;4584:12;:10;:12::i;:::-;4576:20;;:4;:20;;;:60;;;;4600:36;4617:4;4623:12;:10;:12::i;:::-;4600:16;:36::i;:::-;4576:60;4555:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;4722:52;4745:4;4751:2;4755:3;4760:7;4769:4;4722:22;:52::i;:::-;4351:430;;;;;:::o;2861:508::-;3012:16;3071:3;:10;3052:8;:15;:29;3044:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3138:30;3185:8;:15;3171:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3138:63;;3217:9;3212:120;3236:8;:15;3232:1;:19;3212:120;;;3291:30;3301:8;3310:1;3301:11;;;;;;;;:::i;:::-;;;;;;;;3314:3;3318:1;3314:6;;;;;;;;:::i;:::-;;;;;;;;3291:9;:30::i;:::-;3272:13;3286:1;3272:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;3253:3;;;;:::i;:::-;;;3212:120;;;;3349:13;3342:20;;;2861:508;;;;:::o;3437:153::-;3531:52;3550:12;:10;:12::i;:::-;3564:8;3574;3531:18;:52::i;:::-;3437:153;;:::o;3657:166::-;3756:4;3779:18;:27;3798:7;3779:27;;;;;;;;;;;;;;;:37;3807:8;3779:37;;;;;;;;;;;;;;;;;;;;;;;;;3772:44;;3657:166;;;;:::o;3890:389::-;4098:12;:10;:12::i;:::-;4090:20;;:4;:20;;;:60;;;;4114:36;4131:4;4137:12;:10;:12::i;:::-;4114:16;:36::i;:::-;4090:60;4069:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;4227:45;4245:4;4251:2;4255;4259:6;4267:4;4227:17;:45::i;:::-;3890:389;;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;6374:1045:0:-;6594:7;:14;6580:3;:10;:28;6572:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6685:1;6671:16;;:2;:16;;;;6663:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6740:16;6759:12;:10;:12::i;:::-;6740:31;;6782:60;6803:8;6813:4;6819:2;6823:3;6828:7;6837:4;6782:20;:60::i;:::-;6858:9;6853:411;6877:3;:10;6873:1;:14;6853:411;;;6908:10;6921:3;6925:1;6921:6;;;;;;;;:::i;:::-;;;;;;;;6908:19;;6941:14;6958:7;6966:1;6958:10;;;;;;;;:::i;:::-;;;;;;;;6941:27;;6983:19;7005:9;:13;7015:2;7005:13;;;;;;;;;;;:19;7019:4;7005:19;;;;;;;;;;;;;;;;6983:41;;7061:6;7046:11;:21;;7038:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7192:6;7178:11;:20;7156:9;:13;7166:2;7156:13;;;;;;;;;;;:19;7170:4;7156:19;;;;;;;;;;;;;;;:42;;;;7247:6;7226:9;:13;7236:2;7226:13;;;;;;;;;;;:17;7240:2;7226:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6894:370;;;6889:3;;;;:::i;:::-;;;6853:411;;;;7309:2;7279:47;;7303:4;7279:47;;7293:8;7279:47;;;7313:3;7318:7;7279:47;;;;;;;:::i;:::-;;;;;;;;7337:75;7373:8;7383:4;7389:2;7393:3;7398:7;7407:4;7337:35;:75::i;:::-;6562:857;6374:1045;;;;;:::o;12380:323::-;12530:8;12521:17;;:5;:17;;;;12513:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;12632:8;12594:18;:25;12613:5;12594:25;;;;;;;;;;;;;;;:35;12620:8;12594:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;12677:8;12655:41;;12670:5;12655:41;;;12687:8;12655:41;;;;;;:::i;:::-;;;;;;;;12380:323;;;:::o;5231:797::-;5426:1;5412:16;;:2;:16;;;;5404:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5481:16;5500:12;:10;:12::i;:::-;5481:31;;5523:96;5544:8;5554:4;5560:2;5564:21;5582:2;5564:17;:21::i;:::-;5587:25;5605:6;5587:17;:25::i;:::-;5614:4;5523:20;:96::i;:::-;5630:19;5652:9;:13;5662:2;5652:13;;;;;;;;;;;:19;5666:4;5652:19;;;;;;;;;;;;;;;;5630:41;;5704:6;5689:11;:21;;5681:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5827:6;5813:11;:20;5791:9;:13;5801:2;5791:13;;;;;;;;;;;:19;5805:4;5791:19;;;;;;;;;;;;;;;:42;;;;5874:6;5853:9;:13;5863:2;5853:13;;;;;;;;;;;:17;5867:2;5853:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5927:2;5896:46;;5921:4;5896:46;;5911:8;5896:46;;;5931:2;5935:6;5896:46;;;;;;;:::i;:::-;;;;;;;;5953:68;5984:8;5994:4;6000:2;6004;6008:6;6016:4;5953:30;:68::i;:::-;5394:634;;5231:797;;;;;:::o;13637:214::-;;;;;;;:::o;14588:792::-;14820:15;:2;:13;;;:15::i;:::-;14816:558;;;14872:2;14855:43;;;14899:8;14909:4;14915:3;14920:7;14929:4;14855:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14851:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;15240:6;15233:14;;;;;;;;;;;:::i;:::-;;;;;;;;14851:513;;;15287:62;;;;;;;;;;:::i;:::-;;;;;;;;14851:513;15025:48;;;15013:60;;;:8;:60;;;;15009:157;;15097:50;;;;;;;;;;:::i;:::-;;;;;;;;15009:157;14935:245;14816:558;14588:792;;;;;;:::o;15386:193::-;15452:16;15480:22;15519:1;15505:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15480:41;;15542:7;15531:5;15537:1;15531:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;15567:5;15560:12;;;15386:193;;;:::o;13857:725::-;14064:15;:2;:13;;;:15::i;:::-;14060:516;;;14116:2;14099:38;;;14138:8;14148:4;14154:2;14158:6;14166:4;14099:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14095:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14442:6;14435:14;;;;;;;;;;;:::i;:::-;;;;;;;;14095:471;;;14489:62;;;;;;;;;;:::i;:::-;;;;;;;;14095:471;14232:43;;;14220:55;;;:8;:55;;;;14216:152;;14299:50;;;;;;;;;;:::i;:::-;;;;;;;;14216:152;14172:210;14060:516;13857:725;;;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;24:722:9:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:410::-;1574:5;1599:65;1615:48;1656:6;1615:48;:::i;:::-;1599:65;:::i;:::-;1590:74;;1687:6;1680:5;1673:21;1725:4;1718:5;1714:16;1763:3;1754:6;1749:3;1745:16;1742:25;1739:112;;;1770:79;;:::i;:::-;1739:112;1860:41;1894:6;1889:3;1884;1860:41;:::i;:::-;1580:327;1497:410;;;;;:::o;1913:139::-;1959:5;1997:6;1984:20;1975:29;;2013:33;2040:5;2013:33;:::i;:::-;1913:139;;;;:::o;2075:370::-;2146:5;2195:3;2188:4;2180:6;2176:17;2172:27;2162:122;;2203:79;;:::i;:::-;2162:122;2320:6;2307:20;2345:94;2435:3;2427:6;2420:4;2412:6;2408:17;2345:94;:::i;:::-;2336:103;;2152:293;2075:370;;;;:::o;2468:::-;2539:5;2588:3;2581:4;2573:6;2569:17;2565:27;2555:122;;2596:79;;:::i;:::-;2555:122;2713:6;2700:20;2738:94;2828:3;2820:6;2813:4;2805:6;2801:17;2738:94;:::i;:::-;2729:103;;2545:293;2468:370;;;;:::o;2844:133::-;2887:5;2925:6;2912:20;2903:29;;2941:30;2965:5;2941:30;:::i;:::-;2844:133;;;;:::o;2983:137::-;3028:5;3066:6;3053:20;3044:29;;3082:32;3108:5;3082:32;:::i;:::-;2983:137;;;;:::o;3126:141::-;3182:5;3213:6;3207:13;3198:22;;3229:32;3255:5;3229:32;:::i;:::-;3126:141;;;;:::o;3286:338::-;3341:5;3390:3;3383:4;3375:6;3371:17;3367:27;3357:122;;3398:79;;:::i;:::-;3357:122;3515:6;3502:20;3540:78;3614:3;3606:6;3599:4;3591:6;3587:17;3540:78;:::i;:::-;3531:87;;3347:277;3286:338;;;;:::o;3630:139::-;3676:5;3714:6;3701:20;3692:29;;3730:33;3757:5;3730:33;:::i;:::-;3630:139;;;;:::o;3775:474::-;3843:6;3851;3900:2;3888:9;3879:7;3875:23;3871:32;3868:119;;;3906:79;;:::i;:::-;3868:119;4026:1;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;:::i;:::-;4041:63;;3997:117;4153:2;4179:53;4224:7;4215:6;4204:9;4200:22;4179:53;:::i;:::-;4169:63;;4124:118;3775:474;;;;;:::o;4255:1509::-;4409:6;4417;4425;4433;4441;4490:3;4478:9;4469:7;4465:23;4461:33;4458:120;;;4497:79;;:::i;:::-;4458:120;4617:1;4642:53;4687:7;4678:6;4667:9;4663:22;4642:53;:::i;:::-;4632:63;;4588:117;4744:2;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;:::i;:::-;4760:63;;4715:118;4900:2;4889:9;4885:18;4872:32;4931:18;4923:6;4920:30;4917:117;;;4953:79;;:::i;:::-;4917:117;5058:78;5128:7;5119:6;5108:9;5104:22;5058:78;:::i;:::-;5048:88;;4843:303;5213:2;5202:9;5198:18;5185:32;5244:18;5236:6;5233:30;5230:117;;;5266:79;;:::i;:::-;5230:117;5371:78;5441:7;5432:6;5421:9;5417:22;5371:78;:::i;:::-;5361:88;;5156:303;5526:3;5515:9;5511:19;5498:33;5558:18;5550:6;5547:30;5544:117;;;5580:79;;:::i;:::-;5544:117;5685:62;5739:7;5730:6;5719:9;5715:22;5685:62;:::i;:::-;5675:72;;5469:288;4255:1509;;;;;;;;:::o;5770:1089::-;5874:6;5882;5890;5898;5906;5955:3;5943:9;5934:7;5930:23;5926:33;5923:120;;;5962:79;;:::i;:::-;5923:120;6082:1;6107:53;6152:7;6143:6;6132:9;6128:22;6107:53;:::i;:::-;6097:63;;6053:117;6209:2;6235:53;6280:7;6271:6;6260:9;6256:22;6235:53;:::i;:::-;6225:63;;6180:118;6337:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6308:118;6465:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6436:118;6621:3;6610:9;6606:19;6593:33;6653:18;6645:6;6642:30;6639:117;;;6675:79;;:::i;:::-;6639:117;6780:62;6834:7;6825:6;6814:9;6810:22;6780:62;:::i;:::-;6770:72;;6564:288;5770:1089;;;;;;;;:::o;6865:468::-;6930:6;6938;6987:2;6975:9;6966:7;6962:23;6958:32;6955:119;;;6993:79;;:::i;:::-;6955:119;7113:1;7138:53;7183:7;7174:6;7163:9;7159:22;7138:53;:::i;:::-;7128:63;;7084:117;7240:2;7266:50;7308:7;7299:6;7288:9;7284:22;7266:50;:::i;:::-;7256:60;;7211:115;6865:468;;;;;:::o;7339:474::-;7407:6;7415;7464:2;7452:9;7443:7;7439:23;7435:32;7432:119;;;7470:79;;:::i;:::-;7432:119;7590:1;7615:53;7660:7;7651:6;7640:9;7636:22;7615:53;:::i;:::-;7605:63;;7561:117;7717:2;7743:53;7788:7;7779:6;7768:9;7764:22;7743:53;:::i;:::-;7733:63;;7688:118;7339:474;;;;;:::o;7819:894::-;7937:6;7945;7994:2;7982:9;7973:7;7969:23;7965:32;7962:119;;;8000:79;;:::i;:::-;7962:119;8148:1;8137:9;8133:17;8120:31;8178:18;8170:6;8167:30;8164:117;;;8200:79;;:::i;:::-;8164:117;8305:78;8375:7;8366:6;8355:9;8351:22;8305:78;:::i;:::-;8295:88;;8091:302;8460:2;8449:9;8445:18;8432:32;8491:18;8483:6;8480:30;8477:117;;;8513:79;;:::i;:::-;8477:117;8618:78;8688:7;8679:6;8668:9;8664:22;8618:78;:::i;:::-;8608:88;;8403:303;7819:894;;;;;:::o;8719:327::-;8777:6;8826:2;8814:9;8805:7;8801:23;8797:32;8794:119;;;8832:79;;:::i;:::-;8794:119;8952:1;8977:52;9021:7;9012:6;9001:9;8997:22;8977:52;:::i;:::-;8967:62;;8923:116;8719:327;;;;:::o;9052:349::-;9121:6;9170:2;9158:9;9149:7;9145:23;9141:32;9138:119;;;9176:79;;:::i;:::-;9138:119;9296:1;9321:63;9376:7;9367:6;9356:9;9352:22;9321:63;:::i;:::-;9311:73;;9267:127;9052:349;;;;:::o;9407:329::-;9466:6;9515:2;9503:9;9494:7;9490:23;9486:32;9483:119;;;9521:79;;:::i;:::-;9483:119;9641:1;9666:53;9711:7;9702:6;9691:9;9687:22;9666:53;:::i;:::-;9656:63;;9612:117;9407:329;;;;:::o;9742:179::-;9811:10;9832:46;9874:3;9866:6;9832:46;:::i;:::-;9910:4;9905:3;9901:14;9887:28;;9742:179;;;;:::o;9927:118::-;10014:24;10032:5;10014:24;:::i;:::-;10009:3;10002:37;9927:118;;:::o;10081:732::-;10200:3;10229:54;10277:5;10229:54;:::i;:::-;10299:86;10378:6;10373:3;10299:86;:::i;:::-;10292:93;;10409:56;10459:5;10409:56;:::i;:::-;10488:7;10519:1;10504:284;10529:6;10526:1;10523:13;10504:284;;;10605:6;10599:13;10632:63;10691:3;10676:13;10632:63;:::i;:::-;10625:70;;10718:60;10771:6;10718:60;:::i;:::-;10708:70;;10564:224;10551:1;10548;10544:9;10539:14;;10504:284;;;10508:14;10804:3;10797:10;;10205:608;;;10081:732;;;;:::o;10819:109::-;10900:21;10915:5;10900:21;:::i;:::-;10895:3;10888:34;10819:109;;:::o;10934:360::-;11020:3;11048:38;11080:5;11048:38;:::i;:::-;11102:70;11165:6;11160:3;11102:70;:::i;:::-;11095:77;;11181:52;11226:6;11221:3;11214:4;11207:5;11203:16;11181:52;:::i;:::-;11258:29;11280:6;11258:29;:::i;:::-;11253:3;11249:39;11242:46;;11024:270;10934:360;;;;:::o;11300:364::-;11388:3;11416:39;11449:5;11416:39;:::i;:::-;11471:71;11535:6;11530:3;11471:71;:::i;:::-;11464:78;;11551:52;11596:6;11591:3;11584:4;11577:5;11573:16;11551:52;:::i;:::-;11628:29;11650:6;11628:29;:::i;:::-;11623:3;11619:39;11612:46;;11392:272;11300:364;;;;:::o;11670:366::-;11812:3;11833:67;11897:2;11892:3;11833:67;:::i;:::-;11826:74;;11909:93;11998:3;11909:93;:::i;:::-;12027:2;12022:3;12018:12;12011:19;;11670:366;;;:::o;12042:::-;12184:3;12205:67;12269:2;12264:3;12205:67;:::i;:::-;12198:74;;12281:93;12370:3;12281:93;:::i;:::-;12399:2;12394:3;12390:12;12383:19;;12042:366;;;:::o;12414:::-;12556:3;12577:67;12641:2;12636:3;12577:67;:::i;:::-;12570:74;;12653:93;12742:3;12653:93;:::i;:::-;12771:2;12766:3;12762:12;12755:19;;12414:366;;;:::o;12786:::-;12928:3;12949:67;13013:2;13008:3;12949:67;:::i;:::-;12942:74;;13025:93;13114:3;13025:93;:::i;:::-;13143:2;13138:3;13134:12;13127:19;;12786:366;;;:::o;13158:::-;13300:3;13321:67;13385:2;13380:3;13321:67;:::i;:::-;13314:74;;13397:93;13486:3;13397:93;:::i;:::-;13515:2;13510:3;13506:12;13499:19;;13158:366;;;:::o;13530:::-;13672:3;13693:67;13757:2;13752:3;13693:67;:::i;:::-;13686:74;;13769:93;13858:3;13769:93;:::i;:::-;13887:2;13882:3;13878:12;13871:19;;13530:366;;;:::o;13902:::-;14044:3;14065:67;14129:2;14124:3;14065:67;:::i;:::-;14058:74;;14141:93;14230:3;14141:93;:::i;:::-;14259:2;14254:3;14250:12;14243:19;;13902:366;;;:::o;14274:::-;14416:3;14437:67;14501:2;14496:3;14437:67;:::i;:::-;14430:74;;14513:93;14602:3;14513:93;:::i;:::-;14631:2;14626:3;14622:12;14615:19;;14274:366;;;:::o;14646:::-;14788:3;14809:67;14873:2;14868:3;14809:67;:::i;:::-;14802:74;;14885:93;14974:3;14885:93;:::i;:::-;15003:2;14998:3;14994:12;14987:19;;14646:366;;;:::o;15018:::-;15160:3;15181:67;15245:2;15240:3;15181:67;:::i;:::-;15174:74;;15257:93;15346:3;15257:93;:::i;:::-;15375:2;15370:3;15366:12;15359:19;;15018:366;;;:::o;15390:108::-;15467:24;15485:5;15467:24;:::i;:::-;15462:3;15455:37;15390:108;;:::o;15504:118::-;15591:24;15609:5;15591:24;:::i;:::-;15586:3;15579:37;15504:118;;:::o;15628:1053::-;15951:4;15989:3;15978:9;15974:19;15966:27;;16003:71;16071:1;16060:9;16056:17;16047:6;16003:71;:::i;:::-;16084:72;16152:2;16141:9;16137:18;16128:6;16084:72;:::i;:::-;16203:9;16197:4;16193:20;16188:2;16177:9;16173:18;16166:48;16231:108;16334:4;16325:6;16231:108;:::i;:::-;16223:116;;16386:9;16380:4;16376:20;16371:2;16360:9;16356:18;16349:48;16414:108;16517:4;16508:6;16414:108;:::i;:::-;16406:116;;16570:9;16564:4;16560:20;16554:3;16543:9;16539:19;16532:49;16598:76;16669:4;16660:6;16598:76;:::i;:::-;16590:84;;15628:1053;;;;;;;;:::o;16687:751::-;16910:4;16948:3;16937:9;16933:19;16925:27;;16962:71;17030:1;17019:9;17015:17;17006:6;16962:71;:::i;:::-;17043:72;17111:2;17100:9;17096:18;17087:6;17043:72;:::i;:::-;17125;17193:2;17182:9;17178:18;17169:6;17125:72;:::i;:::-;17207;17275:2;17264:9;17260:18;17251:6;17207:72;:::i;:::-;17327:9;17321:4;17317:20;17311:3;17300:9;17296:19;17289:49;17355:76;17426:4;17417:6;17355:76;:::i;:::-;17347:84;;16687:751;;;;;;;;:::o;17444:373::-;17587:4;17625:2;17614:9;17610:18;17602:26;;17674:9;17668:4;17664:20;17660:1;17649:9;17645:17;17638:47;17702:108;17805:4;17796:6;17702:108;:::i;:::-;17694:116;;17444:373;;;;:::o;17823:634::-;18044:4;18082:2;18071:9;18067:18;18059:26;;18131:9;18125:4;18121:20;18117:1;18106:9;18102:17;18095:47;18159:108;18262:4;18253:6;18159:108;:::i;:::-;18151:116;;18314:9;18308:4;18304:20;18299:2;18288:9;18284:18;18277:48;18342:108;18445:4;18436:6;18342:108;:::i;:::-;18334:116;;17823:634;;;;;:::o;18463:210::-;18550:4;18588:2;18577:9;18573:18;18565:26;;18601:65;18663:1;18652:9;18648:17;18639:6;18601:65;:::i;:::-;18463:210;;;;:::o;18679:313::-;18792:4;18830:2;18819:9;18815:18;18807:26;;18879:9;18873:4;18869:20;18865:1;18854:9;18850:17;18843:47;18907:78;18980:4;18971:6;18907:78;:::i;:::-;18899:86;;18679:313;;;;:::o;18998:419::-;19164:4;19202:2;19191:9;19187:18;19179:26;;19251:9;19245:4;19241:20;19237:1;19226:9;19222:17;19215:47;19279:131;19405:4;19279:131;:::i;:::-;19271:139;;18998:419;;;:::o;19423:::-;19589:4;19627:2;19616:9;19612:18;19604:26;;19676:9;19670:4;19666:20;19662:1;19651:9;19647:17;19640:47;19704:131;19830:4;19704:131;:::i;:::-;19696:139;;19423:419;;;:::o;19848:::-;20014:4;20052:2;20041:9;20037:18;20029:26;;20101:9;20095:4;20091:20;20087:1;20076:9;20072:17;20065:47;20129:131;20255:4;20129:131;:::i;:::-;20121:139;;19848:419;;;:::o;20273:::-;20439:4;20477:2;20466:9;20462:18;20454:26;;20526:9;20520:4;20516:20;20512:1;20501:9;20497:17;20490:47;20554:131;20680:4;20554:131;:::i;:::-;20546:139;;20273:419;;;:::o;20698:::-;20864:4;20902:2;20891:9;20887:18;20879:26;;20951:9;20945:4;20941:20;20937:1;20926:9;20922:17;20915:47;20979:131;21105:4;20979:131;:::i;:::-;20971:139;;20698:419;;;:::o;21123:::-;21289:4;21327:2;21316:9;21312:18;21304:26;;21376:9;21370:4;21366:20;21362:1;21351:9;21347:17;21340:47;21404:131;21530:4;21404:131;:::i;:::-;21396:139;;21123:419;;;:::o;21548:::-;21714:4;21752:2;21741:9;21737:18;21729:26;;21801:9;21795:4;21791:20;21787:1;21776:9;21772:17;21765:47;21829:131;21955:4;21829:131;:::i;:::-;21821:139;;21548:419;;;:::o;21973:::-;22139:4;22177:2;22166:9;22162:18;22154:26;;22226:9;22220:4;22216:20;22212:1;22201:9;22197:17;22190:47;22254:131;22380:4;22254:131;:::i;:::-;22246:139;;21973:419;;;:::o;22398:::-;22564:4;22602:2;22591:9;22587:18;22579:26;;22651:9;22645:4;22641:20;22637:1;22626:9;22622:17;22615:47;22679:131;22805:4;22679:131;:::i;:::-;22671:139;;22398:419;;;:::o;22823:::-;22989:4;23027:2;23016:9;23012:18;23004:26;;23076:9;23070:4;23066:20;23062:1;23051:9;23047:17;23040:47;23104:131;23230:4;23104:131;:::i;:::-;23096:139;;22823:419;;;:::o;23248:222::-;23341:4;23379:2;23368:9;23364:18;23356:26;;23392:71;23460:1;23449:9;23445:17;23436:6;23392:71;:::i;:::-;23248:222;;;;:::o;23476:332::-;23597:4;23635:2;23624:9;23620:18;23612:26;;23648:71;23716:1;23705:9;23701:17;23692:6;23648:71;:::i;:::-;23729:72;23797:2;23786:9;23782:18;23773:6;23729:72;:::i;:::-;23476:332;;;;;:::o;23814:129::-;23848:6;23875:20;;:::i;:::-;23865:30;;23904:33;23932:4;23924:6;23904:33;:::i;:::-;23814:129;;;:::o;23949:75::-;23982:6;24015:2;24009:9;23999:19;;23949:75;:::o;24030:311::-;24107:4;24197:18;24189:6;24186:30;24183:56;;;24219:18;;:::i;:::-;24183:56;24269:4;24261:6;24257:17;24249:25;;24329:4;24323;24319:15;24311:23;;24030:311;;;:::o;24347:::-;24424:4;24514:18;24506:6;24503:30;24500:56;;;24536:18;;:::i;:::-;24500:56;24586:4;24578:6;24574:17;24566:25;;24646:4;24640;24636:15;24628:23;;24347:311;;;:::o;24664:307::-;24725:4;24815:18;24807:6;24804:30;24801:56;;;24837:18;;:::i;:::-;24801:56;24875:29;24897:6;24875:29;:::i;:::-;24867:37;;24959:4;24953;24949:15;24941:23;;24664:307;;;:::o;24977:132::-;25044:4;25067:3;25059:11;;25097:4;25092:3;25088:14;25080:22;;24977:132;;;:::o;25115:114::-;25182:6;25216:5;25210:12;25200:22;;25115:114;;;:::o;25235:98::-;25286:6;25320:5;25314:12;25304:22;;25235:98;;;:::o;25339:99::-;25391:6;25425:5;25419:12;25409:22;;25339:99;;;:::o;25444:113::-;25514:4;25546;25541:3;25537:14;25529:22;;25444:113;;;:::o;25563:184::-;25662:11;25696:6;25691:3;25684:19;25736:4;25731:3;25727:14;25712:29;;25563:184;;;;:::o;25753:168::-;25836:11;25870:6;25865:3;25858:19;25910:4;25905:3;25901:14;25886:29;;25753:168;;;;:::o;25927:169::-;26011:11;26045:6;26040:3;26033:19;26085:4;26080:3;26076:14;26061:29;;25927:169;;;;:::o;26102:305::-;26142:3;26161:20;26179:1;26161:20;:::i;:::-;26156:25;;26195:20;26213:1;26195:20;:::i;:::-;26190:25;;26349:1;26281:66;26277:74;26274:1;26271:81;26268:107;;;26355:18;;:::i;:::-;26268:107;26399:1;26396;26392:9;26385:16;;26102:305;;;;:::o;26413:96::-;26450:7;26479:24;26497:5;26479:24;:::i;:::-;26468:35;;26413:96;;;:::o;26515:90::-;26549:7;26592:5;26585:13;26578:21;26567:32;;26515:90;;;:::o;26611:149::-;26647:7;26687:66;26680:5;26676:78;26665:89;;26611:149;;;:::o;26766:126::-;26803:7;26843:42;26836:5;26832:54;26821:65;;26766:126;;;:::o;26898:77::-;26935:7;26964:5;26953:16;;26898:77;;;:::o;26981:154::-;27065:6;27060:3;27055;27042:30;27127:1;27118:6;27113:3;27109:16;27102:27;26981:154;;;:::o;27141:307::-;27209:1;27219:113;27233:6;27230:1;27227:13;27219:113;;;27318:1;27313:3;27309:11;27303:18;27299:1;27294:3;27290:11;27283:39;27255:2;27252:1;27248:10;27243:15;;27219:113;;;27350:6;27347:1;27344:13;27341:101;;;27430:1;27421:6;27416:3;27412:16;27405:27;27341:101;27190:258;27141:307;;;:::o;27454:320::-;27498:6;27535:1;27529:4;27525:12;27515:22;;27582:1;27576:4;27572:12;27603:18;27593:81;;27659:4;27651:6;27647:17;27637:27;;27593:81;27721:2;27713:6;27710:14;27690:18;27687:38;27684:84;;;27740:18;;:::i;:::-;27684:84;27505:269;27454:320;;;:::o;27780:281::-;27863:27;27885:4;27863:27;:::i;:::-;27855:6;27851:40;27993:6;27981:10;27978:22;27957:18;27945:10;27942:34;27939:62;27936:88;;;28004:18;;:::i;:::-;27936:88;28044:10;28040:2;28033:22;27823:238;27780:281;;:::o;28067:233::-;28106:3;28129:24;28147:5;28129:24;:::i;:::-;28120:33;;28175:66;28168:5;28165:77;28162:103;;;28245:18;;:::i;:::-;28162:103;28292:1;28285:5;28281:13;28274:20;;28067:233;;;:::o;28306:180::-;28354:77;28351:1;28344:88;28451:4;28448:1;28441:15;28475:4;28472:1;28465:15;28492:180;28540:77;28537:1;28530:88;28637:4;28634:1;28627:15;28661:4;28658:1;28651:15;28678:180;28726:77;28723:1;28716:88;28823:4;28820:1;28813:15;28847:4;28844:1;28837:15;28864:180;28912:77;28909:1;28902:88;29009:4;29006:1;28999:15;29033:4;29030:1;29023:15;29050:183;29085:3;29123:1;29105:16;29102:23;29099:128;;;29161:1;29158;29155;29140:23;29183:34;29214:1;29208:8;29183:34;:::i;:::-;29176:41;;29099:128;29050:183;:::o;29239:117::-;29348:1;29345;29338:12;29362:117;29471:1;29468;29461:12;29485:117;29594:1;29591;29584:12;29608:117;29717:1;29714;29707:12;29731:117;29840:1;29837;29830:12;29854:102;29895:6;29946:2;29942:7;29937:2;29930:5;29926:14;29922:28;29912:38;;29854:102;;;:::o;29962:106::-;30006:8;30055:5;30050:3;30046:15;30025:36;;29962:106;;;:::o;30074:239::-;30214:34;30210:1;30202:6;30198:14;30191:58;30283:22;30278:2;30270:6;30266:15;30259:47;30074:239;:::o;30319:227::-;30459:34;30455:1;30447:6;30443:14;30436:58;30528:10;30523:2;30515:6;30511:15;30504:35;30319:227;:::o;30552:230::-;30692:34;30688:1;30680:6;30676:14;30669:58;30761:13;30756:2;30748:6;30744:15;30737:38;30552:230;:::o;30788:228::-;30928:34;30924:1;30916:6;30912:14;30905:58;30997:11;30992:2;30984:6;30980:15;30973:36;30788:228;:::o;31022:224::-;31162:34;31158:1;31150:6;31146:14;31139:58;31231:7;31226:2;31218:6;31214:15;31207:32;31022:224;:::o;31252:237::-;31392:34;31388:1;31380:6;31376:14;31369:58;31461:20;31456:2;31448:6;31444:15;31437:45;31252:237;:::o;31495:229::-;31635:34;31631:1;31623:6;31619:14;31612:58;31704:12;31699:2;31691:6;31687:15;31680:37;31495:229;:::o;31730:228::-;31870:34;31866:1;31858:6;31854:14;31847:58;31939:11;31934:2;31926:6;31922:15;31915:36;31730:228;:::o;31964:::-;32104:34;32100:1;32092:6;32088:14;32081:58;32173:11;32168:2;32160:6;32156:15;32149:36;31964:228;:::o;32198:227::-;32338:34;32334:1;32326:6;32322:14;32315:58;32407:10;32402:2;32394:6;32390:15;32383:35;32198:227;:::o;32431:711::-;32470:3;32508:4;32490:16;32487:26;32484:39;;;32516:5;;32484:39;32545:20;;:::i;:::-;32620:1;32602:16;32598:24;32595:1;32589:4;32574:49;32653:4;32647:11;32752:16;32745:4;32737:6;32733:17;32730:39;32697:18;32689:6;32686:30;32670:113;32667:146;;;32798:5;;;;32667:146;32844:6;32838:4;32834:17;32880:3;32874:10;32907:18;32899:6;32896:30;32893:43;;;32929:5;;;;;;32893:43;32977:6;32970:4;32965:3;32961:14;32957:27;33036:1;33018:16;33014:24;33008:4;33004:35;32999:3;32996:44;32993:57;;;33043:5;;;;;;;32993:57;33060;33108:6;33102:4;33098:17;33090:6;33086:30;33080:4;33060:57;:::i;:::-;33133:3;33126:10;;32474:668;;;;;32431:711;;:::o;33148:122::-;33221:24;33239:5;33221:24;:::i;:::-;33214:5;33211:35;33201:63;;33260:1;33257;33250:12;33201:63;33148:122;:::o;33276:116::-;33346:21;33361:5;33346:21;:::i;:::-;33339:5;33336:32;33326:60;;33382:1;33379;33372:12;33326:60;33276:116;:::o;33398:120::-;33470:23;33487:5;33470:23;:::i;:::-;33463:5;33460:34;33450:62;;33508:1;33505;33498:12;33450:62;33398:120;:::o;33524:122::-;33597:24;33615:5;33597:24;:::i;:::-;33590:5;33587:35;33577:63;;33636:1;33633;33626:12;33577:63;33524:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1932400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1176,
									"end": 1180,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1168,
									"end": 1175,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1175,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1181,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1181,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1181,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1168,
									"end": 1181,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1168,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1188,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8242,
									"end": 8328,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8242,
									"end": 8328,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8315,
									"end": 8321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8312,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8242,
									"end": 8328,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8242,
									"end": 8328,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 889,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 926,
									"end": 935,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 913,
									"end": 936,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 909,
									"end": 941,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1083,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1087,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1134,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1308,
									"end": 1315,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1284,
									"end": 1306,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1449,
									"end": 1455,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1507,
									"end": 1513,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1726,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1841,
									"end": 1856,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1937,
									"end": 1938,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1967,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1959,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1955,
									"end": 1968,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2047,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2037,
									"end": 2048,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2049,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2025,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2029,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2050,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1983,
									"end": 1985,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 1986,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2144,
									"end": 2147,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2140,
									"end": 2156,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2133,
									"end": 2160,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1918,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2264,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2257,
									"end": 2261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2253,
									"end": 2265,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2312,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2379,
									"end": 2385,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2392,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2451,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2441,
									"end": 2447,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2438,
									"end": 2452,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2436,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2415,
									"end": 2453,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2233,
									"end": 2502,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2613,
									"end": 2617,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2583,
									"end": 2589,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2619,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2727,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2709,
									"end": 2719,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2685,
									"end": 2703,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2673,
									"end": 2683,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2670,
									"end": 2704,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2667,
									"end": 2729,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2772,
									"end": 2782,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2770,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2761,
									"end": 2783,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2551,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2843,
									"end": 2920,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2833,
									"end": 2921,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2940,
									"end": 2944,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2930,
									"end": 2945,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2969,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3029,
									"end": 3106,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3026,
									"end": 3027,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3107,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3126,
									"end": 3130,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3116,
									"end": 3131,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3150,
									"end": 3154,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3389,
									"end": 3401,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3645,
									"end": 3646,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3635,
									"end": 3647,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3753,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3747,
									"end": 3754,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3735,
									"end": 3740,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3731,
									"end": 3745,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3727,
									"end": 3755,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 589,
									"end": 15581,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b655ed291a5a788a07cabeb4a0dc42ddbeb560917ab825e458abab31fff56ce64736f6c63430008070033",
									".code": [
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 15581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2562,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2581,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2688,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2704,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1392,
											"end": 1501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1449,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1501,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1501,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1501,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1501,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1392,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1392,
											"end": 1553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1541,
											"end": 1552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1517,
											"end": 1553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1517,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1517,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1392,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1560,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 2334,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4584,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4584,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4584,
											"end": 4596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4584,
											"end": 4596,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4584,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4576,
											"end": 4580,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4576,
											"end": 4636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4576,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4576,
											"end": 4636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4576,
											"end": 4636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4623,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4623,
											"end": 4635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4623,
											"end": 4635,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4623,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4600,
											"end": 4636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4600,
											"end": 4636,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4600,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4576,
											"end": 4636,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4576,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4555,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4745,
											"end": 4749,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4751,
											"end": 4753,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4758,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4767,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4769,
											"end": 4773,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4722,
											"end": 4774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4774,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4722,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4781,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3081,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3044,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3301,
											"end": 3309,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3317,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3291,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 3369,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3550,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3550,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3550,
											"end": 3562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3550,
											"end": 3562,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3550,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3531,
											"end": 3583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3531,
											"end": 3583,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3531,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3437,
											"end": 3590,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3779,
											"end": 3816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4098,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4098,
											"end": 4110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4098,
											"end": 4110,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4098,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4090,
											"end": 4150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4131,
											"end": 4135,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4137,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4114,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4150,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4090,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4069,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4245,
											"end": 4249,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4271,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4227,
											"end": 4272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4227,
											"end": 4272,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4227,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 4279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6374,
											"end": 7419,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6374,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6572,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6671,
											"end": 6687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6671,
											"end": 6687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6687,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6663,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6759,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6759,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6759,
											"end": 6771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6759,
											"end": 6771,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6759,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6803,
											"end": 6811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6813,
											"end": 6817,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6821,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6823,
											"end": 6826,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6782,
											"end": 6842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6782,
											"end": 6842,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6782,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6858,
											"end": 6867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6880,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6873,
											"end": 6887,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6908,
											"end": 6918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6921,
											"end": 6924,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6908,
											"end": 6927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6908,
											"end": 6927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 6955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6958,
											"end": 6968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 6968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6941,
											"end": 6968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7017,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7018,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7019,
											"end": 7023,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 7024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7061,
											"end": 7067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7046,
											"end": 7057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7046,
											"end": 7067,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7046,
											"end": 7067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7038,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7168,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7174,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7156,
											"end": 7198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7238,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7240,
											"end": 7242,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6894,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6894,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6894,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7307,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7293,
											"end": 7301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7313,
											"end": 7316,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7325,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7326,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7373,
											"end": 7381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7387,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7391,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7393,
											"end": 7396,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7405,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7407,
											"end": 7411,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7337,
											"end": 7412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7337,
											"end": 7412,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7337,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6562,
											"end": 7419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 7419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 7419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 7419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 7419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 7419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 7419,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12380,
											"end": 12703,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12380,
											"end": 12703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12530,
											"end": 12538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12521,
											"end": 12538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12521,
											"end": 12538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12538,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12521,
											"end": 12538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 12513,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12632,
											"end": 12640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12613,
											"end": 12618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12594,
											"end": 12640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12670,
											"end": 12675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12687,
											"end": 12695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12655,
											"end": 12696,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12380,
											"end": 12703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12380,
											"end": 12703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12380,
											"end": 12703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12380,
											"end": 12703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5231,
											"end": 6028,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5231,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5412,
											"end": 5428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5412,
											"end": 5428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5412,
											"end": 5428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5404,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5500,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5544,
											"end": 5552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5558,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5564,
											"end": 5585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5564,
											"end": 5585,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5564,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5605,
											"end": 5611,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5587,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5523,
											"end": 5619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5523,
											"end": 5619,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5523,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5670,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5630,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5704,
											"end": 5710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5689,
											"end": 5700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5689,
											"end": 5710,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5689,
											"end": 5710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5681,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5833,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5801,
											"end": 5803,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5809,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5833,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5853,
											"end": 5866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5869,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5929,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5925,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5911,
											"end": 5919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5935,
											"end": 5941,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5942,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5984,
											"end": 5992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 5998,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6004,
											"end": 6006,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6014,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6020,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5953,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5953,
											"end": 6021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5953,
											"end": 6021,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5953,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 6028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 6028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 6028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 6028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 6028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 6028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 6028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 6028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13637,
											"end": 13851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14820,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14820,
											"end": 14822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14820,
											"end": 14833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14820,
											"end": 14833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14820,
											"end": 14833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14820,
											"end": 14835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14820,
											"end": 14835,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14820,
											"end": 14835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14816,
											"end": 15374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14816,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14816,
											"end": 15374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14872,
											"end": 14874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14855,
											"end": 14898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14898,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 14899,
											"end": 14907,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14913,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14915,
											"end": 14918,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14920,
											"end": 14927,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14929,
											"end": 14933,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 14855,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15240,
											"end": 15246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15233,
											"end": 15247,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15287,
											"end": 15349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 14851,
											"end": 15364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15073,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 15025,
											"end": 15073,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15025,
											"end": 15073,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15073,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15073,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 15009,
											"end": 15166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15147,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15009,
											"end": 15166,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 15009,
											"end": 15166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14935,
											"end": 15180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14816,
											"end": 15374,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14816,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 15380,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15386,
											"end": 15579,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15386,
											"end": 15579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15480,
											"end": 15502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15519,
											"end": 15520,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15505,
											"end": 15521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15542,
											"end": 15549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 15538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15560,
											"end": 15572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15560,
											"end": 15572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15560,
											"end": 15572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15386,
											"end": 15579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15386,
											"end": 15579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15386,
											"end": 15579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15386,
											"end": 15579,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 14064,
											"end": 14066,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14064,
											"end": 14077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14064,
											"end": 14079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14064,
											"end": 14079,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 14064,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 14060,
											"end": 14576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14116,
											"end": 14118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14099,
											"end": 14137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14137,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 14138,
											"end": 14146,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14148,
											"end": 14152,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14158,
											"end": 14164,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14166,
											"end": 14170,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14099,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14442,
											"end": 14448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14435,
											"end": 14449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14489,
											"end": 14551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 14095,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14232,
											"end": 14275,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 14232,
											"end": 14275,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14232,
											"end": 14275,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14220,
											"end": 14275,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14220,
											"end": 14275,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14220,
											"end": 14275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 14216,
											"end": 14368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14216,
											"end": 14368,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 14216,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14172,
											"end": 14382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14060,
											"end": 14576,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 14060,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13857,
											"end": 14582,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1714,
											"end": 1730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1767,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 2004,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2199,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2435,
											"end": 2438,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2592,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3073,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3220,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3522,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3614,
											"end": 3617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3347,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3721,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3903,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4085,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4488,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 4687,
											"end": 4694,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4904,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4950,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5128,
											"end": 5135,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 5146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5215,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5211,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5217,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5263,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5441,
											"end": 5448,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5577,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5739,
											"end": 5746,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5715,
											"end": 5737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5959,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6152,
											"end": 6159,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6280,
											"end": 6287,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6408,
											"end": 6415,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6467,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6536,
											"end": 6543,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6621,
											"end": 6624,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6606,
											"end": 6625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7183,
											"end": 7190,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7084,
											"end": 7201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7242,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7435,
											"end": 7467,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7649,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7788,
											"end": 7795,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7777,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7764,
											"end": 7786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7688,
											"end": 7806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7994,
											"end": 7996,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 7992,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8146,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8120,
											"end": 8151,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8196,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8170,
											"end": 8176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8197,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8375,
											"end": 8382,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8366,
											"end": 8372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8351,
											"end": 8373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8449,
											"end": 8458,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8480,
											"end": 8510,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8688,
											"end": 8695,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8679,
											"end": 8685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8812,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8824,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8829,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 9021,
											"end": 9028,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8923,
											"end": 9039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9158,
											"end": 9167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9156,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9145,
											"end": 9168,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9173,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 9376,
											"end": 9383,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9352,
											"end": 9374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9267,
											"end": 9394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9517,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9501,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9513,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9486,
											"end": 9518,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 9711,
											"end": 9718,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 9821,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9874,
											"end": 9877,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9905,
											"end": 9908,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9901,
											"end": 9915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 10032,
											"end": 10037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10277,
											"end": 10282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10376,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10459,
											"end": 10464,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10495,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10523,
											"end": 10536,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10676,
											"end": 10689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10564,
											"end": 10788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10508,
											"end": 10522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10915,
											"end": 10920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10888,
											"end": 10922,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 11080,
											"end": 11085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11160,
											"end": 11163,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11226,
											"end": 11232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11221,
											"end": 11224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11207,
											"end": 11212,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11203,
											"end": 11219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11253,
											"end": 11256,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11249,
											"end": 11288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11024,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11449,
											"end": 11454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11584,
											"end": 11588,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11577,
											"end": 11582,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11650,
											"end": 11656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11623,
											"end": 11626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11619,
											"end": 11658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11392,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11812,
											"end": 11815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11897,
											"end": 11899,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 11892,
											"end": 11895,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11833,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11826,
											"end": 11900,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11826,
											"end": 11900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 11998,
											"end": 12001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 11909,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12027,
											"end": 12029,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12022,
											"end": 12025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12018,
											"end": 12030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12011,
											"end": 12030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 12036,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12184,
											"end": 12187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 12269,
											"end": 12271,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 12264,
											"end": 12267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 12205,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12272,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12198,
											"end": 12272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 12370,
											"end": 12373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 12281,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12399,
											"end": 12401,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12394,
											"end": 12397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12390,
											"end": 12402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12383,
											"end": 12402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12408,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12556,
											"end": 12559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 12641,
											"end": 12643,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 12636,
											"end": 12639,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 12577,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 12742,
											"end": 12745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 12653,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12771,
											"end": 12773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12766,
											"end": 12769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12762,
											"end": 12774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12780,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 13013,
											"end": 13015,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 13008,
											"end": 13011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12949,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12942,
											"end": 13016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 13114,
											"end": 13117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 13025,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13143,
											"end": 13145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13138,
											"end": 13141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13134,
											"end": 13146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12786,
											"end": 13152,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13300,
											"end": 13303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 13385,
											"end": 13387,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 13380,
											"end": 13383,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 13321,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13314,
											"end": 13388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13314,
											"end": 13388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13486,
											"end": 13489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13397,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13515,
											"end": 13517,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13510,
											"end": 13513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13506,
											"end": 13518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13499,
											"end": 13518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13499,
											"end": 13518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13524,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13672,
											"end": 13675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 13757,
											"end": 13759,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 13752,
											"end": 13755,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 13693,
											"end": 13760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 13858,
											"end": 13861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 13769,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13887,
											"end": 13889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13882,
											"end": 13885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13878,
											"end": 13890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 13890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13896,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14044,
											"end": 14047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 14129,
											"end": 14131,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 14124,
											"end": 14127,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14058,
											"end": 14132,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14058,
											"end": 14132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 14230,
											"end": 14233,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14259,
											"end": 14261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14254,
											"end": 14257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14416,
											"end": 14419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 14501,
											"end": 14503,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14496,
											"end": 14499,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 14437,
											"end": 14504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14430,
											"end": 14504,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14430,
											"end": 14504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 14602,
											"end": 14605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 14513,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14631,
											"end": 14633,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14626,
											"end": 14629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14622,
											"end": 14634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14615,
											"end": 14634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14615,
											"end": 14634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14274,
											"end": 14640,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14788,
											"end": 14791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 14873,
											"end": 14875,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14868,
											"end": 14871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 14809,
											"end": 14876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14802,
											"end": 14876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14802,
											"end": 14876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 14974,
											"end": 14977,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 14885,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15003,
											"end": 15005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14998,
											"end": 15001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14994,
											"end": 15006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15012,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15018,
											"end": 15384,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 15018,
											"end": 15384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15160,
											"end": 15163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15181,
											"end": 15248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 15245,
											"end": 15247,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 15240,
											"end": 15243,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15181,
											"end": 15248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 15181,
											"end": 15248,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15181,
											"end": 15248,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 15181,
											"end": 15248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15174,
											"end": 15248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15174,
											"end": 15248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15257,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 15346,
											"end": 15349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15257,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 15257,
											"end": 15350,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15257,
											"end": 15350,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 15257,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15375,
											"end": 15377,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15370,
											"end": 15373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15366,
											"end": 15378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15359,
											"end": 15378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15359,
											"end": 15378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15384,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15390,
											"end": 15498,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 15390,
											"end": 15498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15467,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 15485,
											"end": 15490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15467,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 15467,
											"end": 15491,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15467,
											"end": 15491,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 15467,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15462,
											"end": 15465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15455,
											"end": 15492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15390,
											"end": 15498,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15504,
											"end": 15622,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 15504,
											"end": 15622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15591,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 15609,
											"end": 15614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15591,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 15591,
											"end": 15615,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15591,
											"end": 15615,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 15591,
											"end": 15615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15586,
											"end": 15589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15579,
											"end": 15616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15504,
											"end": 15622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15504,
											"end": 15622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15504,
											"end": 15622,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15951,
											"end": 15955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15989,
											"end": 15992,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15978,
											"end": 15987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15974,
											"end": 15993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15966,
											"end": 15993,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15966,
											"end": 15993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16003,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 16071,
											"end": 16072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16060,
											"end": 16069,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16056,
											"end": 16073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16047,
											"end": 16053,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16003,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 16003,
											"end": 16074,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16003,
											"end": 16074,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 16003,
											"end": 16074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16084,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16152,
											"end": 16154,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16141,
											"end": 16150,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16137,
											"end": 16155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16128,
											"end": 16134,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16084,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 16084,
											"end": 16156,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16084,
											"end": 16156,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16084,
											"end": 16156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16203,
											"end": 16212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16197,
											"end": 16201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16193,
											"end": 16213,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16188,
											"end": 16190,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16177,
											"end": 16186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16173,
											"end": 16191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16166,
											"end": 16214,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 16334,
											"end": 16338,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16325,
											"end": 16331,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16223,
											"end": 16339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16223,
											"end": 16339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16386,
											"end": 16395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16380,
											"end": 16384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16376,
											"end": 16396,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16360,
											"end": 16369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16356,
											"end": 16374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16349,
											"end": 16397,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16414,
											"end": 16522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 16517,
											"end": 16521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16508,
											"end": 16514,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16414,
											"end": 16522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 16414,
											"end": 16522,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16414,
											"end": 16522,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 16414,
											"end": 16522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16406,
											"end": 16522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16406,
											"end": 16522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16570,
											"end": 16579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16564,
											"end": 16568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16560,
											"end": 16580,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16554,
											"end": 16557,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16543,
											"end": 16552,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16539,
											"end": 16558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16532,
											"end": 16581,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16598,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 16669,
											"end": 16673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16660,
											"end": 16666,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16598,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 16598,
											"end": 16674,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16598,
											"end": 16674,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 16598,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16590,
											"end": 16674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16590,
											"end": 16674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 16681,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16910,
											"end": 16914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16948,
											"end": 16951,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 16937,
											"end": 16946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16933,
											"end": 16952,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16925,
											"end": 16952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16925,
											"end": 16952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16962,
											"end": 17033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 17030,
											"end": 17031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17019,
											"end": 17028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17015,
											"end": 17032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17006,
											"end": 17012,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16962,
											"end": 17033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 16962,
											"end": 17033,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16962,
											"end": 17033,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 16962,
											"end": 17033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17043,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 17111,
											"end": 17113,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17100,
											"end": 17109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17096,
											"end": 17114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17087,
											"end": 17093,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 17043,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 17043,
											"end": 17115,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17043,
											"end": 17115,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 17043,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 17193,
											"end": 17195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17182,
											"end": 17191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17178,
											"end": 17196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17169,
											"end": 17175,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 17275,
											"end": 17277,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17264,
											"end": 17273,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17260,
											"end": 17278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17251,
											"end": 17257,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17327,
											"end": 17336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17321,
											"end": 17325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17317,
											"end": 17337,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17311,
											"end": 17314,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 17300,
											"end": 17309,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17296,
											"end": 17315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17289,
											"end": 17338,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17355,
											"end": 17431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 17426,
											"end": 17430,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17417,
											"end": 17423,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17355,
											"end": 17431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 17355,
											"end": 17431,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17355,
											"end": 17431,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 17355,
											"end": 17431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17347,
											"end": 17431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17347,
											"end": 17431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16687,
											"end": 17438,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17444,
											"end": 17817,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 17444,
											"end": 17817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17587,
											"end": 17591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17625,
											"end": 17627,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17614,
											"end": 17623,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17610,
											"end": 17628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17602,
											"end": 17628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17602,
											"end": 17628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17674,
											"end": 17683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17668,
											"end": 17672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17664,
											"end": 17684,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17649,
											"end": 17658,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17645,
											"end": 17662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17638,
											"end": 17685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17702,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 17805,
											"end": 17809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17796,
											"end": 17802,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17702,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 17702,
											"end": 17810,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17702,
											"end": 17810,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 17702,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17694,
											"end": 17810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17694,
											"end": 17810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17444,
											"end": 17817,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17444,
											"end": 17817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17444,
											"end": 17817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17444,
											"end": 17817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17444,
											"end": 17817,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17823,
											"end": 18457,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 17823,
											"end": 18457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18082,
											"end": 18084,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18071,
											"end": 18080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18067,
											"end": 18085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18059,
											"end": 18085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18059,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18131,
											"end": 18140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18125,
											"end": 18129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18121,
											"end": 18141,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18117,
											"end": 18118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18106,
											"end": 18115,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18102,
											"end": 18119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18095,
											"end": 18142,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 18262,
											"end": 18266,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18253,
											"end": 18259,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 18159,
											"end": 18267,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18159,
											"end": 18267,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 18159,
											"end": 18267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18151,
											"end": 18267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18151,
											"end": 18267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18314,
											"end": 18323,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18308,
											"end": 18312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18304,
											"end": 18324,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18299,
											"end": 18301,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18288,
											"end": 18297,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18284,
											"end": 18302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18277,
											"end": 18325,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18342,
											"end": 18450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 18445,
											"end": 18449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18436,
											"end": 18442,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18342,
											"end": 18450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 18342,
											"end": 18450,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18342,
											"end": 18450,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 18342,
											"end": 18450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18334,
											"end": 18450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18334,
											"end": 18450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17823,
											"end": 18457,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17823,
											"end": 18457,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17823,
											"end": 18457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17823,
											"end": 18457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17823,
											"end": 18457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17823,
											"end": 18457,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18463,
											"end": 18673,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 18463,
											"end": 18673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18550,
											"end": 18554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18588,
											"end": 18590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18577,
											"end": 18586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18573,
											"end": 18591,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18565,
											"end": 18591,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18565,
											"end": 18591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18601,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 18663,
											"end": 18664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18652,
											"end": 18661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18648,
											"end": 18665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18639,
											"end": 18645,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18601,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 18601,
											"end": 18666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18601,
											"end": 18666,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 18601,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18673,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18463,
											"end": 18673,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18679,
											"end": 18992,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 18679,
											"end": 18992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18792,
											"end": 18796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18830,
											"end": 18832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18819,
											"end": 18828,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18815,
											"end": 18833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18807,
											"end": 18833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18807,
											"end": 18833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18879,
											"end": 18888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18873,
											"end": 18877,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18869,
											"end": 18889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18865,
											"end": 18866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18854,
											"end": 18863,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18850,
											"end": 18867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18843,
											"end": 18890,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18907,
											"end": 18985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 18980,
											"end": 18984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18971,
											"end": 18977,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18907,
											"end": 18985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 18907,
											"end": 18985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18907,
											"end": 18985,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 18907,
											"end": 18985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18899,
											"end": 18985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18899,
											"end": 18985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18679,
											"end": 18992,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18679,
											"end": 18992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18679,
											"end": 18992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18679,
											"end": 18992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18679,
											"end": 18992,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18998,
											"end": 19417,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 18998,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19168,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19202,
											"end": 19204,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19191,
											"end": 19200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19187,
											"end": 19205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19179,
											"end": 19205,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19179,
											"end": 19205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19251,
											"end": 19260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19245,
											"end": 19249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19241,
											"end": 19261,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19237,
											"end": 19238,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19226,
											"end": 19235,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19222,
											"end": 19239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19215,
											"end": 19262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19279,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19405,
											"end": 19409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19279,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 19279,
											"end": 19410,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19279,
											"end": 19410,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 19279,
											"end": 19410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19271,
											"end": 19410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19271,
											"end": 19410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18998,
											"end": 19417,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18998,
											"end": 19417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18998,
											"end": 19417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18998,
											"end": 19417,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19589,
											"end": 19593,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19616,
											"end": 19625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19612,
											"end": 19630,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19604,
											"end": 19630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19676,
											"end": 19685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19670,
											"end": 19674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19666,
											"end": 19686,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19662,
											"end": 19663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19651,
											"end": 19660,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19647,
											"end": 19664,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19640,
											"end": 19687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 19830,
											"end": 19834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19696,
											"end": 19835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19696,
											"end": 19835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19848,
											"end": 20267,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 19848,
											"end": 20267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20014,
											"end": 20018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20052,
											"end": 20054,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20041,
											"end": 20050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20029,
											"end": 20055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20029,
											"end": 20055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20101,
											"end": 20110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20095,
											"end": 20099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20091,
											"end": 20111,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20087,
											"end": 20088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20076,
											"end": 20085,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20072,
											"end": 20089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20065,
											"end": 20112,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20129,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 20255,
											"end": 20259,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20129,
											"end": 20260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 20129,
											"end": 20260,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20129,
											"end": 20260,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 20129,
											"end": 20260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20121,
											"end": 20260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20121,
											"end": 20260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19848,
											"end": 20267,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19848,
											"end": 20267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19848,
											"end": 20267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19848,
											"end": 20267,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20273,
											"end": 20692,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 20273,
											"end": 20692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20439,
											"end": 20443,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20477,
											"end": 20479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20466,
											"end": 20475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20462,
											"end": 20480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20454,
											"end": 20480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20454,
											"end": 20480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20526,
											"end": 20535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20520,
											"end": 20524,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20516,
											"end": 20536,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20512,
											"end": 20513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20501,
											"end": 20510,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20497,
											"end": 20514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20490,
											"end": 20537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20554,
											"end": 20685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 20680,
											"end": 20684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20554,
											"end": 20685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 20554,
											"end": 20685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20554,
											"end": 20685,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 20554,
											"end": 20685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20546,
											"end": 20685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20546,
											"end": 20685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20273,
											"end": 20692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20273,
											"end": 20692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20273,
											"end": 20692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20273,
											"end": 20692,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20864,
											"end": 20868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20902,
											"end": 20904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20891,
											"end": 20900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20887,
											"end": 20905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20879,
											"end": 20905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20879,
											"end": 20905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20951,
											"end": 20960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20945,
											"end": 20949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20941,
											"end": 20961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20937,
											"end": 20938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20926,
											"end": 20935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20922,
											"end": 20939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20915,
											"end": 20962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 21105,
											"end": 21109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 20979,
											"end": 21110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20971,
											"end": 21110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20971,
											"end": 21110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21117,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21289,
											"end": 21293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21327,
											"end": 21329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21316,
											"end": 21325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21312,
											"end": 21330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21304,
											"end": 21330,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21304,
											"end": 21330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21376,
											"end": 21385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21370,
											"end": 21374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21366,
											"end": 21386,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21362,
											"end": 21363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21351,
											"end": 21360,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21347,
											"end": 21364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21340,
											"end": 21387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 21530,
											"end": 21534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 21404,
											"end": 21535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21396,
											"end": 21535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21396,
											"end": 21535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21123,
											"end": 21542,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21548,
											"end": 21967,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 21548,
											"end": 21967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21714,
											"end": 21718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21752,
											"end": 21754,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21741,
											"end": 21750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21737,
											"end": 21755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21729,
											"end": 21755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21729,
											"end": 21755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21801,
											"end": 21810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21795,
											"end": 21799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21791,
											"end": 21811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21787,
											"end": 21788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21785,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21772,
											"end": 21789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21765,
											"end": 21812,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21829,
											"end": 21960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 21955,
											"end": 21959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21829,
											"end": 21960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 21829,
											"end": 21960,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21829,
											"end": 21960,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 21829,
											"end": 21960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21821,
											"end": 21960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21821,
											"end": 21960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21548,
											"end": 21967,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21548,
											"end": 21967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21548,
											"end": 21967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21548,
											"end": 21967,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22139,
											"end": 22143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22177,
											"end": 22179,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22166,
											"end": 22175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22162,
											"end": 22180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22154,
											"end": 22180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22154,
											"end": 22180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22226,
											"end": 22235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22220,
											"end": 22224,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22216,
											"end": 22236,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22212,
											"end": 22213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22201,
											"end": 22210,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22197,
											"end": 22214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22190,
											"end": 22237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 22380,
											"end": 22384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 22254,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22246,
											"end": 22385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22246,
											"end": 22385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21973,
											"end": 22392,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22398,
											"end": 22817,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 22398,
											"end": 22817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22564,
											"end": 22568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22602,
											"end": 22604,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22591,
											"end": 22600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22587,
											"end": 22605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22579,
											"end": 22605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22579,
											"end": 22605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22651,
											"end": 22660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22645,
											"end": 22649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22641,
											"end": 22661,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22637,
											"end": 22638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22626,
											"end": 22635,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22622,
											"end": 22639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22615,
											"end": 22662,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 22810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 22805,
											"end": 22809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22679,
											"end": 22810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 22679,
											"end": 22810,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22679,
											"end": 22810,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 22679,
											"end": 22810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22671,
											"end": 22810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22671,
											"end": 22810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22398,
											"end": 22817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22398,
											"end": 22817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22398,
											"end": 22817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22398,
											"end": 22817,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22823,
											"end": 23242,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 22823,
											"end": 23242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22989,
											"end": 22993,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23027,
											"end": 23029,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23016,
											"end": 23025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23012,
											"end": 23030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23004,
											"end": 23030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23004,
											"end": 23030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23076,
											"end": 23085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23070,
											"end": 23074,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23066,
											"end": 23086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23062,
											"end": 23063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23051,
											"end": 23060,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23047,
											"end": 23064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23040,
											"end": 23087,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23104,
											"end": 23235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 23230,
											"end": 23234,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23104,
											"end": 23235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 23104,
											"end": 23235,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23104,
											"end": 23235,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 23104,
											"end": 23235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23096,
											"end": 23235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23096,
											"end": 23235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 23242,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 23242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 23242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 23242,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23248,
											"end": 23470,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 23248,
											"end": 23470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23341,
											"end": 23345,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23379,
											"end": 23381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23368,
											"end": 23377,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23364,
											"end": 23382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23356,
											"end": 23382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23356,
											"end": 23382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23392,
											"end": 23463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 23460,
											"end": 23461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23449,
											"end": 23458,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23445,
											"end": 23462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23436,
											"end": 23442,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 23392,
											"end": 23463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 23392,
											"end": 23463,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23392,
											"end": 23463,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 23392,
											"end": 23463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23248,
											"end": 23470,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23248,
											"end": 23470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23248,
											"end": 23470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23248,
											"end": 23470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23248,
											"end": 23470,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23476,
											"end": 23808,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 23476,
											"end": 23808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23597,
											"end": 23601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23635,
											"end": 23637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23624,
											"end": 23633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23620,
											"end": 23638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23612,
											"end": 23638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23612,
											"end": 23638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23648,
											"end": 23719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 23716,
											"end": 23717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23705,
											"end": 23714,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23701,
											"end": 23718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23692,
											"end": 23698,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 23648,
											"end": 23719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 23648,
											"end": 23719,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23648,
											"end": 23719,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 23648,
											"end": 23719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23729,
											"end": 23801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 23797,
											"end": 23799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23786,
											"end": 23795,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23782,
											"end": 23800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23773,
											"end": 23779,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 23729,
											"end": 23801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 23729,
											"end": 23801,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23729,
											"end": 23801,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 23729,
											"end": 23801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23476,
											"end": 23808,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 23476,
											"end": 23808,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23476,
											"end": 23808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23476,
											"end": 23808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23476,
											"end": 23808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23476,
											"end": 23808,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23814,
											"end": 23943,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 23814,
											"end": 23943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23848,
											"end": 23854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23875,
											"end": 23895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 23875,
											"end": 23895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 23875,
											"end": 23895,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23875,
											"end": 23895,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 23875,
											"end": 23895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23865,
											"end": 23895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23865,
											"end": 23895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23904,
											"end": 23937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 23932,
											"end": 23936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23924,
											"end": 23930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23904,
											"end": 23937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 23904,
											"end": 23937,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23904,
											"end": 23937,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 23904,
											"end": 23937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23814,
											"end": 23943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23814,
											"end": 23943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23814,
											"end": 23943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23814,
											"end": 23943,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23949,
											"end": 24024,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 23949,
											"end": 24024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23982,
											"end": 23988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24015,
											"end": 24017,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24009,
											"end": 24018,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23999,
											"end": 24018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23999,
											"end": 24018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23949,
											"end": 24024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23949,
											"end": 24024,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24030,
											"end": 24341,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 24030,
											"end": 24341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24107,
											"end": 24111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24197,
											"end": 24215,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24189,
											"end": 24195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24186,
											"end": 24216,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24183,
											"end": 24239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24183,
											"end": 24239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 24183,
											"end": 24239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24219,
											"end": 24237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 24219,
											"end": 24237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 24219,
											"end": 24237,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24219,
											"end": 24237,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 24219,
											"end": 24237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24183,
											"end": 24239,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 24183,
											"end": 24239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24269,
											"end": 24273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24261,
											"end": 24267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24257,
											"end": 24274,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 24249,
											"end": 24274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24249,
											"end": 24274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24329,
											"end": 24333,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24323,
											"end": 24327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24319,
											"end": 24334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24311,
											"end": 24334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24311,
											"end": 24334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24030,
											"end": 24341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24030,
											"end": 24341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24030,
											"end": 24341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24030,
											"end": 24341,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24347,
											"end": 24658,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 24347,
											"end": 24658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24424,
											"end": 24428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24514,
											"end": 24532,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24506,
											"end": 24512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24503,
											"end": 24533,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24536,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 24536,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 24536,
											"end": 24554,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24536,
											"end": 24554,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 24536,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24586,
											"end": 24590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24578,
											"end": 24584,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24574,
											"end": 24591,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 24566,
											"end": 24591,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24566,
											"end": 24591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24646,
											"end": 24650,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24640,
											"end": 24644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24636,
											"end": 24651,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24628,
											"end": 24651,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24628,
											"end": 24651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24347,
											"end": 24658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24347,
											"end": 24658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24347,
											"end": 24658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24347,
											"end": 24658,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24664,
											"end": 24971,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 24664,
											"end": 24971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24725,
											"end": 24729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24815,
											"end": 24833,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24807,
											"end": 24813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24804,
											"end": 24834,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24801,
											"end": 24857,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24801,
											"end": 24857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 24801,
											"end": 24857,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24801,
											"end": 24857,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 24801,
											"end": 24857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24875,
											"end": 24904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 24897,
											"end": 24903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24875,
											"end": 24904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 24875,
											"end": 24904,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24875,
											"end": 24904,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 24875,
											"end": 24904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24867,
											"end": 24904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24867,
											"end": 24904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24959,
											"end": 24963,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24953,
											"end": 24957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24949,
											"end": 24964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24941,
											"end": 24964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24941,
											"end": 24964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24664,
											"end": 24971,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24664,
											"end": 24971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24664,
											"end": 24971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24664,
											"end": 24971,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24977,
											"end": 25109,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 24977,
											"end": 25109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25044,
											"end": 25048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25067,
											"end": 25070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25059,
											"end": 25070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25059,
											"end": 25070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25097,
											"end": 25101,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25092,
											"end": 25095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25088,
											"end": 25102,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25080,
											"end": 25102,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25080,
											"end": 25102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24977,
											"end": 25109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24977,
											"end": 25109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24977,
											"end": 25109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24977,
											"end": 25109,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25115,
											"end": 25229,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 25115,
											"end": 25229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25182,
											"end": 25188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25216,
											"end": 25221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25210,
											"end": 25222,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 25200,
											"end": 25222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25200,
											"end": 25222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25115,
											"end": 25229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25115,
											"end": 25229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25115,
											"end": 25229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25115,
											"end": 25229,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25235,
											"end": 25333,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 25235,
											"end": 25333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25286,
											"end": 25292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25314,
											"end": 25326,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 25304,
											"end": 25326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25304,
											"end": 25326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25235,
											"end": 25333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25235,
											"end": 25333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25235,
											"end": 25333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25235,
											"end": 25333,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25339,
											"end": 25438,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 25339,
											"end": 25438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25391,
											"end": 25397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25425,
											"end": 25430,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25419,
											"end": 25431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 25409,
											"end": 25431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25409,
											"end": 25431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25339,
											"end": 25438,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25339,
											"end": 25438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25339,
											"end": 25438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25339,
											"end": 25438,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25444,
											"end": 25557,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 25444,
											"end": 25557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25514,
											"end": 25518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25546,
											"end": 25550,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25541,
											"end": 25544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25537,
											"end": 25551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25529,
											"end": 25551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25529,
											"end": 25551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25444,
											"end": 25557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25444,
											"end": 25557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25444,
											"end": 25557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25444,
											"end": 25557,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25563,
											"end": 25747,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 25563,
											"end": 25747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25662,
											"end": 25673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25696,
											"end": 25702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25691,
											"end": 25694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25684,
											"end": 25703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25736,
											"end": 25740,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25731,
											"end": 25734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25727,
											"end": 25741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25712,
											"end": 25741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25712,
											"end": 25741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25563,
											"end": 25747,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25563,
											"end": 25747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25563,
											"end": 25747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25563,
											"end": 25747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25563,
											"end": 25747,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25753,
											"end": 25921,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 25753,
											"end": 25921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25836,
											"end": 25847,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25870,
											"end": 25876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25865,
											"end": 25868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25858,
											"end": 25877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25910,
											"end": 25914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25905,
											"end": 25908,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25901,
											"end": 25915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25886,
											"end": 25915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25886,
											"end": 25915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25753,
											"end": 25921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25753,
											"end": 25921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25753,
											"end": 25921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25753,
											"end": 25921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25753,
											"end": 25921,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25927,
											"end": 26096,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 25927,
											"end": 26096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26011,
											"end": 26022,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26045,
											"end": 26051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26040,
											"end": 26043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26033,
											"end": 26052,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26085,
											"end": 26089,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26080,
											"end": 26083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26076,
											"end": 26090,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26061,
											"end": 26090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26061,
											"end": 26090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25927,
											"end": 26096,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25927,
											"end": 26096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25927,
											"end": 26096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25927,
											"end": 26096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25927,
											"end": 26096,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26102,
											"end": 26407,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 26102,
											"end": 26407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26142,
											"end": 26145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26161,
											"end": 26181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 26179,
											"end": 26180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26161,
											"end": 26181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 26161,
											"end": 26181,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26161,
											"end": 26181,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 26161,
											"end": 26181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26156,
											"end": 26181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26156,
											"end": 26181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26195,
											"end": 26215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 26213,
											"end": 26214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26195,
											"end": 26215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 26195,
											"end": 26215,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26195,
											"end": 26215,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 26195,
											"end": 26215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26190,
											"end": 26215,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26190,
											"end": 26215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26349,
											"end": 26350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26281,
											"end": 26347,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26277,
											"end": 26351,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26274,
											"end": 26275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26271,
											"end": 26352,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26375,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 26268,
											"end": 26375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 26355,
											"end": 26373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 26355,
											"end": 26373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 26355,
											"end": 26373,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26355,
											"end": 26373,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 26355,
											"end": 26373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26268,
											"end": 26375,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 26268,
											"end": 26375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26399,
											"end": 26400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26396,
											"end": 26397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26392,
											"end": 26401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26385,
											"end": 26401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26385,
											"end": 26401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26102,
											"end": 26407,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26102,
											"end": 26407,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26102,
											"end": 26407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26102,
											"end": 26407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26102,
											"end": 26407,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26413,
											"end": 26509,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 26413,
											"end": 26509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26450,
											"end": 26457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26479,
											"end": 26503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 26497,
											"end": 26502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26479,
											"end": 26503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 26479,
											"end": 26503,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26479,
											"end": 26503,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 26479,
											"end": 26503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26468,
											"end": 26503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26468,
											"end": 26503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26413,
											"end": 26509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26413,
											"end": 26509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26413,
											"end": 26509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26413,
											"end": 26509,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26515,
											"end": 26605,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 26515,
											"end": 26605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26549,
											"end": 26556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26592,
											"end": 26597,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26585,
											"end": 26598,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26578,
											"end": 26599,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 26567,
											"end": 26599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26567,
											"end": 26599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26515,
											"end": 26605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26515,
											"end": 26605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26515,
											"end": 26605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26515,
											"end": 26605,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26611,
											"end": 26760,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 26611,
											"end": 26760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26647,
											"end": 26654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26687,
											"end": 26753,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26680,
											"end": 26685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26676,
											"end": 26754,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 26665,
											"end": 26754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26665,
											"end": 26754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26611,
											"end": 26760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26611,
											"end": 26760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26611,
											"end": 26760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26611,
											"end": 26760,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26766,
											"end": 26892,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 26766,
											"end": 26892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26803,
											"end": 26810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26843,
											"end": 26885,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26836,
											"end": 26841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26832,
											"end": 26886,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 26821,
											"end": 26886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26821,
											"end": 26886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26766,
											"end": 26892,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26766,
											"end": 26892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26766,
											"end": 26892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26766,
											"end": 26892,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26898,
											"end": 26975,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 26898,
											"end": 26975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26935,
											"end": 26942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26964,
											"end": 26969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26953,
											"end": 26969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26953,
											"end": 26969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26898,
											"end": 26975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26898,
											"end": 26975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26898,
											"end": 26975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26898,
											"end": 26975,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26981,
											"end": 27135,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 26981,
											"end": 27135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27065,
											"end": 27071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27060,
											"end": 27063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27055,
											"end": 27058,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27042,
											"end": 27072,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 27127,
											"end": 27128,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27118,
											"end": 27124,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27113,
											"end": 27116,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27109,
											"end": 27125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27102,
											"end": 27129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26981,
											"end": 27135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26981,
											"end": 27135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26981,
											"end": 27135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26981,
											"end": 27135,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27141,
											"end": 27448,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 27141,
											"end": 27448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27209,
											"end": 27210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27233,
											"end": 27239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27230,
											"end": 27231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27227,
											"end": 27240,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27318,
											"end": 27319,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 27313,
											"end": 27316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27309,
											"end": 27320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27303,
											"end": 27321,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 27299,
											"end": 27300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27294,
											"end": 27297,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 27290,
											"end": 27301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27283,
											"end": 27322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27255,
											"end": 27257,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27252,
											"end": 27253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27248,
											"end": 27258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27243,
											"end": 27258,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27243,
											"end": 27258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 27219,
											"end": 27332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27350,
											"end": 27356,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27347,
											"end": 27348,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27344,
											"end": 27357,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 27341,
											"end": 27442,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27341,
											"end": 27442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 27341,
											"end": 27442,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27430,
											"end": 27431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27421,
											"end": 27427,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 27416,
											"end": 27419,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 27412,
											"end": 27428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27405,
											"end": 27432,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27341,
											"end": 27442,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 27341,
											"end": 27442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27190,
											"end": 27448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27141,
											"end": 27448,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27454,
											"end": 27774,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 27454,
											"end": 27774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27498,
											"end": 27504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27535,
											"end": 27536,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 27529,
											"end": 27533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27525,
											"end": 27537,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 27515,
											"end": 27537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27515,
											"end": 27537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27582,
											"end": 27583,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 27576,
											"end": 27580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27572,
											"end": 27584,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 27603,
											"end": 27621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 27593,
											"end": 27674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 27593,
											"end": 27674,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27659,
											"end": 27663,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 27651,
											"end": 27657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27647,
											"end": 27664,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 27637,
											"end": 27664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27637,
											"end": 27664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27593,
											"end": 27674,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 27593,
											"end": 27674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27721,
											"end": 27723,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27713,
											"end": 27719,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27710,
											"end": 27724,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 27690,
											"end": 27708,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27687,
											"end": 27725,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 27684,
											"end": 27768,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27684,
											"end": 27768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 27684,
											"end": 27768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27740,
											"end": 27758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 27740,
											"end": 27758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 27740,
											"end": 27758,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27740,
											"end": 27758,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 27740,
											"end": 27758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27684,
											"end": 27768,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 27684,
											"end": 27768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27505,
											"end": 27774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27454,
											"end": 27774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27454,
											"end": 27774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27454,
											"end": 27774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27454,
											"end": 27774,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27780,
											"end": 28061,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 27780,
											"end": 28061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27863,
											"end": 27890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27885,
											"end": 27889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27863,
											"end": 27890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 27863,
											"end": 27890,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27863,
											"end": 27890,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27863,
											"end": 27890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27855,
											"end": 27861,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27851,
											"end": 27891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27993,
											"end": 27999,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27981,
											"end": 27991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27978,
											"end": 28000,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 27957,
											"end": 27975,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27945,
											"end": 27955,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27942,
											"end": 27976,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 27939,
											"end": 28001,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 27936,
											"end": 28024,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27936,
											"end": 28024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27936,
											"end": 28024,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 28004,
											"end": 28022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 28004,
											"end": 28022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 28004,
											"end": 28022,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28004,
											"end": 28022,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 28004,
											"end": 28022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27936,
											"end": 28024,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27936,
											"end": 28024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28044,
											"end": 28054,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28040,
											"end": 28042,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 28033,
											"end": 28055,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27823,
											"end": 28061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27780,
											"end": 28061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27780,
											"end": 28061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27780,
											"end": 28061,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28067,
											"end": 28300,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 28067,
											"end": 28300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28106,
											"end": 28109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28129,
											"end": 28153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 28147,
											"end": 28152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28129,
											"end": 28153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 28129,
											"end": 28153,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28129,
											"end": 28153,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 28129,
											"end": 28153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28120,
											"end": 28153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28120,
											"end": 28153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28175,
											"end": 28241,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28168,
											"end": 28173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28165,
											"end": 28242,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 28162,
											"end": 28265,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 28162,
											"end": 28265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 28162,
											"end": 28265,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 28245,
											"end": 28263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 28245,
											"end": 28263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 28245,
											"end": 28263,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28245,
											"end": 28263,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 28245,
											"end": 28263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28162,
											"end": 28265,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 28162,
											"end": 28265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28292,
											"end": 28293,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 28285,
											"end": 28290,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28281,
											"end": 28294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28274,
											"end": 28294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28274,
											"end": 28294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28067,
											"end": 28300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28067,
											"end": 28300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28067,
											"end": 28300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28067,
											"end": 28300,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28306,
											"end": 28486,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 28306,
											"end": 28486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28354,
											"end": 28431,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28351,
											"end": 28352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28344,
											"end": 28432,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28451,
											"end": 28455,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 28448,
											"end": 28449,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28441,
											"end": 28456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28475,
											"end": 28479,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 28472,
											"end": 28473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28465,
											"end": 28480,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28492,
											"end": 28672,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 28492,
											"end": 28672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28540,
											"end": 28617,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28537,
											"end": 28538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28530,
											"end": 28618,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28637,
											"end": 28641,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 28634,
											"end": 28635,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28627,
											"end": 28642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28661,
											"end": 28665,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 28658,
											"end": 28659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28651,
											"end": 28666,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28678,
											"end": 28858,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 28678,
											"end": 28858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28726,
											"end": 28803,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28723,
											"end": 28724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28716,
											"end": 28804,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28823,
											"end": 28827,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 28820,
											"end": 28821,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28813,
											"end": 28828,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28847,
											"end": 28851,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 28844,
											"end": 28845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28837,
											"end": 28852,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 28864,
											"end": 29044,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 28864,
											"end": 29044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28912,
											"end": 28989,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28909,
											"end": 28910,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28902,
											"end": 28990,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29009,
											"end": 29013,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 29006,
											"end": 29007,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28999,
											"end": 29014,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29033,
											"end": 29037,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 29030,
											"end": 29031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29023,
											"end": 29038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 29050,
											"end": 29233,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 29050,
											"end": 29233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29085,
											"end": 29088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29123,
											"end": 29124,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 29105,
											"end": 29121,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 29102,
											"end": 29125,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29099,
											"end": 29227,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29099,
											"end": 29227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 29099,
											"end": 29227,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29161,
											"end": 29162,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 29158,
											"end": 29159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29155,
											"end": 29156,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29140,
											"end": 29163,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 29183,
											"end": 29217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 29214,
											"end": 29215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29208,
											"end": 29216,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 29183,
											"end": 29217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 29183,
											"end": 29217,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29183,
											"end": 29217,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 29183,
											"end": 29217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29176,
											"end": 29217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29176,
											"end": 29217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29099,
											"end": 29227,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 29099,
											"end": 29227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29050,
											"end": 29233,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29050,
											"end": 29233,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29239,
											"end": 29356,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 29239,
											"end": 29356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29348,
											"end": 29349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29345,
											"end": 29346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29338,
											"end": 29350,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 29362,
											"end": 29479,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 29362,
											"end": 29479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29471,
											"end": 29472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29468,
											"end": 29469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29461,
											"end": 29473,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 29485,
											"end": 29602,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 29485,
											"end": 29602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29594,
											"end": 29595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29591,
											"end": 29592,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29584,
											"end": 29596,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 29608,
											"end": 29725,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 29608,
											"end": 29725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29717,
											"end": 29718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29714,
											"end": 29715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29707,
											"end": 29719,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 29731,
											"end": 29848,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 29731,
											"end": 29848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29840,
											"end": 29841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29837,
											"end": 29838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29830,
											"end": 29842,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 29854,
											"end": 29956,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 29854,
											"end": 29956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29895,
											"end": 29901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29946,
											"end": 29948,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 29942,
											"end": 29949,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 29937,
											"end": 29939,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 29930,
											"end": 29935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29926,
											"end": 29940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29922,
											"end": 29950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 29912,
											"end": 29950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29912,
											"end": 29950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29854,
											"end": 29956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29854,
											"end": 29956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29854,
											"end": 29956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29854,
											"end": 29956,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29962,
											"end": 30068,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 29962,
											"end": 30068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30006,
											"end": 30014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30055,
											"end": 30060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30050,
											"end": 30053,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 30046,
											"end": 30061,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 30025,
											"end": 30061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30025,
											"end": 30061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29962,
											"end": 30068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29962,
											"end": 30068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29962,
											"end": 30068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29962,
											"end": 30068,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30074,
											"end": 30313,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 30074,
											"end": 30313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30214,
											"end": 30248,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 30210,
											"end": 30211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30202,
											"end": 30208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30198,
											"end": 30212,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30191,
											"end": 30249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30283,
											"end": 30305,
											"name": "PUSH",
											"source": 9,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 30278,
											"end": 30280,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30270,
											"end": 30276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30266,
											"end": 30281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30259,
											"end": 30306,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30074,
											"end": 30313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30074,
											"end": 30313,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30319,
											"end": 30546,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 30319,
											"end": 30546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30459,
											"end": 30493,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 30455,
											"end": 30456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30447,
											"end": 30453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30443,
											"end": 30457,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30436,
											"end": 30494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30528,
											"end": 30538,
											"name": "PUSH",
											"source": 9,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30523,
											"end": 30525,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30515,
											"end": 30521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30511,
											"end": 30526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30504,
											"end": 30539,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30319,
											"end": 30546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30319,
											"end": 30546,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30552,
											"end": 30782,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 30552,
											"end": 30782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30692,
											"end": 30726,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 30688,
											"end": 30689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30680,
											"end": 30686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30676,
											"end": 30690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30669,
											"end": 30727,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30761,
											"end": 30774,
											"name": "PUSH",
											"source": 9,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 30756,
											"end": 30758,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30748,
											"end": 30754,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30744,
											"end": 30759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30737,
											"end": 30775,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30552,
											"end": 30782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30552,
											"end": 30782,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30788,
											"end": 31016,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 30788,
											"end": 31016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30928,
											"end": 30962,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 30924,
											"end": 30925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30916,
											"end": 30922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30912,
											"end": 30926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30905,
											"end": 30963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30997,
											"end": 31008,
											"name": "PUSH",
											"source": 9,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30992,
											"end": 30994,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30984,
											"end": 30990,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30980,
											"end": 30995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30973,
											"end": 31009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30788,
											"end": 31016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30788,
											"end": 31016,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31022,
											"end": 31246,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 31022,
											"end": 31246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31162,
											"end": 31196,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 31158,
											"end": 31159,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31150,
											"end": 31156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31146,
											"end": 31160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31139,
											"end": 31197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31231,
											"end": 31238,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31226,
											"end": 31228,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31218,
											"end": 31224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31214,
											"end": 31229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31207,
											"end": 31239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31022,
											"end": 31246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31022,
											"end": 31246,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31252,
											"end": 31489,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 31252,
											"end": 31489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31392,
											"end": 31426,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 31388,
											"end": 31389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31380,
											"end": 31386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31376,
											"end": 31390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31369,
											"end": 31427,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31461,
											"end": 31481,
											"name": "PUSH",
											"source": 9,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 31456,
											"end": 31458,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31448,
											"end": 31454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31444,
											"end": 31459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31437,
											"end": 31482,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31252,
											"end": 31489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31252,
											"end": 31489,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31495,
											"end": 31724,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 31495,
											"end": 31724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31635,
											"end": 31669,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 31631,
											"end": 31632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31623,
											"end": 31629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31619,
											"end": 31633,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31612,
											"end": 31670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31704,
											"end": 31716,
											"name": "PUSH",
											"source": 9,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 31699,
											"end": 31701,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31691,
											"end": 31697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31687,
											"end": 31702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31680,
											"end": 31717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31495,
											"end": 31724,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31495,
											"end": 31724,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31730,
											"end": 31958,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 31730,
											"end": 31958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31870,
											"end": 31904,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 31866,
											"end": 31867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31858,
											"end": 31864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31854,
											"end": 31868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31847,
											"end": 31905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31939,
											"end": 31950,
											"name": "PUSH",
											"source": 9,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31934,
											"end": 31936,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31926,
											"end": 31932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31922,
											"end": 31937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31915,
											"end": 31951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31730,
											"end": 31958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31730,
											"end": 31958,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31964,
											"end": 32192,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 31964,
											"end": 32192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32104,
											"end": 32138,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 32100,
											"end": 32101,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32092,
											"end": 32098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32088,
											"end": 32102,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32081,
											"end": 32139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32173,
											"end": 32184,
											"name": "PUSH",
											"source": 9,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32168,
											"end": 32170,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32160,
											"end": 32166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32156,
											"end": 32171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32149,
											"end": 32185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31964,
											"end": 32192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31964,
											"end": 32192,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32198,
											"end": 32425,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 32198,
											"end": 32425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32338,
											"end": 32372,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 32334,
											"end": 32335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32326,
											"end": 32332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32322,
											"end": 32336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32315,
											"end": 32373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32407,
											"end": 32417,
											"name": "PUSH",
											"source": 9,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32402,
											"end": 32404,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32394,
											"end": 32400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32390,
											"end": 32405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32383,
											"end": 32418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32198,
											"end": 32425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32198,
											"end": 32425,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32431,
											"end": 33142,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 32431,
											"end": 33142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32470,
											"end": 32473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32508,
											"end": 32512,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 32490,
											"end": 32506,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 32487,
											"end": 32513,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 32484,
											"end": 32523,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 32484,
											"end": 32523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 32484,
											"end": 32523,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32516,
											"end": 32521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 32516,
											"end": 32521,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32484,
											"end": 32523,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 32484,
											"end": 32523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32545,
											"end": 32565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 32545,
											"end": 32565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 32545,
											"end": 32565,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32545,
											"end": 32565,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 32545,
											"end": 32565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32620,
											"end": 32621,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 32602,
											"end": 32618,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 32598,
											"end": 32622,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 32595,
											"end": 32596,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 32589,
											"end": 32593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32574,
											"end": 32623,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 32653,
											"end": 32657,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32647,
											"end": 32658,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 32752,
											"end": 32768,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 32745,
											"end": 32749,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 32737,
											"end": 32743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32733,
											"end": 32750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32730,
											"end": 32769,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 32697,
											"end": 32715,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32689,
											"end": 32695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32686,
											"end": 32716,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 32670,
											"end": 32783,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 32667,
											"end": 32813,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 32667,
											"end": 32813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 32667,
											"end": 32813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32798,
											"end": 32803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32798,
											"end": 32803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32798,
											"end": 32803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 32798,
											"end": 32803,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32667,
											"end": 32813,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 32667,
											"end": 32813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32844,
											"end": 32850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32838,
											"end": 32842,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32834,
											"end": 32851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32880,
											"end": 32883,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32874,
											"end": 32884,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 32907,
											"end": 32925,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32899,
											"end": 32905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32896,
											"end": 32926,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 32893,
											"end": 32936,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 32893,
											"end": 32936,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 32893,
											"end": 32936,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32929,
											"end": 32934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32929,
											"end": 32934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32929,
											"end": 32934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32929,
											"end": 32934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32929,
											"end": 32934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 32929,
											"end": 32934,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32893,
											"end": 32936,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 32893,
											"end": 32936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32977,
											"end": 32983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32970,
											"end": 32974,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32965,
											"end": 32968,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32961,
											"end": 32975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32957,
											"end": 32984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33036,
											"end": 33037,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 33018,
											"end": 33034,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 33014,
											"end": 33038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 33008,
											"end": 33012,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 33004,
											"end": 33039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32999,
											"end": 33002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32996,
											"end": 33040,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 32993,
											"end": 33050,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 32993,
											"end": 33050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 32993,
											"end": 33050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33043,
											"end": 33048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33043,
											"end": 33048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33043,
											"end": 33048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33043,
											"end": 33048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33043,
											"end": 33048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33043,
											"end": 33048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 33043,
											"end": 33048,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32993,
											"end": 33050,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 32993,
											"end": 33050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33060,
											"end": 33117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 33108,
											"end": 33114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33102,
											"end": 33106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 33098,
											"end": 33115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33090,
											"end": 33096,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 33086,
											"end": 33116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33080,
											"end": 33084,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 33060,
											"end": 33117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 33060,
											"end": 33117,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33060,
											"end": 33117,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 33060,
											"end": 33117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33133,
											"end": 33136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33126,
											"end": 33136,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 33126,
											"end": 33136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32474,
											"end": 33142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32474,
											"end": 33142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32474,
											"end": 33142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32474,
											"end": 33142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32474,
											"end": 33142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32431,
											"end": 33142,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 32431,
											"end": 33142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32431,
											"end": 33142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32431,
											"end": 33142,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 33148,
											"end": 33270,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 33148,
											"end": 33270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33221,
											"end": 33245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 33239,
											"end": 33244,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33221,
											"end": 33245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 33221,
											"end": 33245,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33221,
											"end": 33245,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 33221,
											"end": 33245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33214,
											"end": 33219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33211,
											"end": 33246,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 33201,
											"end": 33264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 33201,
											"end": 33264,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33260,
											"end": 33261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33257,
											"end": 33258,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 33250,
											"end": 33262,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 33201,
											"end": 33264,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 33201,
											"end": 33264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33148,
											"end": 33270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33148,
											"end": 33270,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 33276,
											"end": 33392,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 33276,
											"end": 33392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33346,
											"end": 33367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 33361,
											"end": 33366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33346,
											"end": 33367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 33346,
											"end": 33367,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33346,
											"end": 33367,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 33346,
											"end": 33367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33339,
											"end": 33344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33336,
											"end": 33368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 33326,
											"end": 33386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 33326,
											"end": 33386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33382,
											"end": 33383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 33372,
											"end": 33384,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 33326,
											"end": 33386,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 33326,
											"end": 33386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33276,
											"end": 33392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33276,
											"end": 33392,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 33398,
											"end": 33518,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 33398,
											"end": 33518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33470,
											"end": 33493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 33487,
											"end": 33492,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33470,
											"end": 33493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 33470,
											"end": 33493,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33470,
											"end": 33493,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 33470,
											"end": 33493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33463,
											"end": 33468,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33460,
											"end": 33494,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 33450,
											"end": 33512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 33450,
											"end": 33512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33508,
											"end": 33509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33505,
											"end": 33506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 33498,
											"end": 33510,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 33450,
											"end": 33512,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 33450,
											"end": 33512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33398,
											"end": 33518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33398,
											"end": 33518,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 33524,
											"end": 33646,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 33524,
											"end": 33646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33597,
											"end": 33621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 33615,
											"end": 33620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33597,
											"end": 33621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 33597,
											"end": 33621,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33597,
											"end": 33621,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 33597,
											"end": 33621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33590,
											"end": 33595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33587,
											"end": 33622,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 33577,
											"end": 33640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 33577,
											"end": 33640,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33636,
											"end": 33637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33633,
											"end": 33634,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 33626,
											"end": 33638,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 33577,
											"end": 33640,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 33577,
											"end": 33640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33524,
											"end": 33646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33524,
											"end": 33646,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x1ff91fe00cef99de31289c0dc654fc428f9fb64bf7f9233e2f06c3c9962adbb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7afcb089a76807ec3e4e8f1c47dba75c0401caac95b9b624ef19d379c831f844\",\"dweb:/ipfs/QmR4SgyAua2XHxbHjoSbS619M7hvrfvREwrP7moFiegaoM\"]},\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\".deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 32,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 34,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\".deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f66daec9871818fe4b1eec391ba49d6932123a64ae892f7cd41a4d967c9961a164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f66daec9871818fe4b1eec391ba49d6932123a64ae892f7cd41a4d967c9961a164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH14 0xAEC9871818FE4B1EEC391BA49D69 ORIGIN SLT GASPRICE PUSH5 0xAE892F7CD4 BYTE 0x4D SWAP7 PUSH29 0x9961A164736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f66daec9871818fe4b1eec391ba49d6932123a64ae892f7cd41a4d967c9961a164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH14 0xAEC9871818FE4B1EEC391BA49D69 ORIGIN SLT GASPRICE PUSH5 0xAE892F7CD4 BYTE 0x4D SWAP7 PUSH29 0x9961A164736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f66daec9871818fe4b1eec391ba49d6932123a64ae892f7cd41a4d967c9961a164736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220feb76d47acf42f460c177b798b9c24cf48e2472bb2cd0a92644b4a5675bd353664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220feb76d47acf42f460c177b798b9c24cf48e2472bb2cd0a92644b4a5675bd353664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xB7 PUSH14 0x47ACF42F460C177B798B9C24CF48 0xE2 SELFBALANCE 0x2B 0xB2 0xCD EXP SWAP3 PUSH5 0x4B4A5675BD CALLDATALOAD CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220feb76d47acf42f460c177b798b9c24cf48e2472bb2cd0a92644b4a5675bd353664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xB7 PUSH14 0x47ACF42F460C177B798B9C24CF48 0xE2 SELFBALANCE 0x2B 0xB2 0xCD EXP SWAP3 PUSH5 0x4B4A5675BD CALLDATALOAD CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220feb76d47acf42f460c177b798b9c24cf48e2472bb2cd0a92644b4a5675bd353664736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> .deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:60:18:\n   |\n60 |     function uri(uint256 _tokenId) public view virtual override returns (string memory) {\n   |                  ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1988,
					"file": ".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"start": 1972
				},
				"type": "Warning"
			}
		],
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1569
						],
						"Context": [
							1591
						],
						"ERC1155": [
							1096
						],
						"ERC165": [
							1818
						],
						"IERC1155": [
							1218
						],
						"IERC1155MetadataURI": [
							1274
						],
						"IERC1155Receiver": [
							1259
						],
						"IERC165": [
							1830
						],
						"Strings": [
							1794
						]
					},
					"id": 1097,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:0"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 1219,
							"src": "119:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 1260,
							"src": "144:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 1275,
							"src": "177:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 1570,
							"src": "224:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 1592,
							"src": "258:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 1819,
							"src": "292:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 1795,
							"src": "339:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1591,
										"src": "609:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "609:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1818,
										"src": "618:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "618:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1218,
										"src": "626:8:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "626:8:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1274,
										"src": "636:19:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "636:19:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "374:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1096,
							"linearizedBaseContracts": [
								1096,
								1274,
								1218,
								1818,
								1830,
								1591
							],
							"name": "ERC1155",
							"nameLocation": "598:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1569,
										"src": "668:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "662:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "680:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "799:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "743:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "751:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "743:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 24,
											"keyType": {
												"id": 22,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "762:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 23,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "781:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "918:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "865:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "873:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "865:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 30,
											"keyType": {
												"id": 28,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "892:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "884:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 29,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "903:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1072:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "1057:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 33,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1057:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1158:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 41,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1176:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 40,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1168:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1168:13:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1083:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1152:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1138:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 36,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1138:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:20:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:0"
									},
									"scope": 1096,
									"src": "1126:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1817,
										1829
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1363:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 56,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1392:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 58,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "1412:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1218_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1218_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 57,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1407:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1407:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1218",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1407:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1392:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 62,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1449:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 64,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "1469:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1274_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1274_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 63,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1464:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1464:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1274",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1464:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1449:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1392:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 71,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1541:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 69,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1096_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1817,
															"src": "1517:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1517:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1392:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 55,
												"id": 74,
												"nodeType": "Return",
												"src": "1373:180:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1194:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1264:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 52,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 50,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1818,
												"src": "1331:6:0"
											},
											{
												"id": 51,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1830,
												"src": "1339:7:0"
											}
										],
										"src": "1322:25:0"
									},
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1289:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1282:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 47,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:20:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1357:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 53,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1356:6:0"
									},
									"scope": 1096,
									"src": "1255:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1273
									],
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "2043:291:0",
										"statements": [
											{
												"expression": {
													"id": 85,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "2060:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 84,
												"id": 86,
												"nodeType": "Return",
												"src": "2053:11:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1566:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1968:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 81,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2010:8:0"
									},
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1980:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1972:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:18:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2028:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 82,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 1096,
									"src": "1959:375:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1156
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "2571:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 100,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "2589:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2608:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2600:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 101,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2600:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2600:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2589:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2612:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "2581:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 109,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2675:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 111,
														"indexExpression": {
															"id": 110,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2685:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2675:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "2689:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2675:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 114,
												"nodeType": "Return",
												"src": "2668:29:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2340:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2485:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 95,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2544:8:0"
									},
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2520:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2512:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:29:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2562:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:9:0"
									},
									"scope": 1096,
									"src": "2476:228:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1169
									],
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "3034:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 131,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "3052:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3052:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 133,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "3071:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3071:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3052:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3083:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3044:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "3044:83:0"
											},
											{
												"assignments": [
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "3155:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 179,
														"src": "3138:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 141,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3138:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 142,
															"nodeType": "ArrayTypeName",
															"src": "3138:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 147,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "3185:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3185:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3171:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 144,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 145,
															"nodeType": "ArrayTypeName",
															"src": "3175:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3171:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3138:63:0"
											},
											{
												"body": {
													"id": 175,
													"nodeType": "Block",
													"src": "3258:74:0",
													"statements": [
														{
															"expression": {
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 162,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "3272:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 164,
																	"indexExpression": {
																		"id": 163,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "3286:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3272:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 166,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 120,
																				"src": "3301:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 168,
																			"indexExpression": {
																				"id": 167,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 152,
																				"src": "3310:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3301:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 169,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 123,
																				"src": "3314:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 171,
																			"indexExpression": {
																				"id": 170,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 152,
																				"src": "3318:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3314:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 165,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "3291:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3291:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3272:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 174,
															"nodeType": "ExpressionStatement",
															"src": "3272:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 155,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "3232:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 156,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "3236:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3236:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3232:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 176,
												"initializationExpression": {
													"assignments": [
														152
													],
													"declarations": [
														{
															"constant": false,
															"id": 152,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3225:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 176,
															"src": "3217:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 151,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 154,
													"initialValue": {
														"hexValue": "30",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3229:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3217:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3253:3:0",
														"subExpression": {
															"id": 159,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "3255:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 161,
													"nodeType": "ExpressionStatement",
													"src": "3253:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3212:120:0"
											},
											{
												"expression": {
													"id": 177,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "3349:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 129,
												"id": 178,
												"nodeType": "Return",
												"src": "3342:20:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "2710:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2870:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2986:8:0"
									},
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2902:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2885:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 118,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2885:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 119,
													"nodeType": "ArrayTypeName",
													"src": "2885:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2929:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2912:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 121,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 122,
													"nodeType": "ArrayTypeName",
													"src": "2912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2884:49:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3012:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 126,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 127,
													"nodeType": "ArrayTypeName",
													"src": "3012:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3011:18:0"
									},
									"scope": 1096,
									"src": "2861:508:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1177
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "3521:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "3550:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3550:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "3564:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "3574:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 189,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "3531:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "3531:52:0"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "3375:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3446:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 187,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3512:8:0"
									},
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3487:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:33:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3521:0:0"
									},
									"scope": 1096,
									"src": "3437:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3762:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 208,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "3779:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 210,
														"indexExpression": {
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "3798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3779:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 212,
													"indexExpression": {
														"id": 211,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "3807:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3779:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 213,
												"nodeType": "Return",
												"src": "3772:44:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "3596:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3666:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3738:8:0"
									},
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3708:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3700:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3682:35:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3756:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3756:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:6:0"
									},
									"scope": 1096,
									"src": "3657:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "4059:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 231,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "4090:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 232,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "4098:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4098:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4090:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 236,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "4131:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 237,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1581,
																			"src": "4137:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4137:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 235,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "4114:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4114:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4090:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4164:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4069:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4069:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "4069:148:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "4245:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "4251:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "4255:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4259:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 249,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4267:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 244,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "4227:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4227:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "4227:45:0"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3829:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3899:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4050:8:0"
									},
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3933:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3925:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3955:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3947:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3975:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3967:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3995:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3987:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4024:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "4011:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4011:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3915:119:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4059:0:0"
									},
									"scope": 1096,
									"src": "3890:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "4545:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 271,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "4576:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 272,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "4584:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4584:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4576:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "4617:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 277,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1581,
																			"src": "4623:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4623:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 275,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "4600:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4600:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4576:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4650:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "4555:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 285,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4751:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4755:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 288,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4760:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 289,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4769:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 284,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "4722:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4722:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "4722:52:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "4285:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4360:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4536:8:0"
									},
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4399:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4391:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4421:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4413:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4450:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4433:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4433:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 260,
													"nodeType": "ArrayTypeName",
													"src": "4433:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4480:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4463:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 262,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4463:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 263,
													"nodeType": "ArrayTypeName",
													"src": "4463:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4510:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4497:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4497:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4381:139:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4545:0:0"
									},
									"scope": 1096,
									"src": "4351:430:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "5394:634:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5412:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5426:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5418:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5418:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5418:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5412:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5430:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "5404:66:0"
											},
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5489:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "5481:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 317,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5481:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 319,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "5500:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5500:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5481:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 323,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5544:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5554:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5560:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 327,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "5582:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 326,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "5564:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5564:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 330,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "5605:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 329,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "5587:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5587:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 332,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5614:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 322,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "5523:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5523:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "5523:96:0"
											},
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5638:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "5630:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 337,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "5652:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 339,
														"indexExpression": {
															"id": 338,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5662:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5652:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 341,
													"indexExpression": {
														"id": 340,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "5666:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5652:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5630:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "5689:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 345,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "5704:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5689:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5712:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5681:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5681:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "5681:76:0"
											},
											{
												"id": 360,
												"nodeType": "UncheckedBlock",
												"src": "5767:77:0",
												"statements": [
													{
														"expression": {
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 350,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "5791:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 353,
																	"indexExpression": {
																		"id": 351,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "5801:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5791:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 354,
																"indexExpression": {
																	"id": 352,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "5805:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5791:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 355,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "5813:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 356,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "5827:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5813:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5791:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 359,
														"nodeType": "ExpressionStatement",
														"src": "5791:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 361,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5853:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 364,
															"indexExpression": {
																"id": 362,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "5863:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5853:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 365,
														"indexExpression": {
															"id": 363,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5867:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5853:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 366,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "5874:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5853:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "5853:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 370,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5911:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5921:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5927:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5931:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 374,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5935:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "5896:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5896:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "EmitStatement",
												"src": "5891:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5984:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "6000:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "6004:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "6008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "6016:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 377,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "5953:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5953:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "5953:68:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "4787:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5240:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5275:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5267:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5297:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5289:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5317:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5309:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5337:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5329:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5353:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5353:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5257:119:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5394:0:0"
									},
									"scope": 1096,
									"src": "5231:797:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "6562:857:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 404,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "6580:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 406,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "6594:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6594:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6580:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6610:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6572:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "6572:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "6671:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6685:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 414,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6677:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6677:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6671:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6689:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6663:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "6663:66:0"
											},
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6748:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "6740:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 422,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6740:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 424,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "6759:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6759:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6740:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 428,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "6803:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "6813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "6819:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "6823:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 432,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 433,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "6837:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 427,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "6782:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6782:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "6782:60:0"
											},
											{
												"body": {
													"id": 493,
													"nodeType": "Block",
													"src": "6894:370:0",
													"statements": [
														{
															"assignments": [
																448
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 448,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6916:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 493,
																	"src": "6908:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 447,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6908:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 452,
															"initialValue": {
																"baseExpression": {
																	"id": 449,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "6921:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 451,
																"indexExpression": {
																	"id": 450,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "6925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6921:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6908:19:0"
														},
														{
															"assignments": [
																454
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 454,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6949:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 493,
																	"src": "6941:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6941:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 458,
															"initialValue": {
																"baseExpression": {
																	"id": 455,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "6958:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 457,
																"indexExpression": {
																	"id": 456,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "6966:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6958:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6941:27:0"
														},
														{
															"assignments": [
																460
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 460,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6991:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 493,
																	"src": "6983:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 459,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6983:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 466,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 461,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "7005:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 463,
																	"indexExpression": {
																		"id": 462,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "7015:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7005:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 465,
																"indexExpression": {
																	"id": 464,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "7019:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7005:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6983:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 468,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "7046:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 469,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 454,
																			"src": "7061:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7046:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7069:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 467,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7038:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7038:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "7038:76:0"
														},
														{
															"id": 484,
															"nodeType": "UncheckedBlock",
															"src": "7128:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 474,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "7156:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 477,
																				"indexExpression": {
																					"id": 475,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 448,
																					"src": "7166:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7156:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 478,
																			"indexExpression": {
																				"id": 476,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "7170:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 479,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 460,
																				"src": "7178:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 480,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 454,
																				"src": "7192:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7178:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7156:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 483,
																	"nodeType": "ExpressionStatement",
																	"src": "7156:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 485,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "7226:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 488,
																		"indexExpression": {
																			"id": 486,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 448,
																			"src": "7236:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7226:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 489,
																	"indexExpression": {
																		"id": 487,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7240:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7226:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 490,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "7247:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7226:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 492,
															"nodeType": "ExpressionStatement",
															"src": "7226:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 440,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "6873:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 441,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "6877:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6877:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6873:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 494,
												"initializationExpression": {
													"assignments": [
														437
													],
													"declarations": [
														{
															"constant": false,
															"id": 437,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6866:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 494,
															"src": "6858:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6858:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 439,
													"initialValue": {
														"hexValue": "30",
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6870:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6858:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6889:3:0",
														"subExpression": {
															"id": 444,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "6891:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 446,
													"nodeType": "ExpressionStatement",
													"src": "6889:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6853:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 496,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7293:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7303:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "7309:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7313:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 500,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 495,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "7279:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7279:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "EmitStatement",
												"src": "7274:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7373:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7383:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "7389:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7393:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 508,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7398:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "7407:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 503,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "7337:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7337:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "7337:75:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "6034:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6383:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6423:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "6415:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6445:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "6437:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6474:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "6457:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 393,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 394,
													"nodeType": "ArrayTypeName",
													"src": "6457:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6504:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "6487:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 396,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6487:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 397,
													"nodeType": "ArrayTypeName",
													"src": "6487:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "6521:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6405:139:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6562:0:0"
									},
									"scope": 1096,
									"src": "6374:1045:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8298:30:0",
										"statements": [
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "8308:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 520,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "8315:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8308:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8308:13:0"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "7425:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8251:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8259:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8259:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8258:22:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8298:0:0"
									},
									"scope": 1096,
									"src": "8242:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "8830:424:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "8848:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8862:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8854:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8854:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8854:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8848:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8866:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8840:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "8840:62:0"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8921:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "8913:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 546,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8913:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 548,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "8932:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8932:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8913:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "8976:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8994:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8986:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 553,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8986:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8986:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8998:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 559,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "9020:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 558,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "9002:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9002:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 562,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "9043:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 561,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "9025:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9025:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 564,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "9052:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 551,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "8955:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8955:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "8955:102:0"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 567,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "9068:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 570,
															"indexExpression": {
																"id": 568,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "9078:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9068:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 571,
														"indexExpression": {
															"id": 569,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9068:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 572,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "9089:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9068:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "9068:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 576,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9125:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9143:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9135:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 577,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9135:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9135:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9147:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9151:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 583,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9155:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "9110:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9110:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "EmitStatement",
												"src": "9105:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9204:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9222:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9214:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 588,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9214:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9214:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9226:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9230:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 594,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "9242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 586,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "9173:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9173:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "9173:74:0"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8334:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8710:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "8725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "8745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8773:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "8765:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8802:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "8789:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8789:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8715:97:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8830:0:0"
									},
									"scope": 1096,
									"src": "8701:553:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "9753:561:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "9771:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9785:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9777:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9777:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9777:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9771:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9789:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9763:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "9763:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 624,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "9843:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9843:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 626,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "9857:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9857:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9843:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9873:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9835:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "9835:81:0"
											},
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9935:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "9927:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 632,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9927:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 634,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "9946:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9946:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9927:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9990:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10008:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10000:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10000:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "10012:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10016:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 645,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "10021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 646,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "10030:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "9969:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9969:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "9969:66:0"
											},
											{
												"body": {
													"id": 672,
													"nodeType": "Block",
													"src": "10087:60:0",
													"statements": [
														{
															"expression": {
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 660,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "10101:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 665,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 661,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10111:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 663,
																			"indexExpression": {
																				"id": 662,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "10115:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10111:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10101:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 666,
																	"indexExpression": {
																		"id": 664,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "10119:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10101:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 667,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "10126:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 669,
																	"indexExpression": {
																		"id": 668,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "10134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10126:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10101:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 671,
															"nodeType": "ExpressionStatement",
															"src": "10101:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 653,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "10066:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 654,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10070:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10070:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10066:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"initializationExpression": {
													"assignments": [
														650
													],
													"declarations": [
														{
															"constant": false,
															"id": 650,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10059:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 673,
															"src": "10051:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 649,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10051:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 652,
													"initialValue": {
														"hexValue": "30",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10063:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10051:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10082:3:0",
														"subExpression": {
															"id": 657,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "10082:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 659,
													"nodeType": "ExpressionStatement",
													"src": "10082:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10046:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 675,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "10176:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10194:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10186:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 676,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10186:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10186:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "10198:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10202:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 682,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "10207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 674,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "10162:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10162:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "EmitStatement",
												"src": "10157:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 686,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "10262:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10280:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 687,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10272:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10272:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "10284:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10288:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 693,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "10293:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 694,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "10302:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 685,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "10226:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10226:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "10226:81:0"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "9260:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9608:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9636:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "9628:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9665:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "9648:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9648:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "9648:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9695:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "9678:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9678:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "9678:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "9712:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9712:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9618:117:0"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9753:0:0"
									},
									"scope": 1096,
									"src": "9599:715:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "10658:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 709,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10676:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 710,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10684:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10684:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10676:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10696:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10668:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "10668:66:0"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10753:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "10745:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 718,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10745:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 720,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "10764:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10764:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10745:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "10808:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10818:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10832:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10824:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 726,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10824:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10824:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 731,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "10854:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 730,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "10836:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10836:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 734,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "10877:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 733,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "10859:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10859:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10886:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 723,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "10787:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10787:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "10787:102:0"
											},
											{
												"assignments": [
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10908:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "10900:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 741,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "10922:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 743,
														"indexExpression": {
															"id": 742,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "10932:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10922:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 745,
													"indexExpression": {
														"id": 744,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "10936:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10922:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10900:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 748,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "10959:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 749,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "10974:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10959:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10982:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10951:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "10951:70:0"
											},
											{
												"id": 764,
												"nodeType": "UncheckedBlock",
												"src": "11031:77:0",
												"statements": [
													{
														"expression": {
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 754,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "11055:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 757,
																	"indexExpression": {
																		"id": 755,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "11065:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11055:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 758,
																"indexExpression": {
																	"id": 756,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "11069:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11055:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 759,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "11077:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 760,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "11091:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11077:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11055:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 763,
														"nodeType": "ExpressionStatement",
														"src": "11055:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 766,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "11138:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "11148:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 768,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "11166:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 773,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "11170:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "11123:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11123:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "11118:59:0"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "10320:229:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10563:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10586:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "10578:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10608:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "10600:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10628:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "10620:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10568:72:0"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10658:0:0"
									},
									"scope": 1096,
									"src": "10554:630:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "11507:738:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "11525:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11541:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11533:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 791,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11533:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11533:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11525:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11545:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 789,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11517:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "11517:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 800,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "11601:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11601:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 802,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "11615:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11615:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11601:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11631:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11593:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "11593:81:0"
											},
											{
												"assignments": [
													809
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11693:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "11685:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 808,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11685:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 810,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "11704:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11704:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11685:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "11748:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "11758:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "11776:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 821,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "11781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11790:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 813,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "11727:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11727:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "11727:66:0"
											},
											{
												"body": {
													"id": 874,
													"nodeType": "Block",
													"src": "11845:323:0",
													"statements": [
														{
															"assignments": [
																837
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 837,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11867:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 874,
																	"src": "11859:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 836,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11859:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 841,
															"initialValue": {
																"baseExpression": {
																	"id": 838,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "11872:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"id": 839,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "11876:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11872:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11859:19:0"
														},
														{
															"assignments": [
																843
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 843,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11900:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 874,
																	"src": "11892:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 842,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11892:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 847,
															"initialValue": {
																"baseExpression": {
																	"id": 844,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "11909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 846,
																"indexExpression": {
																	"id": 845,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "11917:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11909:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11892:27:0"
														},
														{
															"assignments": [
																849
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 849,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11942:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 874,
																	"src": "11934:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 848,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11934:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 855,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 850,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "11956:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 852,
																	"indexExpression": {
																		"id": 851,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "11966:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11956:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 854,
																"indexExpression": {
																	"id": 853,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "11970:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11956:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11934:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 857,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 849,
																			"src": "11997:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 858,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "12012:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11997:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12020:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 856,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11989:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11989:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 862,
															"nodeType": "ExpressionStatement",
															"src": "11989:70:0"
														},
														{
															"id": 873,
															"nodeType": "UncheckedBlock",
															"src": "12073:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 863,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "12101:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 866,
																				"indexExpression": {
																					"id": 864,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "12111:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12101:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 867,
																			"indexExpression": {
																				"id": 865,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "12115:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12101:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 868,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 849,
																				"src": "12123:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 869,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 843,
																				"src": "12137:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12123:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12101:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 872,
																	"nodeType": "ExpressionStatement",
																	"src": "12101:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 829,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11824:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 830,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "11828:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11828:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11824:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 875,
												"initializationExpression": {
													"assignments": [
														826
													],
													"declarations": [
														{
															"constant": false,
															"id": 826,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11817:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 875,
															"src": "11809:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 825,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11809:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 828,
													"initialValue": {
														"hexValue": "30",
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11821:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11809:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11840:3:0",
														"subExpression": {
															"id": 833,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "11840:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 835,
													"nodeType": "ExpressionStatement",
													"src": "11840:3:0"
												},
												"nodeType": "ForStatement",
												"src": "11804:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 877,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "12197:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "12207:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12221:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12213:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12213:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12213:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "12225:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 884,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "12230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 876,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "12183:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12183:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "12178:60:0"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "11190:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11387:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "11407:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11446:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "11429:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 781,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 782,
													"nodeType": "ArrayTypeName",
													"src": "11429:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11476:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "11459:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 784,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 785,
													"nodeType": "ArrayTypeName",
													"src": "11459:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11397:92:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11507:0:0"
									},
									"scope": 1096,
									"src": "11378:867:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "12503:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 899,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "12521:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 900,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "12530:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12521:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12540:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12513:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12513:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "12513:71:0"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "12594:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "12613:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12594:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 909,
														"indexExpression": {
															"id": 907,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "12620:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12594:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "12632:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12594:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "12594:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "12670:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "12677:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12687:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "12655:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12655:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "EmitStatement",
												"src": "12650:46:0"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "12251:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12389:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12425:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "12417:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12448:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "12440:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12471:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "12466:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12407:78:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12503:0:0"
									},
									"scope": 1096,
									"src": "12380:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "13849:2:0",
										"statements": []
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "12709:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13646:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13684:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "13676:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13710:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "13702:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13732:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "13724:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13761:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "13744:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 928,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 929,
													"nodeType": "ArrayTypeName",
													"src": "13744:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13791:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "13774:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 931,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 932,
													"nodeType": "ArrayTypeName",
													"src": "13774:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13821:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "13808:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13808:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13666:165:0"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13849:0:0"
									},
									"scope": 1096,
									"src": "13637:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "14050:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 954,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "14064:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1292,
														"src": "14064:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14064:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "14060:516:0",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "14081:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 981,
																		"nodeType": "Block",
																		"src": "14198:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 974,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 970,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 968,
																						"src": "14220:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 971,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1259,
																								"src": "14232:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1259_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 972,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1240,
																							"src": "14232:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 973,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14232:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14220:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 980,
																				"nodeType": "IfStatement",
																				"src": "14216:152:0",
																				"trueBody": {
																					"id": 979,
																					"nodeType": "Block",
																					"src": "14277:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 976,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14306:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 975,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14299:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 977,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14299:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 978,
																							"nodeType": "ExpressionStatement",
																							"src": "14299:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 982,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 969,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 968,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14188:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 982,
																				"src": "14181:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 967,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14181:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14180:17:0"
																	},
																	"src": "14172:210:0"
																},
																{
																	"block": {
																		"id": 990,
																		"nodeType": "Block",
																		"src": "14417:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 987,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 984,
																							"src": "14442:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 986,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14435:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 988,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14435:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 989,
																				"nodeType": "ExpressionStatement",
																				"src": "14435:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 991,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 985,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 984,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14409:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 991,
																				"src": "14395:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 983,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14395:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14394:22:0"
																	},
																	"src": "14383:81:0"
																},
																{
																	"block": {
																		"id": 996,
																		"nodeType": "Block",
																		"src": "14471:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 993,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14496:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 992,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14489:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14489:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 995,
																				"nodeType": "ExpressionStatement",
																				"src": "14489:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 997,
																	"nodeType": "TryCatchClause",
																	"src": "14465:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 961,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "14138:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 962,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "14148:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 963,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "14154:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 964,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "14158:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 965,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "14166:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 958,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 945,
																				"src": "14116:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 957,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "14099:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1259_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14099:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1259",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1240,
																	"src": "14099:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14099:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 998,
															"nodeType": "TryStatement",
															"src": "14095:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13866:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13914:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "13906:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13940:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "13932:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13962:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "13954:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13982:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "13974:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14002:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "13994:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14031:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "14018:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14018:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13896:145:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14050:0:0"
									},
									"scope": 1096,
									"src": "13857:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "14806:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "14820:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1292,
														"src": "14820:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14820:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "14816:558:0",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "14837:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1046,
																		"nodeType": "Block",
																		"src": "14991:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1039,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1035,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1033,
																						"src": "15013:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1036,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1259,
																								"src": "15025:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1259_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1037,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1258,
																							"src": "15025:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1038,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15025:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15013:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1045,
																				"nodeType": "IfStatement",
																				"src": "15009:157:0",
																				"trueBody": {
																					"id": 1044,
																					"nodeType": "Block",
																					"src": "15075:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1041,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15104:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1040,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15097:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1042,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15097:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1043,
																							"nodeType": "ExpressionStatement",
																							"src": "15097:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1047,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1034,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1033,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14968:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1047,
																				"src": "14961:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1032,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14961:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14943:47:0"
																	},
																	"src": "14935:245:0"
																},
																{
																	"block": {
																		"id": 1055,
																		"nodeType": "Block",
																		"src": "15215:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1052,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1049,
																							"src": "15240:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1051,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15233:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1053,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15233:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1054,
																				"nodeType": "ExpressionStatement",
																				"src": "15233:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1056,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1050,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1049,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15207:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1056,
																				"src": "15193:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1048,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15193:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15192:22:0"
																	},
																	"src": "15181:81:0"
																},
																{
																	"block": {
																		"id": 1061,
																		"nodeType": "Block",
																		"src": "15269:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1058,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15294:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1057,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15287:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1059,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15287:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1060,
																				"nodeType": "ExpressionStatement",
																				"src": "15287:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1062,
																	"nodeType": "TryCatchClause",
																	"src": "15263:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1026,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "14899:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1027,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1006,
																		"src": "14909:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1028,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "14915:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1029,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "14920:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1030,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "14929:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1023,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "14872:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1022,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "14855:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1259_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14855:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1259",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1258,
																	"src": "14855:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14855:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1063,
															"nodeType": "TryStatement",
															"src": "14851:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14597:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14650:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "14642:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "14668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14698:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "14690:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14727:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "14710:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1009,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14710:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1010,
													"nodeType": "ArrayTypeName",
													"src": "14710:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14757:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "14740:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1012,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1013,
													"nodeType": "ArrayTypeName",
													"src": "14740:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14787:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "14774:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1015,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14774:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14632:165:0"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14806:0:0"
									},
									"scope": 1096,
									"src": "14588:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "15470:109:0",
										"statements": [
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15497:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1094,
														"src": "15480:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1077,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15480:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1078,
															"nodeType": "ArrayTypeName",
															"src": "15480:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15519:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15505:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1080,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15509:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1081,
															"nodeType": "ArrayTypeName",
															"src": "15509:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15480:41:0"
											},
											{
												"expression": {
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1086,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "15531:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1088,
														"indexExpression": {
															"hexValue": "30",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15537:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15531:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1089,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "15542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15531:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "15531:18:0"
											},
											{
												"expression": {
													"id": 1092,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1079,
													"src": "15567:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1074,
												"id": 1093,
												"nodeType": "Return",
												"src": "15560:12:0"
											}
										]
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15395:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15421:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "15413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15412:17:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "15452:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1071,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1072,
													"nodeType": "ArrayTypeName",
													"src": "15452:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15451:18:0"
									},
									"scope": 1096,
									"src": "15386:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1097,
							"src": "589:14992:0",
							"usedErrors": []
						}
					],
					"src": "94:15488:0"
				},
				"id": 0
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1218
						],
						"IERC165": [
							1830
						]
					},
					"id": 1219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1098,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1099,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1219,
							"sourceUnit": 1831,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1101,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1830,
										"src": "357:7:1"
									},
									"id": 1102,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1100,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1218,
							"linearizedBaseContracts": [
								1218,
								1830
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1115,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1130,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1123,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1124,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1126,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1127,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1139,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1146,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 1218,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1158,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1159,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1161,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1162,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1165,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1166,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 1218,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 1218,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 1218,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 1218,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1207,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1208,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1210,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1211,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 1218,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1219,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1259
						],
						"IERC165": [
							1830
						]
					},
					"id": 1260,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1220,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1260,
							"sourceUnit": 1831,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1223,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1830,
										"src": "262:7:2"
									},
									"id": 1224,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1222,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1259,
							"linearizedBaseContracts": [
								1259,
								1830
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1259,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1246,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1247,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1249,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1250,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1259,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1260,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			".deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1218
						],
						"IERC1155MetadataURI": [
							1274
						],
						"IERC165": [
							1830
						]
					},
					"id": 1275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1261,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:3"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1262,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1275,
							"sourceUnit": 1219,
							"src": "142:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1264,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1218,
										"src": "397:8:3"
									},
									"id": 1265,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1263,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:3",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1274,
							"linearizedBaseContracts": [
								1274,
								1218,
								1830
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:3",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "622:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:3"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "657:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:3"
									},
									"scope": 1274,
									"src": "609:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1275,
							"src": "364:310:3",
							"usedErrors": []
						}
					],
					"src": "117:558:3"
				},
				"id": 3
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1569
						]
					},
					"id": 1570,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1277,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1569,
							"linearizedBaseContracts": [
								1569
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1285,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1290,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1569,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1303,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1569",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1569",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1301,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1312,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1311,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1319,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1313,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1321,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1569,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1337,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1338,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1336,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1343,
															1363
														],
														"referencedDeclaration": 1363,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1341,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 1569,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1356,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1357,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1359,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1355,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1383,
															1433
														],
														"referencedDeclaration": 1433,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1361,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 1569,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1376,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1377,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1375,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1383,
															1433
														],
														"referencedDeclaration": 1433,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1374,
												"id": 1381,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 1569,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1400,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1569",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1569",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1398,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1410,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1409,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													1416,
													1418
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1418,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1417,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"arguments": [
														{
															"id": 1423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1419,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1421,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1427,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1428,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1429,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1426,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1431,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 1569,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1444,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1443,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1450,
															1485
														],
														"referencedDeclaration": 1485,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1448,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 1569,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1464,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1463,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													1470,
													1472
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1469,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1472,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1471,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"initialValue": {
													"arguments": [
														{
															"id": 1475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1473,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1479,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1480,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1481,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1478,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1483,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 1569,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1496,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1495,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1502,
															1537
														],
														"referencedDeclaration": 1537,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1500,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 1569,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1516,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1515,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													1522,
													1524
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1536,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1521,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1524,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1536,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1523,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1529,
												"initialValue": {
													"arguments": [
														{
															"id": 1527,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1525,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1531,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1532,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1533,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1530,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1513,
												"id": 1535,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 1569,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "7721:532:4",
										"statements": [
											{
												"condition": {
													"id": 1549,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1540,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1565,
													"nodeType": "Block",
													"src": "7792:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1553,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1563,
																"nodeType": "Block",
																"src": "8184:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1560,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1544,
																					"src": "8209:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1559,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1562,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:4"
																	}
																]
															},
															"id": 1564,
															"nodeType": "IfStatement",
															"src": "7872:365:4",
															"trueBody": {
																"id": 1558,
																"nodeType": "Block",
																"src": "7899:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1542,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1542,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1557,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1566,
												"nodeType": "IfStatement",
												"src": "7731:516:4",
												"trueBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 1550,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1548,
															"id": 1551,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1543,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 1569,
									"src": "7561:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1570,
							"src": "194:8061:4",
							"usedErrors": []
						}
					],
					"src": "101:8155:4"
				},
				"id": 4
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1591
						]
					},
					"id": 1592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1571,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1572,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1591,
							"linearizedBaseContracts": [
								1591
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1577,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1579,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1591,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1586,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1585,
												"id": 1588,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1591,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1592,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1794
						]
					},
					"id": 1795,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1593,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1594,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1794,
							"linearizedBaseContracts": [
								1794
							],
							"name": "Strings",
							"nameLocation": "154:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1597,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1794,
									"src": "168:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1595,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "399:632:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1605,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "601:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1611,
												"nodeType": "IfStatement",
												"src": "597:51:6",
												"trueBody": {
													"id": 1610,
													"nodeType": "Block",
													"src": "613:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1604,
															"id": 1609,
															"nodeType": "Return",
															"src": "627:10:6"
														}
													]
												}
											},
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "657:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"id": 1614,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1600,
													"src": "672:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:6"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "687:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1618,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:6"
											},
											{
												"body": {
													"id": 1629,
													"nodeType": "Block",
													"src": "729:57:6",
													"statements": [
														{
															"expression": {
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:6",
																"subExpression": {
																	"id": 1622,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "743:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1624,
															"nodeType": "ExpressionStatement",
															"src": "743:8:6"
														},
														{
															"expression": {
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1625,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "765:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1628,
															"nodeType": "ExpressionStatement",
															"src": "765:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1619,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "718:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"nodeType": "WhileStatement",
												"src": "711:75:6"
											},
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "795:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1631,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"arguments": [
														{
															"id": 1635,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "827:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1633,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:6"
											},
											{
												"body": {
													"id": 1668,
													"nodeType": "Block",
													"src": "863:131:6",
													"statements": [
														{
															"expression": {
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1641,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "877:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "877:11:6"
														},
														{
															"expression": {
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1645,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "902:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1647,
																	"indexExpression": {
																		"id": 1646,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "909:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1659,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1652,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1657,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1655,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1600,
																									"src": "945:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1656,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1654,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1653,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1658,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1650,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1648,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1663,
															"nodeType": "ExpressionStatement",
															"src": "902:56:6"
														},
														{
															"expression": {
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1667,
															"nodeType": "ExpressionStatement",
															"src": "972:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1638,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "851:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1669,
												"nodeType": "WhileStatement",
												"src": "844:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1672,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "1017:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1670,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1604,
												"id": 1674,
												"nodeType": "Return",
												"src": "1003:21:6"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:6"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "384:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:6"
									},
									"scope": 1794,
									"src": "328:703:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "1210:255:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1684,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "1224:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "1220:54:6",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "1236:38:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1683,
															"id": 1688,
															"nodeType": "Return",
															"src": "1250:13:6"
														}
													]
												}
											},
											{
												"assignments": [
													1692
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "1283:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1694,
												"initialValue": {
													"id": 1693,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1679,
													"src": "1298:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:6"
											},
											{
												"assignments": [
													1696
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "1313:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1698,
												"initialValue": {
													"hexValue": "30",
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:6"
											},
											{
												"body": {
													"id": 1709,
													"nodeType": "Block",
													"src": "1359:57:6",
													"statements": [
														{
															"expression": {
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:6",
																"subExpression": {
																	"id": 1702,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "1373:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1704,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:6"
														},
														{
															"expression": {
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1705,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1692,
																	"src": "1395:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1708,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1699,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "1348:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1710,
												"nodeType": "WhileStatement",
												"src": "1341:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1712,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "1444:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1713,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "1451:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1711,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1717,
															1793
														],
														"referencedDeclaration": 1793,
														"src": "1432:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1715,
												"nodeType": "Return",
												"src": "1425:33:6"
											}
										]
									},
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1157:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:6"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1195:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:6"
									},
									"scope": 1794,
									"src": "1136:329:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "1678:351:6",
										"statements": [
											{
												"assignments": [
													1728
												],
												"declarations": [
													{
														"constant": false,
														"id": 1728,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1792,
														"src": "1688:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1727,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1737,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1732,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "1724:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1729,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:6"
											},
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1738,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "1745:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1740,
														"indexExpression": {
															"hexValue": "30",
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:6"
											},
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1744,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "1770:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1746,
														"indexExpression": {
															"hexValue": "31",
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:6"
											},
											{
												"body": {
													"id": 1778,
													"nodeType": "Block",
													"src": "1840:87:6",
													"statements": [
														{
															"expression": {
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1764,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "1854:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1766,
																	"indexExpression": {
																		"id": 1765,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1751,
																		"src": "1861:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1767,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "1866:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1771,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1768,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1720,
																			"src": "1879:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1773,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:6"
														},
														{
															"expression": {
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1774,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "1905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1777,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1758,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "1828:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1779,
												"initializationExpression": {
													"assignments": [
														1751
													],
													"declarations": [
														{
															"constant": false,
															"id": 1751,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1779,
															"src": "1800:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1750,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1757,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1753,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "1816:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:6",
														"subExpression": {
															"id": 1761,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "1837:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1763,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1781,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "1944:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1789,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "2015:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1787,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1726,
												"id": 1791,
												"nodeType": "Return",
												"src": "2001:21:6"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "1609:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "1624:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:6"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "1663:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1724,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:6"
									},
									"scope": 1794,
									"src": "1588:441:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1795,
							"src": "146:1885:6",
							"usedErrors": []
						}
					],
					"src": "86:1946:6"
				},
				"id": 6
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1818
						],
						"IERC165": [
							1830
						]
					},
					"id": 1819,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1796,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1797,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1819,
							"sourceUnit": 1831,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1799,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1830,
										"src": "754:7:7"
									},
									"id": 1800,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1798,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1818,
							"linearizedBaseContracts": [
								1818,
								1830
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1829
									],
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1809,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1811,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1830_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1830_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1810,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1830",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1815,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1805,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1802,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1818,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1819,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1830
						]
					},
					"id": 1831,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1820,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1821,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1830,
							"linearizedBaseContracts": [
								1830
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1823,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1830,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1831,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			}
		}
	}
}